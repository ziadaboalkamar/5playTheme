[2023-06-20 09:22:32] 1.1- Start cron_job Function
[2023-06-20 09:22:32] 1.2-request Api_url $api_url
[2023-06-20 09:22:33] 1.3-store events of the jop periodically during process 
[2023-06-20 09:22:33] 1.4- fetch data from Api
[2023-06-20 09:22:33] 1.5- View data that returned from API
[2023-06-20 09:22:33] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:22:33] 1.7- get data of each project to select 
[2023-06-20 09:22:33] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:22:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:22:33] 1.10- check project update number [PUN]if not found
[2023-06-20 09:22:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:22:33] 3.9- Finish cron_job Function
[2023-06-20 09:23:38] 1.1- Start cron_job Function
[2023-06-20 09:23:38] 1.2-request Api_url $api_url
[2023-06-20 09:23:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:23:38] 1.4- fetch data from Api
[2023-06-20 09:23:38] 1.5- View data that returned from API
[2023-06-20 09:23:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:23:38] 1.7- get data of each project to select 
[2023-06-20 09:23:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:23:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:23:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:23:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:23:38] 3.9- Finish cron_job Function
[2023-06-20 09:24:32] 1.1- Start cron_job Function
[2023-06-20 09:24:32] 1.2-request Api_url $api_url
[2023-06-20 09:24:33] 1.3-store events of the jop periodically during process 
[2023-06-20 09:24:33] 1.4- fetch data from Api
[2023-06-20 09:24:33] 1.5- View data that returned from API
[2023-06-20 09:24:33] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:24:33] 1.7- get data of each project to select 
[2023-06-20 09:24:33] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:24:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:24:33] 1.10- check project update number [PUN]if not found
[2023-06-20 09:24:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:24:33] 3.9- Finish cron_job Function
[2023-06-20 09:25:37] 1.1- Start cron_job Function
[2023-06-20 09:25:37] 1.2-request Api_url $api_url
[2023-06-20 09:25:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:25:38] 1.4- fetch data from Api
[2023-06-20 09:25:38] 1.5- View data that returned from API
[2023-06-20 09:25:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:25:38] 1.7- get data of each project to select 
[2023-06-20 09:25:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:25:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:25:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:25:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:25:38] 3.9- Finish cron_job Function
[2023-06-20 09:26:33] 1.1- Start cron_job Function
[2023-06-20 09:26:33] 1.2-request Api_url $api_url
[2023-06-20 09:26:34] 1.3-store events of the jop periodically during process 
[2023-06-20 09:26:34] 1.4- fetch data from Api
[2023-06-20 09:26:34] 1.5- View data that returned from API
[2023-06-20 09:26:34] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:26:34] 1.7- get data of each project to select 
[2023-06-20 09:26:34] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:26:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:26:34] 1.10- check project update number [PUN]if not found
[2023-06-20 09:26:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:26:34] 3.9- Finish cron_job Function
[2023-06-20 09:27:37] 1.1- Start cron_job Function
[2023-06-20 09:27:37] 1.2-request Api_url $api_url
[2023-06-20 09:27:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:27:38] 1.4- fetch data from Api
[2023-06-20 09:27:38] 1.5- View data that returned from API
[2023-06-20 09:27:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:27:38] 1.7- get data of each project to select 
[2023-06-20 09:27:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:27:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:27:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:27:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:27:38] 3.9- Finish cron_job Function
[2023-06-20 09:28:34] 1.1- Start cron_job Function
[2023-06-20 09:28:34] 1.2-request Api_url $api_url
[2023-06-20 09:28:35] 1.3-store events of the jop periodically during process 
[2023-06-20 09:28:35] 1.4- fetch data from Api
[2023-06-20 09:28:35] 1.5- View data that returned from API
[2023-06-20 09:28:35] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:28:35] 1.7- get data of each project to select 
[2023-06-20 09:28:35] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:28:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:28:35] 1.10- check project update number [PUN]if not found
[2023-06-20 09:28:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:28:35] 3.9- Finish cron_job Function
[2023-06-20 09:29:37] 1.1- Start cron_job Function
[2023-06-20 09:29:37] 1.2-request Api_url $api_url
[2023-06-20 09:29:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:29:38] 1.4- fetch data from Api
[2023-06-20 09:29:38] 1.5- View data that returned from API
[2023-06-20 09:29:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:29:38] 1.7- get data of each project to select 
[2023-06-20 09:29:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:29:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:29:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:29:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:29:38] 3.9- Finish cron_job Function
[2023-06-20 09:30:33] 1.1- Start cron_job Function
[2023-06-20 09:30:33] 1.2-request Api_url $api_url
[2023-06-20 09:30:34] 1.3-store events of the jop periodically during process 
[2023-06-20 09:30:34] 1.4- fetch data from Api
[2023-06-20 09:30:34] 1.5- View data that returned from API
[2023-06-20 09:30:34] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:30:34] 1.7- get data of each project to select 
[2023-06-20 09:30:34] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:30:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:30:34] 1.10- check project update number [PUN]if not found
[2023-06-20 09:30:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:30:34] 3.9- Finish cron_job Function
[2023-06-20 09:31:38] 1.1- Start cron_job Function
[2023-06-20 09:31:38] 1.2-request Api_url $api_url
[2023-06-20 09:31:39] 1.3-store events of the jop periodically during process 
[2023-06-20 09:31:39] 1.4- fetch data from Api
[2023-06-20 09:31:39] 1.5- View data that returned from API
[2023-06-20 09:31:39] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:31:39] 1.7- get data of each project to select 
[2023-06-20 09:31:39] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:31:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:31:39] 1.10- check project update number [PUN]if not found
[2023-06-20 09:31:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:31:39] 3.9- Finish cron_job Function
[2023-06-20 09:32:33] 1.1- Start cron_job Function
[2023-06-20 09:32:33] 1.2-request Api_url $api_url
[2023-06-20 09:32:34] 1.3-store events of the jop periodically during process 
[2023-06-20 09:32:34] 1.4- fetch data from Api
[2023-06-20 09:32:34] 1.5- View data that returned from API
[2023-06-20 09:32:34] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:32:34] 1.7- get data of each project to select 
[2023-06-20 09:32:34] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:32:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:32:34] 1.10- check project update number [PUN]if not found
[2023-06-20 09:32:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:32:34] 3.9- Finish cron_job Function
[2023-06-20 09:34:34] 1.1- Start cron_job Function
[2023-06-20 09:34:34] 1.2-request Api_url $api_url
[2023-06-20 09:34:34] 1.3-store events of the jop periodically during process 
[2023-06-20 09:34:34] 1.4- fetch data from Api
[2023-06-20 09:34:34] 1.5- View data that returned from API
[2023-06-20 09:34:34] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:34:34] 1.7- get data of each project to select 
[2023-06-20 09:34:34] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:34:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:34:34] 1.10- check project update number [PUN]if not found
[2023-06-20 09:34:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:34:34] 3.9- Finish cron_job Function
[2023-06-20 09:36:33] 1.1- Start cron_job Function
[2023-06-20 09:36:33] 1.2-request Api_url $api_url
[2023-06-20 09:36:34] 1.3-store events of the jop periodically during process 
[2023-06-20 09:36:34] 1.4- fetch data from Api
[2023-06-20 09:36:34] 1.5- View data that returned from API
[2023-06-20 09:36:34] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:36:34] 1.7- get data of each project to select 
[2023-06-20 09:36:34] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:36:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:36:34] 1.10- check project update number [PUN]if not found
[2023-06-20 09:36:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:36:34] 3.9- Finish cron_job Function
[2023-06-20 09:38:34] 1.1- Start cron_job Function
[2023-06-20 09:38:34] 1.2-request Api_url $api_url
[2023-06-20 09:38:35] 1.3-store events of the jop periodically during process 
[2023-06-20 09:38:35] 1.4- fetch data from Api
[2023-06-20 09:38:35] 1.5- View data that returned from API
[2023-06-20 09:38:35] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:38:35] 1.7- get data of each project to select 
[2023-06-20 09:38:35] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:38:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:38:35] 1.10- check project update number [PUN]if not found
[2023-06-20 09:38:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:38:35] 3.9- Finish cron_job Function
[2023-06-20 09:40:35] 1.1- Start cron_job Function
[2023-06-20 09:40:35] 1.2-request Api_url $api_url
[2023-06-20 09:40:36] 1.3-store events of the jop periodically during process 
[2023-06-20 09:40:36] 1.4- fetch data from Api
[2023-06-20 09:40:36] 1.5- View data that returned from API
[2023-06-20 09:40:36] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:40:36] 1.7- get data of each project to select 
[2023-06-20 09:40:36] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:40:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:40:36] 1.10- check project update number [PUN]if not found
[2023-06-20 09:40:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:40:36] 3.9- Finish cron_job Function
[2023-06-20 09:42:35] 1.1- Start cron_job Function
[2023-06-20 09:42:35] 1.2-request Api_url $api_url
[2023-06-20 09:42:36] 1.3-store events of the jop periodically during process 
[2023-06-20 09:42:36] 1.4- fetch data from Api
[2023-06-20 09:42:36] 1.5- View data that returned from API
[2023-06-20 09:42:36] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:42:36] 1.7- get data of each project to select 
[2023-06-20 09:42:36] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:42:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:42:36] 1.10- check project update number [PUN]if not found
[2023-06-20 09:42:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:42:36] 3.9- Finish cron_job Function
[2023-06-20 09:44:37] 1.1- Start cron_job Function
[2023-06-20 09:44:37] 1.2-request Api_url $api_url
[2023-06-20 09:44:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:44:38] 1.4- fetch data from Api
[2023-06-20 09:44:38] 1.5- View data that returned from API
[2023-06-20 09:44:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:44:38] 1.7- get data of each project to select 
[2023-06-20 09:44:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:44:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:44:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:44:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:44:38] 3.9- Finish cron_job Function
[2023-06-20 09:46:36] 1.1- Start cron_job Function
[2023-06-20 09:46:36] 1.2-request Api_url $api_url
[2023-06-20 09:46:37] 1.3-store events of the jop periodically during process 
[2023-06-20 09:46:37] 1.4- fetch data from Api
[2023-06-20 09:46:37] 1.5- View data that returned from API
[2023-06-20 09:46:37] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:46:37] 1.7- get data of each project to select 
[2023-06-20 09:46:37] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:46:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:46:37] 1.10- check project update number [PUN]if not found
[2023-06-20 09:46:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:46:37] 3.9- Finish cron_job Function
[2023-06-20 09:48:37] 1.1- Start cron_job Function
[2023-06-20 09:48:37] 1.2-request Api_url $api_url
[2023-06-20 09:48:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:48:38] 1.4- fetch data from Api
[2023-06-20 09:48:38] 1.5- View data that returned from API
[2023-06-20 09:48:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:48:38] 1.7- get data of each project to select 
[2023-06-20 09:48:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:48:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:48:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:48:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:48:38] 3.9- Finish cron_job Function
[2023-06-20 09:50:37] 1.1- Start cron_job Function
[2023-06-20 09:50:37] 1.2-request Api_url $api_url
[2023-06-20 09:50:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:50:38] 1.4- fetch data from Api
[2023-06-20 09:50:38] 1.5- View data that returned from API
[2023-06-20 09:50:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:50:38] 1.7- get data of each project to select 
[2023-06-20 09:50:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:50:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:50:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:50:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:50:38] 3.9- Finish cron_job Function
[2023-06-20 09:52:37] 1.1- Start cron_job Function
[2023-06-20 09:52:37] 1.2-request Api_url $api_url
[2023-06-20 09:52:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:52:38] 1.4- fetch data from Api
[2023-06-20 09:52:38] 1.5- View data that returned from API
[2023-06-20 09:52:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:52:38] 1.7- get data of each project to select 
[2023-06-20 09:52:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:52:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:52:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:52:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:52:38] 3.9- Finish cron_job Function
[2023-06-20 09:54:38] 1.1- Start cron_job Function
[2023-06-20 09:54:38] 1.2-request Api_url $api_url
[2023-06-20 09:54:38] 1.3-store events of the jop periodically during process 
[2023-06-20 09:54:38] 1.4- fetch data from Api
[2023-06-20 09:54:38] 1.5- View data that returned from API
[2023-06-20 09:54:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:54:38] 1.7- get data of each project to select 
[2023-06-20 09:54:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:54:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:54:38] 1.10- check project update number [PUN]if not found
[2023-06-20 09:54:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:54:38] 3.9- Finish cron_job Function
[2023-06-20 09:55:38] 1.1- Start cron_job Function
[2023-06-20 09:55:38] 1.2-request Api_url $api_url
[2023-06-20 09:55:39] 1.3-store events of the jop periodically during process 
[2023-06-20 09:55:39] 1.4- fetch data from Api
[2023-06-20 09:55:39] 1.5- View data that returned from API
[2023-06-20 09:55:39] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:55:39] 1.7- get data of each project to select 
[2023-06-20 09:55:39] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:55:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:55:39] 1.10- check project update number [PUN]if not found
[2023-06-20 09:55:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:55:39] 3.9- Finish cron_job Function
[2023-06-20 09:57:38] 1.1- Start cron_job Function
[2023-06-20 09:57:38] 1.2-request Api_url $api_url
[2023-06-20 09:57:39] 1.3-store events of the jop periodically during process 
[2023-06-20 09:57:39] 1.4- fetch data from Api
[2023-06-20 09:57:39] 1.5- View data that returned from API
[2023-06-20 09:57:39] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:57:39] 1.7- get data of each project to select 
[2023-06-20 09:57:39] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:57:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:57:39] 1.10- check project update number [PUN]if not found
[2023-06-20 09:57:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:57:39] 3.9- Finish cron_job Function
[2023-06-20 09:59:39] 1.1- Start cron_job Function
[2023-06-20 09:59:39] 1.2-request Api_url $api_url
[2023-06-20 09:59:40] 1.3-store events of the jop periodically during process 
[2023-06-20 09:59:40] 1.4- fetch data from Api
[2023-06-20 09:59:40] 1.5- View data that returned from API
[2023-06-20 09:59:40] 1.6- get and View projects & tags that returned from  API
[2023-06-20 09:59:40] 1.7- get data of each project to select 
[2023-06-20 09:59:40] 1.8- The selected project Name:my android. id: 7
[2023-06-20 09:59:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 09:59:40] 1.10- check project update number [PUN]if not found
[2023-06-20 09:59:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 09:59:40] 3.9- Finish cron_job Function
[2023-06-20 10:01:40] 1.1- Start cron_job Function
[2023-06-20 10:01:40] 1.2-request Api_url $api_url
[2023-06-20 10:01:41] 1.3-store events of the jop periodically during process 
[2023-06-20 10:01:41] 1.4- fetch data from Api
[2023-06-20 10:01:41] 1.5- View data that returned from API
[2023-06-20 10:01:41] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:01:41] 1.7- get data of each project to select 
[2023-06-20 10:01:41] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:01:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:01:41] 1.10- check project update number [PUN]if not found
[2023-06-20 10:01:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:01:41] 3.9- Finish cron_job Function
[2023-06-20 10:03:42] 1.1- Start cron_job Function
[2023-06-20 10:03:42] 1.2-request Api_url $api_url
[2023-06-20 10:03:42] 1.3-store events of the jop periodically during process 
[2023-06-20 10:03:42] 1.4- fetch data from Api
[2023-06-20 10:03:42] 1.5- View data that returned from API
[2023-06-20 10:03:42] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:03:42] 1.7- get data of each project to select 
[2023-06-20 10:03:42] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:03:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:03:42] 1.10- check project update number [PUN]if not found
[2023-06-20 10:03:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:03:42] 3.9- Finish cron_job Function
[2023-06-20 10:05:42] 1.1- Start cron_job Function
[2023-06-20 10:05:42] 1.2-request Api_url $api_url
[2023-06-20 10:05:43] 1.3-store events of the jop periodically during process 
[2023-06-20 10:05:43] 1.4- fetch data from Api
[2023-06-20 10:05:43] 1.5- View data that returned from API
[2023-06-20 10:05:43] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:05:43] 1.7- get data of each project to select 
[2023-06-20 10:05:43] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:05:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:05:43] 1.10- check project update number [PUN]if not found
[2023-06-20 10:05:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:05:43] 3.9- Finish cron_job Function
[2023-06-20 10:08:19] 1.1- Start cron_job Function
[2023-06-20 10:08:19] 1.2-request Api_url $api_url
[2023-06-20 10:08:20] 1.3-store events of the jop periodically during process 
[2023-06-20 10:08:20] 1.4- fetch data from Api
[2023-06-20 10:08:20] 1.5- View data that returned from API
[2023-06-20 10:08:20] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:08:20] 1.7- get data of each project to select 
[2023-06-20 10:08:20] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:08:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:08:20] 1.10- check project update number [PUN]if not found
[2023-06-20 10:08:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:08:20] 3.9- Finish cron_job Function
[2023-06-20 10:09:20] 1.1- Start cron_job Function
[2023-06-20 10:09:20] 1.2-request Api_url $api_url
[2023-06-20 10:09:21] 1.3-store events of the jop periodically during process 
[2023-06-20 10:09:21] 1.4- fetch data from Api
[2023-06-20 10:09:21] 1.5- View data that returned from API
[2023-06-20 10:09:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:09:21] 1.7- get data of each project to select 
[2023-06-20 10:09:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:09:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:09:21] 1.10- check project update number [PUN]if not found
[2023-06-20 10:09:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:09:21] 3.9- Finish cron_job Function
[2023-06-20 10:10:44] 1.1- Start cron_job Function
[2023-06-20 10:10:44] 1.2-request Api_url $api_url
[2023-06-20 10:10:45] 1.3-store events of the jop periodically during process 
[2023-06-20 10:10:45] 1.4- fetch data from Api
[2023-06-20 10:10:45] 1.5- View data that returned from API
[2023-06-20 10:10:45] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:10:45] 1.7- get data of each project to select 
[2023-06-20 10:10:45] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:10:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:10:45] 1.10- check project update number [PUN]if not found
[2023-06-20 10:10:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:10:45] 3.9- Finish cron_job Function
[2023-06-20 10:12:37] 1.1- Start cron_job Function
[2023-06-20 10:12:37] 1.2-request Api_url $api_url
[2023-06-20 10:12:38] 1.3-store events of the jop periodically during process 
[2023-06-20 10:12:38] 1.4- fetch data from Api
[2023-06-20 10:12:38] 1.5- View data that returned from API
[2023-06-20 10:12:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:12:38] 1.7- get data of each project to select 
[2023-06-20 10:12:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:12:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:12:38] 1.10- check project update number [PUN]if not found
[2023-06-20 10:12:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:12:38] 3.9- Finish cron_job Function
[2023-06-20 10:13:43] 1.1- Start cron_job Function
[2023-06-20 10:13:43] 1.2-request Api_url $api_url
[2023-06-20 10:13:44] 1.3-store events of the jop periodically during process 
[2023-06-20 10:13:44] 1.4- fetch data from Api
[2023-06-20 10:13:44] 1.5- View data that returned from API
[2023-06-20 10:13:44] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:13:44] 1.7- get data of each project to select 
[2023-06-20 10:13:44] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:13:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:13:44] 1.10- check project update number [PUN]if not found
[2023-06-20 10:13:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:13:44] 3.9- Finish cron_job Function
[2023-06-20 10:14:43] 1.1- Start cron_job Function
[2023-06-20 10:14:43] 1.2-request Api_url $api_url
[2023-06-20 10:14:44] 1.3-store events of the jop periodically during process 
[2023-06-20 10:14:44] 1.4- fetch data from Api
[2023-06-20 10:14:44] 1.5- View data that returned from API
[2023-06-20 10:14:44] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:14:44] 1.7- get data of each project to select 
[2023-06-20 10:14:44] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:14:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:14:44] 1.10- check project update number [PUN]if not found
[2023-06-20 10:14:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:14:44] 3.9- Finish cron_job Function
[2023-06-20 10:15:23] 1.1- Start cron_job Function
[2023-06-20 10:15:23] 1.2-request Api_url $api_url
[2023-06-20 10:15:24] 1.3-store events of the jop periodically during process 
[2023-06-20 10:15:24] 1.4- fetch data from Api
[2023-06-20 10:15:24] 1.5- View data that returned from API
[2023-06-20 10:15:24] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:15:24] 1.7- get data of each project to select 
[2023-06-20 10:15:24] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:15:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:15:24] 1.10- check project update number [PUN]if not found
[2023-06-20 10:15:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:15:24] 3.9- Finish cron_job Function
[2023-06-20 10:16:45] 1.1- Start cron_job Function
[2023-06-20 10:16:45] 1.2-request Api_url $api_url
[2023-06-20 10:16:45] 1.3-store events of the jop periodically during process 
[2023-06-20 10:16:45] 1.4- fetch data from Api
[2023-06-20 10:16:45] 1.5- View data that returned from API
[2023-06-20 10:16:45] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:16:45] 1.7- get data of each project to select 
[2023-06-20 10:16:45] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:16:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:16:45] 1.10- check project update number [PUN]if not found
[2023-06-20 10:16:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:16:45] 3.9- Finish cron_job Function
[2023-06-20 10:18:45] 1.1- Start cron_job Function
[2023-06-20 10:18:45] 1.2-request Api_url $api_url
[2023-06-20 10:18:46] 1.3-store events of the jop periodically during process 
[2023-06-20 10:18:46] 1.4- fetch data from Api
[2023-06-20 10:18:46] 1.5- View data that returned from API
[2023-06-20 10:18:46] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:18:46] 1.7- get data of each project to select 
[2023-06-20 10:18:46] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:18:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:18:46] 1.10- check project update number [PUN]if not found
[2023-06-20 10:18:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:18:46] 3.9- Finish cron_job Function
[2023-06-20 10:20:44] 1.1- Start cron_job Function
[2023-06-20 10:20:44] 1.2-request Api_url $api_url
[2023-06-20 10:20:45] 1.3-store events of the jop periodically during process 
[2023-06-20 10:20:45] 1.4- fetch data from Api
[2023-06-20 10:20:45] 1.5- View data that returned from API
[2023-06-20 10:20:45] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:20:45] 1.7- get data of each project to select 
[2023-06-20 10:20:45] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:20:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:20:45] 1.10- check project update number [PUN]if not found
[2023-06-20 10:20:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:20:45] 3.9- Finish cron_job Function
[2023-06-20 10:28:02] 1.1- Start cron_job Function
[2023-06-20 10:28:02] 1.2-request Api_url $api_url
[2023-06-20 10:28:02] 1.3-store events of the jop periodically during process 
[2023-06-20 10:28:02] 1.4- fetch data from Api
[2023-06-20 10:28:02] 1.5- View data that returned from API
[2023-06-20 10:28:02] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:28:02] 1.7- get data of each project to select 
[2023-06-20 10:28:02] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:28:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:28:02] 1.10- check project update number [PUN]if not found
[2023-06-20 10:28:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:28:02] 3.9- Finish cron_job Function
[2023-06-20 10:30:20] 1.1- Start cron_job Function
[2023-06-20 10:30:20] 1.2-request Api_url $api_url
[2023-06-20 10:30:21] 1.3-store events of the jop periodically during process 
[2023-06-20 10:30:21] 1.4- fetch data from Api
[2023-06-20 10:30:21] 1.5- View data that returned from API
[2023-06-20 10:30:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:30:21] 1.7- get data of each project to select 
[2023-06-20 10:30:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:30:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:30:21] 1.10- check project update number [PUN]if not found
[2023-06-20 10:30:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:30:21] 3.9- Finish cron_job Function
[2023-06-20 10:32:11] 1.1- Start cron_job Function
[2023-06-20 10:32:11] 1.2-request Api_url $api_url
[2023-06-20 10:32:12] 1.3-store events of the jop periodically during process 
[2023-06-20 10:32:12] 1.4- fetch data from Api
[2023-06-20 10:32:12] 1.5- View data that returned from API
[2023-06-20 10:32:12] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:32:12] 1.7- get data of each project to select 
[2023-06-20 10:32:12] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:32:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:32:12] 1.10- check project update number [PUN]if not found
[2023-06-20 10:32:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:32:12] 2.2- check if project update number[pun > 0]
[2023-06-20 10:32:12] 2.3- store data into history table
[2023-06-20 10:32:12] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:14] 3.1- start_process
[2023-06-20 10:32:14] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-20 10:32:14] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:15] 3.1- start_process
[2023-06-20 10:32:15] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-20 10:32:15] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:16] 3.1- start_process
[2023-06-20 10:32:16] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-20 10:32:16] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:17] 3.1- start_process
[2023-06-20 10:32:17] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-20 10:32:17] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:18] 3.1- start_process
[2023-06-20 10:32:18] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-20 10:32:18] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:19] 3.1- start_process
[2023-06-20 10:32:19] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-20 10:32:19] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:20] 3.1- start_process
[2023-06-20 10:32:20] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-20 10:32:20] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.1- start_process
[2023-06-20 10:32:21] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-20 10:32:21] 3.3- if aun status > 0 
[2023-06-20 10:32:21] 3.9- Finish cron_job Function
[2023-06-20 10:37:20] 1.1- Start cron_job Function
[2023-06-20 10:37:20] 1.2-request Api_url $api_url
[2023-06-20 10:37:20] 1.3-store events of the jop periodically during process 
[2023-06-20 10:37:20] 1.4- fetch data from Api
[2023-06-20 10:37:20] 1.5- View data that returned from API
[2023-06-20 10:37:20] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:37:20] 1.7- get data of each project to select 
[2023-06-20 10:37:20] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:37:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:37:20] 1.10- check project update number [PUN]if not found
[2023-06-20 10:37:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:37:20] 3.9- Finish cron_job Function
[2023-06-20 10:38:31] 1.1- Start cron_job Function
[2023-06-20 10:38:31] 1.2-request Api_url $api_url
[2023-06-20 10:38:32] 1.3-store events of the jop periodically during process 
[2023-06-20 10:38:32] 1.4- fetch data from Api
[2023-06-20 10:38:32] 1.5- View data that returned from API
[2023-06-20 10:38:32] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:38:32] 1.7- get data of each project to select 
[2023-06-20 10:38:32] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:38:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:38:32] 1.10- check project update number [PUN]if not found
[2023-06-20 10:38:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:38:32] 3.9- Finish cron_job Function
[2023-06-20 10:39:08] 1.1- Start cron_job Function
[2023-06-20 10:39:08] 1.2-request Api_url $api_url
[2023-06-20 10:39:09] 1.3-store events of the jop periodically during process 
[2023-06-20 10:39:09] 1.4- fetch data from Api
[2023-06-20 10:39:09] 1.5- View data that returned from API
[2023-06-20 10:39:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:39:09] 1.7- get data of each project to select 
[2023-06-20 10:39:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:39:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:39:09] 1.10- check project update number [PUN]if not found
[2023-06-20 10:39:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:39:09] 3.9- Finish cron_job Function
[2023-06-20 10:40:49] 1.1- Start cron_job Function
[2023-06-20 10:40:49] 1.2-request Api_url $api_url
[2023-06-20 10:40:50] 1.3-store events of the jop periodically during process 
[2023-06-20 10:40:50] 1.4- fetch data from Api
[2023-06-20 10:40:50] 1.5- View data that returned from API
[2023-06-20 10:40:50] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:40:50] 1.7- get data of each project to select 
[2023-06-20 10:40:50] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:40:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:40:50] 1.10- check project update number [PUN]if not found
[2023-06-20 10:40:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:40:50] 3.9- Finish cron_job Function
[2023-06-20 10:42:25] 1.1- Start cron_job Function
[2023-06-20 10:42:25] 1.2-request Api_url $api_url
[2023-06-20 10:42:26] 1.3-store events of the jop periodically during process 
[2023-06-20 10:42:26] 1.4- fetch data from Api
[2023-06-20 10:42:26] 1.5- View data that returned from API
[2023-06-20 10:42:26] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:42:26] 1.7- get data of each project to select 
[2023-06-20 10:42:26] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:42:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:42:26] 1.10- check project update number [PUN]if not found
[2023-06-20 10:42:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:42:26] 3.9- Finish cron_job Function
[2023-06-20 10:43:26] 1.1- Start cron_job Function
[2023-06-20 10:43:26] 1.2-request Api_url $api_url
[2023-06-20 10:43:27] 1.3-store events of the jop periodically during process 
[2023-06-20 10:43:27] 1.4- fetch data from Api
[2023-06-20 10:43:27] 1.5- View data that returned from API
[2023-06-20 10:43:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:43:27] 1.7- get data of each project to select 
[2023-06-20 10:43:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:43:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:43:27] 1.10- check project update number [PUN]if not found
[2023-06-20 10:43:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:43:27] 3.9- Finish cron_job Function
[2023-06-20 10:44:25] 1.1- Start cron_job Function
[2023-06-20 10:44:25] 1.2-request Api_url $api_url
[2023-06-20 10:44:26] 1.3-store events of the jop periodically during process 
[2023-06-20 10:44:26] 1.4- fetch data from Api
[2023-06-20 10:44:26] 1.5- View data that returned from API
[2023-06-20 10:44:26] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:44:26] 1.7- get data of each project to select 
[2023-06-20 10:44:26] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:44:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:44:26] 1.10- check project update number [PUN]if not found
[2023-06-20 10:44:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:44:26] 3.9- Finish cron_job Function
[2023-06-20 10:45:27] 1.1- Start cron_job Function
[2023-06-20 10:45:27] 1.2-request Api_url $api_url
[2023-06-20 10:45:27] 1.3-store events of the jop periodically during process 
[2023-06-20 10:45:27] 1.4- fetch data from Api
[2023-06-20 10:45:27] 1.5- View data that returned from API
[2023-06-20 10:45:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:45:27] 1.7- get data of each project to select 
[2023-06-20 10:45:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:45:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:45:27] 1.10- check project update number [PUN]if not found
[2023-06-20 10:45:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:45:27] 3.9- Finish cron_job Function
[2023-06-20 10:46:23] 1.1- Start cron_job Function
[2023-06-20 10:46:23] 1.2-request Api_url $api_url
[2023-06-20 10:46:24] 1.3-store events of the jop periodically during process 
[2023-06-20 10:46:24] 1.4- fetch data from Api
[2023-06-20 10:46:24] 1.5- View data that returned from API
[2023-06-20 10:46:24] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:46:24] 1.7- get data of each project to select 
[2023-06-20 10:46:24] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:46:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:46:24] 1.10- check project update number [PUN]if not found
[2023-06-20 10:46:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:46:24] 3.9- Finish cron_job Function
[2023-06-20 10:47:26] 1.1- Start cron_job Function
[2023-06-20 10:47:26] 1.2-request Api_url $api_url
[2023-06-20 10:47:27] 1.3-store events of the jop periodically during process 
[2023-06-20 10:47:27] 1.4- fetch data from Api
[2023-06-20 10:47:27] 1.5- View data that returned from API
[2023-06-20 10:47:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:47:27] 1.7- get data of each project to select 
[2023-06-20 10:47:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:47:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:47:27] 1.10- check project update number [PUN]if not found
[2023-06-20 10:47:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:47:27] 3.9- Finish cron_job Function
[2023-06-20 10:48:27] 1.1- Start cron_job Function
[2023-06-20 10:48:27] 1.2-request Api_url $api_url
[2023-06-20 10:48:28] 1.3-store events of the jop periodically during process 
[2023-06-20 10:48:28] 1.4- fetch data from Api
[2023-06-20 10:48:28] 1.5- View data that returned from API
[2023-06-20 10:48:28] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:48:28] 1.7- get data of each project to select 
[2023-06-20 10:48:28] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:48:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:48:28] 1.10- check project update number [PUN]if not found
[2023-06-20 10:48:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:48:28] 3.9- Finish cron_job Function
[2023-06-20 10:49:26] 1.1- Start cron_job Function
[2023-06-20 10:49:26] 1.2-request Api_url $api_url
[2023-06-20 10:49:27] 1.3-store events of the jop periodically during process 
[2023-06-20 10:49:27] 1.4- fetch data from Api
[2023-06-20 10:49:27] 1.5- View data that returned from API
[2023-06-20 10:49:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:49:27] 1.7- get data of each project to select 
[2023-06-20 10:49:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:49:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:49:27] 1.10- check project update number [PUN]if not found
[2023-06-20 10:49:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:49:27] 3.9- Finish cron_job Function
[2023-06-20 10:50:27] 1.1- Start cron_job Function
[2023-06-20 10:50:27] 1.2-request Api_url $api_url
[2023-06-20 10:50:28] 1.3-store events of the jop periodically during process 
[2023-06-20 10:50:28] 1.4- fetch data from Api
[2023-06-20 10:50:28] 1.5- View data that returned from API
[2023-06-20 10:50:28] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:50:28] 1.7- get data of each project to select 
[2023-06-20 10:50:28] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:50:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:50:28] 1.10- check project update number [PUN]if not found
[2023-06-20 10:50:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:50:28] 3.9- Finish cron_job Function
[2023-06-20 10:51:27] 1.1- Start cron_job Function
[2023-06-20 10:51:27] 1.2-request Api_url $api_url
[2023-06-20 10:51:27] 1.3-store events of the jop periodically during process 
[2023-06-20 10:51:27] 1.4- fetch data from Api
[2023-06-20 10:51:27] 1.5- View data that returned from API
[2023-06-20 10:51:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:51:27] 1.7- get data of each project to select 
[2023-06-20 10:51:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:51:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:51:27] 1.10- check project update number [PUN]if not found
[2023-06-20 10:51:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:51:27] 3.9- Finish cron_job Function
[2023-06-20 10:52:27] 1.1- Start cron_job Function
[2023-06-20 10:52:27] 1.2-request Api_url $api_url
[2023-06-20 10:52:28] 1.3-store events of the jop periodically during process 
[2023-06-20 10:52:28] 1.4- fetch data from Api
[2023-06-20 10:52:28] 1.5- View data that returned from API
[2023-06-20 10:52:28] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:52:28] 1.7- get data of each project to select 
[2023-06-20 10:52:28] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:52:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:52:28] 1.10- check project update number [PUN]if not found
[2023-06-20 10:52:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:52:28] 3.9- Finish cron_job Function
[2023-06-20 10:54:16] 1.1- Start cron_job Function
[2023-06-20 10:54:16] 1.2-request Api_url $api_url
[2023-06-20 10:54:17] 1.3-store events of the jop periodically during process 
[2023-06-20 10:54:17] 1.4- fetch data from Api
[2023-06-20 10:54:17] 1.5- View data that returned from API
[2023-06-20 10:54:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:54:17] 1.7- get data of each project to select 
[2023-06-20 10:54:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:54:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:54:17] 1.10- check project update number [PUN]if not found
[2023-06-20 10:54:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:54:17] 3.9- Finish cron_job Function
[2023-06-20 10:56:16] 1.1- Start cron_job Function
[2023-06-20 10:56:16] 1.2-request Api_url $api_url
[2023-06-20 10:56:17] 1.3-store events of the jop periodically during process 
[2023-06-20 10:56:17] 1.4- fetch data from Api
[2023-06-20 10:56:17] 1.5- View data that returned from API
[2023-06-20 10:56:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:56:17] 1.7- get data of each project to select 
[2023-06-20 10:56:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:56:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:56:17] 1.10- check project update number [PUN]if not found
[2023-06-20 10:56:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:56:17] 3.9- Finish cron_job Function
[2023-06-20 10:58:15] 1.1- Start cron_job Function
[2023-06-20 10:58:15] 1.2-request Api_url $api_url
[2023-06-20 10:58:16] 1.3-store events of the jop periodically during process 
[2023-06-20 10:58:16] 1.4- fetch data from Api
[2023-06-20 10:58:16] 1.5- View data that returned from API
[2023-06-20 10:58:16] 1.6- get and View projects & tags that returned from  API
[2023-06-20 10:58:16] 1.7- get data of each project to select 
[2023-06-20 10:58:16] 1.8- The selected project Name:my android. id: 7
[2023-06-20 10:58:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 10:58:16] 1.10- check project update number [PUN]if not found
[2023-06-20 10:58:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 10:58:16] 3.9- Finish cron_job Function
[2023-06-20 11:00:17] 1.1- Start cron_job Function
[2023-06-20 11:00:17] 1.2-request Api_url $api_url
[2023-06-20 11:00:17] 1.3-store events of the jop periodically during process 
[2023-06-20 11:00:17] 1.4- fetch data from Api
[2023-06-20 11:00:17] 1.5- View data that returned from API
[2023-06-20 11:00:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:00:17] 1.7- get data of each project to select 
[2023-06-20 11:00:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:00:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:00:17] 1.10- check project update number [PUN]if not found
[2023-06-20 11:00:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:00:17] 3.9- Finish cron_job Function
[2023-06-20 11:01:16] 1.1- Start cron_job Function
[2023-06-20 11:01:16] 1.2-request Api_url $api_url
[2023-06-20 11:01:17] 1.3-store events of the jop periodically during process 
[2023-06-20 11:01:17] 1.4- fetch data from Api
[2023-06-20 11:01:17] 1.5- View data that returned from API
[2023-06-20 11:01:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:01:17] 1.7- get data of each project to select 
[2023-06-20 11:01:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:01:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:01:17] 1.10- check project update number [PUN]if not found
[2023-06-20 11:01:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:01:17] 3.9- Finish cron_job Function
[2023-06-20 11:02:30] 1.1- Start cron_job Function
[2023-06-20 11:02:30] 1.2-request Api_url $api_url
[2023-06-20 11:02:31] 1.3-store events of the jop periodically during process 
[2023-06-20 11:02:31] 1.4- fetch data from Api
[2023-06-20 11:02:31] 1.5- View data that returned from API
[2023-06-20 11:02:31] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:02:31] 1.7- get data of each project to select 
[2023-06-20 11:02:31] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:02:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:02:31] 1.10- check project update number [PUN]if not found
[2023-06-20 11:02:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:02:31] 3.9- Finish cron_job Function
[2023-06-20 11:03:18] 1.1- Start cron_job Function
[2023-06-20 11:03:18] 1.2-request Api_url $api_url
[2023-06-20 11:03:18] 1.3-store events of the jop periodically during process 
[2023-06-20 11:03:18] 1.4- fetch data from Api
[2023-06-20 11:03:18] 1.5- View data that returned from API
[2023-06-20 11:03:18] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:03:18] 1.7- get data of each project to select 
[2023-06-20 11:03:18] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:03:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:03:18] 1.10- check project update number [PUN]if not found
[2023-06-20 11:03:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:03:18] 3.9- Finish cron_job Function
[2023-06-20 11:04:30] 1.1- Start cron_job Function
[2023-06-20 11:04:30] 1.2-request Api_url $api_url
[2023-06-20 11:04:31] 1.3-store events of the jop periodically during process 
[2023-06-20 11:04:31] 1.4- fetch data from Api
[2023-06-20 11:04:31] 1.5- View data that returned from API
[2023-06-20 11:04:31] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:04:31] 1.7- get data of each project to select 
[2023-06-20 11:04:31] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:04:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:04:31] 1.10- check project update number [PUN]if not found
[2023-06-20 11:04:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:04:31] 3.9- Finish cron_job Function
[2023-06-20 11:05:16] 1.1- Start cron_job Function
[2023-06-20 11:05:16] 1.2-request Api_url $api_url
[2023-06-20 11:05:17] 1.3-store events of the jop periodically during process 
[2023-06-20 11:05:17] 1.4- fetch data from Api
[2023-06-20 11:05:17] 1.5- View data that returned from API
[2023-06-20 11:05:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:05:17] 1.7- get data of each project to select 
[2023-06-20 11:05:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:05:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:05:17] 1.10- check project update number [PUN]if not found
[2023-06-20 11:05:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:05:17] 3.9- Finish cron_job Function
[2023-06-20 11:06:26] 1.1- Start cron_job Function
[2023-06-20 11:06:26] 1.2-request Api_url $api_url
[2023-06-20 11:06:26] 1.3-store events of the jop periodically during process 
[2023-06-20 11:06:26] 1.4- fetch data from Api
[2023-06-20 11:06:26] 1.5- View data that returned from API
[2023-06-20 11:06:26] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:06:26] 1.7- get data of each project to select 
[2023-06-20 11:06:26] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:06:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:06:26] 1.10- check project update number [PUN]if not found
[2023-06-20 11:06:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:06:26] 3.9- Finish cron_job Function
[2023-06-20 11:07:14] 1.1- Start cron_job Function
[2023-06-20 11:07:14] 1.2-request Api_url $api_url
[2023-06-20 11:07:15] 1.3-store events of the jop periodically during process 
[2023-06-20 11:07:15] 1.4- fetch data from Api
[2023-06-20 11:07:15] 1.5- View data that returned from API
[2023-06-20 11:07:15] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:07:15] 1.7- get data of each project to select 
[2023-06-20 11:07:15] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:07:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:07:15] 1.10- check project update number [PUN]if not found
[2023-06-20 11:07:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:07:15] 3.9- Finish cron_job Function
[2023-06-20 11:08:29] 1.1- Start cron_job Function
[2023-06-20 11:08:29] 1.2-request Api_url $api_url
[2023-06-20 11:08:30] 1.3-store events of the jop periodically during process 
[2023-06-20 11:08:30] 1.4- fetch data from Api
[2023-06-20 11:08:30] 1.5- View data that returned from API
[2023-06-20 11:08:30] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:08:30] 1.7- get data of each project to select 
[2023-06-20 11:08:30] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:08:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:08:30] 1.10- check project update number [PUN]if not found
[2023-06-20 11:08:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:08:30] 3.9- Finish cron_job Function
[2023-06-20 11:09:49] 1.1- Start cron_job Function
[2023-06-20 11:09:49] 1.2-request Api_url $api_url
[2023-06-20 11:09:50] 1.3-store events of the jop periodically during process 
[2023-06-20 11:09:50] 1.4- fetch data from Api
[2023-06-20 11:09:50] 1.5- View data that returned from API
[2023-06-20 11:09:50] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:09:50] 1.7- get data of each project to select 
[2023-06-20 11:09:50] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:09:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:09:50] 1.10- check project update number [PUN]if not found
[2023-06-20 11:09:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:09:50] 3.9- Finish cron_job Function
[2023-06-20 11:10:39] 1.1- Start cron_job Function
[2023-06-20 11:10:39] 1.2-request Api_url $api_url
[2023-06-20 11:10:40] 1.3-store events of the jop periodically during process 
[2023-06-20 11:10:40] 1.4- fetch data from Api
[2023-06-20 11:10:40] 1.5- View data that returned from API
[2023-06-20 11:10:40] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:10:40] 1.7- get data of each project to select 
[2023-06-20 11:10:40] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:10:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:10:40] 1.10- check project update number [PUN]if not found
[2023-06-20 11:10:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:10:40] 3.9- Finish cron_job Function
[2023-06-20 11:12:41] 1.1- Start cron_job Function
[2023-06-20 11:12:41] 1.2-request Api_url $api_url
[2023-06-20 11:12:42] 1.3-store events of the jop periodically during process 
[2023-06-20 11:12:42] 1.4- fetch data from Api
[2023-06-20 11:12:42] 1.5- View data that returned from API
[2023-06-20 11:12:42] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:12:42] 1.7- get data of each project to select 
[2023-06-20 11:12:42] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:12:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:12:42] 1.10- check project update number [PUN]if not found
[2023-06-20 11:12:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:12:42] 3.9- Finish cron_job Function
[2023-06-20 11:13:42] 1.1- Start cron_job Function
[2023-06-20 11:13:42] 1.2-request Api_url $api_url
[2023-06-20 11:13:43] 1.3-store events of the jop periodically during process 
[2023-06-20 11:13:43] 1.4- fetch data from Api
[2023-06-20 11:13:43] 1.5- View data that returned from API
[2023-06-20 11:13:43] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:13:43] 1.7- get data of each project to select 
[2023-06-20 11:13:43] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:13:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:13:43] 1.10- check project update number [PUN]if not found
[2023-06-20 11:13:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:13:43] 3.9- Finish cron_job Function
[2023-06-20 11:14:41] 1.1- Start cron_job Function
[2023-06-20 11:14:41] 1.2-request Api_url $api_url
[2023-06-20 11:14:42] 1.3-store events of the jop periodically during process 
[2023-06-20 11:14:42] 1.4- fetch data from Api
[2023-06-20 11:14:42] 1.5- View data that returned from API
[2023-06-20 11:14:42] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:14:42] 1.7- get data of each project to select 
[2023-06-20 11:14:42] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:14:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:14:42] 1.10- check project update number [PUN]if not found
[2023-06-20 11:14:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:14:42] 3.9- Finish cron_job Function
[2023-06-20 11:15:38] 1.1- Start cron_job Function
[2023-06-20 11:15:38] 1.2-request Api_url $api_url
[2023-06-20 11:15:38] 1.3-store events of the jop periodically during process 
[2023-06-20 11:15:38] 1.4- fetch data from Api
[2023-06-20 11:15:38] 1.5- View data that returned from API
[2023-06-20 11:15:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:15:38] 1.7- get data of each project to select 
[2023-06-20 11:15:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:15:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:15:38] 1.10- check project update number [PUN]if not found
[2023-06-20 11:15:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:15:38] 3.9- Finish cron_job Function
[2023-06-20 11:16:41] 1.1- Start cron_job Function
[2023-06-20 11:16:41] 1.2-request Api_url $api_url
[2023-06-20 11:16:42] 1.3-store events of the jop periodically during process 
[2023-06-20 11:16:42] 1.4- fetch data from Api
[2023-06-20 11:16:42] 1.5- View data that returned from API
[2023-06-20 11:16:42] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:16:42] 1.7- get data of each project to select 
[2023-06-20 11:16:42] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:16:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:16:42] 1.10- check project update number [PUN]if not found
[2023-06-20 11:16:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:16:42] 3.9- Finish cron_job Function
[2023-06-20 11:18:43] 1.1- Start cron_job Function
[2023-06-20 11:18:43] 1.2-request Api_url $api_url
[2023-06-20 11:18:45] 1.3-store events of the jop periodically during process 
[2023-06-20 11:18:45] 1.4- fetch data from Api
[2023-06-20 11:18:45] 1.5- View data that returned from API
[2023-06-20 11:18:45] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:18:45] 1.7- get data of each project to select 
[2023-06-20 11:18:45] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:18:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:18:45] 1.10- check project update number [PUN]if not found
[2023-06-20 11:18:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:18:45] 3.9- Finish cron_job Function
[2023-06-20 11:20:43] 1.1- Start cron_job Function
[2023-06-20 11:20:43] 1.2-request Api_url $api_url
[2023-06-20 11:20:44] 1.3-store events of the jop periodically during process 
[2023-06-20 11:20:44] 1.4- fetch data from Api
[2023-06-20 11:20:44] 1.5- View data that returned from API
[2023-06-20 11:20:44] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:20:44] 1.7- get data of each project to select 
[2023-06-20 11:20:44] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:20:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:20:44] 1.10- check project update number [PUN]if not found
[2023-06-20 11:20:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:20:44] 2.2- check if project update number[pun > 0]
[2023-06-20 11:20:44] 2.3- store data into history table
[2023-06-20 11:20:44] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-20 11:20:47] 2.7-changed the new pun 186 
[2023-06-20 11:20:47] 2.8- register updated_app in event table
[2023-06-20 11:20:47] 2.9- set status {'updated'}
[2023-06-20 11:20:47] 3.1- start_process
[2023-06-20 11:20:47] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-20 11:20:47] 3.3- if aun status > 0 
[2023-06-20 11:20:47] 3.5 check  the app have key '.rating.' if not found 
[2023-06-20 11:20:47] 3.7 check if the keys exists, update data
[2023-06-20 11:20:47] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:47] 3.5 check  the app have key '.version.' if not found 
[2023-06-20 11:20:47] 3.7 check if the keys exists, update data
[2023-06-20 11:20:47] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:47] 3.5 check  the app have key '..' if not found 
[2023-06-20 11:20:47] 3.6- Insert  all keys 
[2023-06-20 11:20:47] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-20 11:20:47] 3.7 check if the keys exists, update data
[2023-06-20 11:20:47] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:47] 3.5 check  the app have key '.logo.' if not found 
[2023-06-20 11:20:47] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.link.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.author.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.votes.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.5 check  the app have key '.file.' if not found 
[2023-06-20 11:20:49] 3.7 check if the keys exists, update data
[2023-06-20 11:20:49] 3.8- update all keys & logo & thumbnail 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:49] 3.1- start_process
[2023-06-20 11:20:49] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-20 11:20:49] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:50] 3.1- start_process
[2023-06-20 11:20:50] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-20 11:20:50] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:51] 3.1- start_process
[2023-06-20 11:20:51] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-20 11:20:51] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:52] 3.1- start_process
[2023-06-20 11:20:52] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-20 11:20:52] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:53] 3.1- start_process
[2023-06-20 11:20:53] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-20 11:20:53] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:54] 3.1- start_process
[2023-06-20 11:20:54] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-20 11:20:54] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:55] 3.1- start_process
[2023-06-20 11:20:55] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-20 11:20:55] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:56] 3.1- start_process
[2023-06-20 11:20:56] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-20 11:20:56] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.1- start_process
[2023-06-20 11:20:58] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-20 11:20:58] 3.3- if aun status > 0 
[2023-06-20 11:20:58] 3.9- Finish cron_job Function
[2023-06-20 11:22:44] 1.1- Start cron_job Function
[2023-06-20 11:22:44] 1.2-request Api_url $api_url
[2023-06-20 11:22:44] 1.3-store events of the jop periodically during process 
[2023-06-20 11:22:44] 1.4- fetch data from Api
[2023-06-20 11:22:44] 1.5- View data that returned from API
[2023-06-20 11:22:44] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:22:44] 1.7- get data of each project to select 
[2023-06-20 11:22:44] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:22:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:22:44] 1.10- check project update number [PUN]if not found
[2023-06-20 11:22:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:22:44] 3.9- Finish cron_job Function
[2023-06-20 11:26:06] 1.1- Start cron_job Function
[2023-06-20 11:26:06] 1.2-request Api_url $api_url
[2023-06-20 11:26:07] 1.3-store events of the jop periodically during process 
[2023-06-20 11:26:07] 1.4- fetch data from Api
[2023-06-20 11:26:07] 1.5- View data that returned from API
[2023-06-20 11:26:07] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:26:07] 1.7- get data of each project to select 
[2023-06-20 11:26:07] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:26:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:26:07] 1.10- check project update number [PUN]if not found
[2023-06-20 11:26:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:26:07] 3.9- Finish cron_job Function
[2023-06-20 11:26:54] 1.1- Start cron_job Function
[2023-06-20 11:26:54] 1.2-request Api_url $api_url
[2023-06-20 11:26:54] 1.3-store events of the jop periodically during process 
[2023-06-20 11:26:54] 1.4- fetch data from Api
[2023-06-20 11:26:54] 1.5- View data that returned from API
[2023-06-20 11:26:54] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:26:54] 1.7- get data of each project to select 
[2023-06-20 11:26:54] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:26:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:26:54] 1.10- check project update number [PUN]if not found
[2023-06-20 11:26:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:26:54] 3.9- Finish cron_job Function
[2023-06-20 11:27:59] 1.1- Start cron_job Function
[2023-06-20 11:27:59] 1.2-request Api_url $api_url
[2023-06-20 11:28:00] 1.3-store events of the jop periodically during process 
[2023-06-20 11:28:00] 1.4- fetch data from Api
[2023-06-20 11:28:00] 1.5- View data that returned from API
[2023-06-20 11:28:00] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:28:00] 1.7- get data of each project to select 
[2023-06-20 11:28:00] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:28:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:28:00] 1.10- check project update number [PUN]if not found
[2023-06-20 11:28:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:28:00] 3.9- Finish cron_job Function
[2023-06-20 11:29:07] 1.1- Start cron_job Function
[2023-06-20 11:29:07] 1.2-request Api_url $api_url
[2023-06-20 11:29:08] 1.3-store events of the jop periodically during process 
[2023-06-20 11:29:08] 1.4- fetch data from Api
[2023-06-20 11:29:08] 1.5- View data that returned from API
[2023-06-20 11:29:08] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:29:08] 1.7- get data of each project to select 
[2023-06-20 11:29:08] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:29:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:29:08] 1.10- check project update number [PUN]if not found
[2023-06-20 11:29:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:29:08] 3.9- Finish cron_job Function
[2023-06-20 11:29:59] 1.1- Start cron_job Function
[2023-06-20 11:29:59] 1.2-request Api_url $api_url
[2023-06-20 11:30:00] 1.3-store events of the jop periodically during process 
[2023-06-20 11:30:00] 1.4- fetch data from Api
[2023-06-20 11:30:00] 1.5- View data that returned from API
[2023-06-20 11:30:00] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:30:00] 1.7- get data of each project to select 
[2023-06-20 11:30:00] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:30:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:30:00] 1.10- check project update number [PUN]if not found
[2023-06-20 11:30:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:30:00] 3.9- Finish cron_job Function
[2023-06-20 11:31:07] 1.1- Start cron_job Function
[2023-06-20 11:31:07] 1.2-request Api_url $api_url
[2023-06-20 11:31:07] 1.3-store events of the jop periodically during process 
[2023-06-20 11:31:07] 1.4- fetch data from Api
[2023-06-20 11:31:07] 1.5- View data that returned from API
[2023-06-20 11:31:07] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:31:07] 1.7- get data of each project to select 
[2023-06-20 11:31:07] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:31:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:31:07] 1.10- check project update number [PUN]if not found
[2023-06-20 11:31:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:31:07] 2.2- check if project update number[pun > 0]
[2023-06-20 11:31:07] 2.3- store data into history table
[2023-06-20 11:31:07] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:09] 3.1- start_process
[2023-06-20 11:31:09] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-20 11:31:09] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:10] 3.1- start_process
[2023-06-20 11:31:10] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-20 11:31:10] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:11] 3.1- start_process
[2023-06-20 11:31:11] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-20 11:31:11] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:12] 3.1- start_process
[2023-06-20 11:31:12] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-20 11:31:12] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:13] 3.1- start_process
[2023-06-20 11:31:13] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-20 11:31:13] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:14] 3.1- start_process
[2023-06-20 11:31:14] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-20 11:31:14] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:15] 3.1- start_process
[2023-06-20 11:31:15] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-20 11:31:15] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:16] 3.1- start_process
[2023-06-20 11:31:16] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-20 11:31:16] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.1- start_process
[2023-06-20 11:31:17] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-20 11:31:17] 3.3- if aun status > 0 
[2023-06-20 11:31:17] 3.9- Finish cron_job Function
[2023-06-20 11:32:00] 1.1- Start cron_job Function
[2023-06-20 11:32:00] 1.2-request Api_url $api_url
[2023-06-20 11:32:00] 1.3-store events of the jop periodically during process 
[2023-06-20 11:32:00] 1.4- fetch data from Api
[2023-06-20 11:32:00] 1.5- View data that returned from API
[2023-06-20 11:32:00] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:32:00] 1.7- get data of each project to select 
[2023-06-20 11:32:00] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:32:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:32:00] 1.10- check project update number [PUN]if not found
[2023-06-20 11:32:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:32:00] 3.9- Finish cron_job Function
[2023-06-20 11:33:06] 1.1- Start cron_job Function
[2023-06-20 11:33:06] 1.2-request Api_url $api_url
[2023-06-20 11:33:07] 1.3-store events of the jop periodically during process 
[2023-06-20 11:33:07] 1.4- fetch data from Api
[2023-06-20 11:33:07] 1.5- View data that returned from API
[2023-06-20 11:33:07] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:33:07] 1.7- get data of each project to select 
[2023-06-20 11:33:07] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:33:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:33:07] 1.10- check project update number [PUN]if not found
[2023-06-20 11:33:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:33:07] 3.9- Finish cron_job Function
[2023-06-20 11:34:02] 1.1- Start cron_job Function
[2023-06-20 11:34:02] 1.2-request Api_url $api_url
[2023-06-20 11:34:02] 1.3-store events of the jop periodically during process 
[2023-06-20 11:34:02] 1.4- fetch data from Api
[2023-06-20 11:34:02] 1.5- View data that returned from API
[2023-06-20 11:34:02] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:34:02] 1.7- get data of each project to select 
[2023-06-20 11:34:02] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:34:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:34:02] 1.10- check project update number [PUN]if not found
[2023-06-20 11:34:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:34:02] 3.9- Finish cron_job Function
[2023-06-20 11:35:06] 1.1- Start cron_job Function
[2023-06-20 11:35:06] 1.2-request Api_url $api_url
[2023-06-20 11:35:07] 1.3-store events of the jop periodically during process 
[2023-06-20 11:35:07] 1.4- fetch data from Api
[2023-06-20 11:35:07] 1.5- View data that returned from API
[2023-06-20 11:35:07] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:35:07] 1.7- get data of each project to select 
[2023-06-20 11:35:07] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:35:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:35:07] 1.10- check project update number [PUN]if not found
[2023-06-20 11:35:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:35:07] 3.9- Finish cron_job Function
[2023-06-20 11:36:00] 1.1- Start cron_job Function
[2023-06-20 11:36:00] 1.2-request Api_url $api_url
[2023-06-20 11:36:01] 1.3-store events of the jop periodically during process 
[2023-06-20 11:36:01] 1.4- fetch data from Api
[2023-06-20 11:36:01] 1.5- View data that returned from API
[2023-06-20 11:36:01] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:36:01] 1.7- get data of each project to select 
[2023-06-20 11:36:01] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:36:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:36:01] 1.10- check project update number [PUN]if not found
[2023-06-20 11:36:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:36:01] 3.9- Finish cron_job Function
[2023-06-20 11:36:12] 1.1- Start cron_job Function
[2023-06-20 11:36:12] 1.2-request Api_url $api_url
[2023-06-20 11:36:12] 1.3-store events of the jop periodically during process 
[2023-06-20 11:36:12] 1.4- fetch data from Api
[2023-06-20 11:36:12] 1.5- View data that returned from API
[2023-06-20 11:36:12] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:36:12] 1.7- get data of each project to select 
[2023-06-20 11:36:12] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:36:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:36:12] 1.10- check project update number [PUN]if not found
[2023-06-20 11:36:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:36:12] 3.9- Finish cron_job Function
[2023-06-20 11:37:08] 1.1- Start cron_job Function
[2023-06-20 11:37:08] 1.2-request Api_url $api_url
[2023-06-20 11:37:09] 1.3-store events of the jop periodically during process 
[2023-06-20 11:37:09] 1.4- fetch data from Api
[2023-06-20 11:37:09] 1.5- View data that returned from API
[2023-06-20 11:37:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:37:09] 1.7- get data of each project to select 
[2023-06-20 11:37:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:37:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:37:09] 1.10- check project update number [PUN]if not found
[2023-06-20 11:37:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:37:09] 3.9- Finish cron_job Function
[2023-06-20 11:39:01] 1.1- Start cron_job Function
[2023-06-20 11:39:01] 1.2-request Api_url $api_url
[2023-06-20 11:39:02] 1.3-store events of the jop periodically during process 
[2023-06-20 11:39:02] 1.4- fetch data from Api
[2023-06-20 11:39:02] 1.5- View data that returned from API
[2023-06-20 11:39:02] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:39:02] 1.7- get data of each project to select 
[2023-06-20 11:39:02] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:39:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:39:02] 1.10- check project update number [PUN]if not found
[2023-06-20 11:39:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:39:02] 3.9- Finish cron_job Function
[2023-06-20 11:39:08] 1.1- Start cron_job Function
[2023-06-20 11:39:08] 1.2-request Api_url $api_url
[2023-06-20 11:39:09] 1.3-store events of the jop periodically during process 
[2023-06-20 11:39:09] 1.4- fetch data from Api
[2023-06-20 11:39:09] 1.5- View data that returned from API
[2023-06-20 11:39:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:39:09] 1.7- get data of each project to select 
[2023-06-20 11:39:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:39:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:39:09] 1.10- check project update number [PUN]if not found
[2023-06-20 11:39:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:39:09] 3.9- Finish cron_job Function
[2023-06-20 11:40:21] 1.1- Start cron_job Function
[2023-06-20 11:40:21] 1.2-request Api_url $api_url
[2023-06-20 11:40:22] 1.3-store events of the jop periodically during process 
[2023-06-20 11:40:22] 1.4- fetch data from Api
[2023-06-20 11:40:22] 1.5- View data that returned from API
[2023-06-20 11:40:22] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:40:22] 1.7- get data of each project to select 
[2023-06-20 11:40:22] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:40:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:40:22] 1.10- check project update number [PUN]if not found
[2023-06-20 11:40:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:40:22] 3.9- Finish cron_job Function
[2023-06-20 11:41:16] 1.1- Start cron_job Function
[2023-06-20 11:41:16] 1.2-request Api_url $api_url
[2023-06-20 11:41:16] 1.3-store events of the jop periodically during process 
[2023-06-20 11:41:16] 1.4- fetch data from Api
[2023-06-20 11:41:16] 1.5- View data that returned from API
[2023-06-20 11:41:16] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:41:16] 1.7- get data of each project to select 
[2023-06-20 11:41:16] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:41:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:41:16] 1.10- check project update number [PUN]if not found
[2023-06-20 11:41:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:41:16] 3.9- Finish cron_job Function
[2023-06-20 11:42:21] 1.1- Start cron_job Function
[2023-06-20 11:42:21] 1.2-request Api_url $api_url
[2023-06-20 11:42:21] 1.3-store events of the jop periodically during process 
[2023-06-20 11:42:21] 1.4- fetch data from Api
[2023-06-20 11:42:21] 1.5- View data that returned from API
[2023-06-20 11:42:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:42:21] 1.7- get data of each project to select 
[2023-06-20 11:42:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:42:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:42:21] 1.10- check project update number [PUN]if not found
[2023-06-20 11:42:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:42:21] 3.9- Finish cron_job Function
[2023-06-20 11:45:56] 1.1- Start cron_job Function
[2023-06-20 11:45:56] 1.2-request Api_url $api_url
[2023-06-20 11:45:57] 1.3-store events of the jop periodically during process 
[2023-06-20 11:45:57] 1.4- fetch data from Api
[2023-06-20 11:45:57] 1.5- View data that returned from API
[2023-06-20 11:45:57] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:45:57] 1.7- get data of each project to select 
[2023-06-20 11:45:57] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:45:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:45:57] 1.10- check project update number [PUN]if not found
[2023-06-20 11:45:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:45:57] 3.9- Finish cron_job Function
[2023-06-20 11:46:17] 1.1- Start cron_job Function
[2023-06-20 11:46:17] 1.2-request Api_url $api_url
[2023-06-20 11:46:18] 1.3-store events of the jop periodically during process 
[2023-06-20 11:46:18] 1.4- fetch data from Api
[2023-06-20 11:46:18] 1.5- View data that returned from API
[2023-06-20 11:46:18] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:46:18] 1.7- get data of each project to select 
[2023-06-20 11:46:18] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:46:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:46:18] 1.10- check project update number [PUN]if not found
[2023-06-20 11:46:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:46:18] 3.9- Finish cron_job Function
[2023-06-20 11:47:56] 1.1- Start cron_job Function
[2023-06-20 11:47:56] 1.2-request Api_url $api_url
[2023-06-20 11:47:56] 1.3-store events of the jop periodically during process 
[2023-06-20 11:47:57] 1.4- fetch data from Api
[2023-06-20 11:47:57] 1.5- View data that returned from API
[2023-06-20 11:47:57] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:47:57] 1.7- get data of each project to select 
[2023-06-20 11:47:57] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:47:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:47:57] 1.10- check project update number [PUN]if not found
[2023-06-20 11:47:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:47:57] 3.9- Finish cron_job Function
[2023-06-20 11:48:23] 1.1- Start cron_job Function
[2023-06-20 11:48:23] 1.2-request Api_url $api_url
[2023-06-20 11:48:24] 1.3-store events of the jop periodically during process 
[2023-06-20 11:48:24] 1.4- fetch data from Api
[2023-06-20 11:48:24] 1.5- View data that returned from API
[2023-06-20 11:48:24] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:48:24] 1.7- get data of each project to select 
[2023-06-20 11:48:24] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:48:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:48:24] 1.10- check project update number [PUN]if not found
[2023-06-20 11:48:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:48:24] 3.9- Finish cron_job Function
[2023-06-20 11:49:55] 1.1- Start cron_job Function
[2023-06-20 11:49:55] 1.2-request Api_url $api_url
[2023-06-20 11:49:56] 1.3-store events of the jop periodically during process 
[2023-06-20 11:49:56] 1.4- fetch data from Api
[2023-06-20 11:49:56] 1.5- View data that returned from API
[2023-06-20 11:49:56] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:49:56] 1.7- get data of each project to select 
[2023-06-20 11:49:56] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:49:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:49:56] 1.10- check project update number [PUN]if not found
[2023-06-20 11:49:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:49:56] 3.9- Finish cron_job Function
[2023-06-20 11:50:19] 1.1- Start cron_job Function
[2023-06-20 11:50:19] 1.2-request Api_url $api_url
[2023-06-20 11:50:20] 1.3-store events of the jop periodically during process 
[2023-06-20 11:50:20] 1.4- fetch data from Api
[2023-06-20 11:50:20] 1.5- View data that returned from API
[2023-06-20 11:50:20] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:50:20] 1.7- get data of each project to select 
[2023-06-20 11:50:20] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:50:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:50:20] 1.10- check project update number [PUN]if not found
[2023-06-20 11:50:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:50:20] 3.9- Finish cron_job Function
[2023-06-20 11:52:24] 1.1- Start cron_job Function
[2023-06-20 11:52:24] 1.2-request Api_url $api_url
[2023-06-20 11:52:25] 1.3-store events of the jop periodically during process 
[2023-06-20 11:52:25] 1.4- fetch data from Api
[2023-06-20 11:52:25] 1.5- View data that returned from API
[2023-06-20 11:52:25] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:52:25] 1.7- get data of each project to select 
[2023-06-20 11:52:25] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:52:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:52:25] 1.10- check project update number [PUN]if not found
[2023-06-20 11:52:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:52:25] 3.9- Finish cron_job Function
[2023-06-20 11:54:56] 1.1- Start cron_job Function
[2023-06-20 11:54:56] 1.2-request Api_url $api_url
[2023-06-20 11:54:57] 1.3-store events of the jop periodically during process 
[2023-06-20 11:54:57] 1.4- fetch data from Api
[2023-06-20 11:54:57] 1.5- View data that returned from API
[2023-06-20 11:54:57] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:54:57] 1.7- get data of each project to select 
[2023-06-20 11:54:57] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:54:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:54:57] 1.10- check project update number [PUN]if not found
[2023-06-20 11:54:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:54:57] 3.9- Finish cron_job Function
[2023-06-20 11:56:57] 1.1- Start cron_job Function
[2023-06-20 11:56:57] 1.2-request Api_url $api_url
[2023-06-20 11:56:58] 1.3-store events of the jop periodically during process 
[2023-06-20 11:56:58] 1.4- fetch data from Api
[2023-06-20 11:56:58] 1.5- View data that returned from API
[2023-06-20 11:56:58] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:56:58] 1.7- get data of each project to select 
[2023-06-20 11:56:58] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:56:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:56:58] 1.10- check project update number [PUN]if not found
[2023-06-20 11:56:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:56:58] 3.9- Finish cron_job Function
[2023-06-20 11:58:57] 1.1- Start cron_job Function
[2023-06-20 11:58:57] 1.2-request Api_url $api_url
[2023-06-20 11:58:58] 1.3-store events of the jop periodically during process 
[2023-06-20 11:58:58] 1.4- fetch data from Api
[2023-06-20 11:58:58] 1.5- View data that returned from API
[2023-06-20 11:58:58] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:58:58] 1.7- get data of each project to select 
[2023-06-20 11:58:58] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:58:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:58:58] 1.10- check project update number [PUN]if not found
[2023-06-20 11:58:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:58:58] 3.9- Finish cron_job Function
[2023-06-20 11:59:55] 1.1- Start cron_job Function
[2023-06-20 11:59:55] 1.2-request Api_url $api_url
[2023-06-20 11:59:56] 1.3-store events of the jop periodically during process 
[2023-06-20 11:59:56] 1.4- fetch data from Api
[2023-06-20 11:59:56] 1.5- View data that returned from API
[2023-06-20 11:59:56] 1.6- get and View projects & tags that returned from  API
[2023-06-20 11:59:56] 1.7- get data of each project to select 
[2023-06-20 11:59:56] 1.8- The selected project Name:my android. id: 7
[2023-06-20 11:59:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 11:59:56] 1.10- check project update number [PUN]if not found
[2023-06-20 11:59:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 11:59:56] 3.9- Finish cron_job Function
[2023-06-20 12:00:37] 1.1- Start cron_job Function
[2023-06-20 12:00:37] 1.2-request Api_url $api_url
[2023-06-20 12:00:38] 1.3-store events of the jop periodically during process 
[2023-06-20 12:00:38] 1.4- fetch data from Api
[2023-06-20 12:00:38] 1.5- View data that returned from API
[2023-06-20 12:00:38] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:00:38] 1.7- get data of each project to select 
[2023-06-20 12:00:38] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:00:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:00:38] 1.10- check project update number [PUN]if not found
[2023-06-20 12:00:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:00:38] 3.9- Finish cron_job Function
[2023-06-20 12:01:55] 1.1- Start cron_job Function
[2023-06-20 12:01:55] 1.2-request Api_url $api_url
[2023-06-20 12:01:56] 1.3-store events of the jop periodically during process 
[2023-06-20 12:01:56] 1.4- fetch data from Api
[2023-06-20 12:01:56] 1.5- View data that returned from API
[2023-06-20 12:01:56] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:01:56] 1.7- get data of each project to select 
[2023-06-20 12:01:56] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:01:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:01:56] 1.10- check project update number [PUN]if not found
[2023-06-20 12:01:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:01:56] 3.9- Finish cron_job Function
[2023-06-20 12:03:52] 1.1- Start cron_job Function
[2023-06-20 12:03:52] 1.2-request Api_url $api_url
[2023-06-20 12:03:53] 1.3-store events of the jop periodically during process 
[2023-06-20 12:03:53] 1.4- fetch data from Api
[2023-06-20 12:03:53] 1.5- View data that returned from API
[2023-06-20 12:03:53] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:03:53] 1.7- get data of each project to select 
[2023-06-20 12:03:53] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:03:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:03:53] 1.10- check project update number [PUN]if not found
[2023-06-20 12:03:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:03:53] 3.9- Finish cron_job Function
[2023-06-20 12:04:13] 1.1- Start cron_job Function
[2023-06-20 12:04:13] 1.2-request Api_url $api_url
[2023-06-20 12:04:14] 1.3-store events of the jop periodically during process 
[2023-06-20 12:04:14] 1.4- fetch data from Api
[2023-06-20 12:04:14] 1.5- View data that returned from API
[2023-06-20 12:04:14] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:04:14] 1.7- get data of each project to select 
[2023-06-20 12:04:14] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:04:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:04:14] 1.10- check project update number [PUN]if not found
[2023-06-20 12:04:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:04:14] 3.9- Finish cron_job Function
[2023-06-20 12:05:26] 1.1- Start cron_job Function
[2023-06-20 12:05:26] 1.2-request Api_url $api_url
[2023-06-20 12:05:27] 1.3-store events of the jop periodically during process 
[2023-06-20 12:05:27] 1.4- fetch data from Api
[2023-06-20 12:05:27] 1.5- View data that returned from API
[2023-06-20 12:05:27] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:05:27] 1.7- get data of each project to select 
[2023-06-20 12:05:27] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:05:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:05:27] 1.10- check project update number [PUN]if not found
[2023-06-20 12:05:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:05:27] 3.9- Finish cron_job Function
[2023-06-20 12:06:21] 1.1- Start cron_job Function
[2023-06-20 12:06:21] 1.2-request Api_url $api_url
[2023-06-20 12:06:22] 1.3-store events of the jop periodically during process 
[2023-06-20 12:06:22] 1.4- fetch data from Api
[2023-06-20 12:06:22] 1.5- View data that returned from API
[2023-06-20 12:06:22] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:06:22] 1.7- get data of each project to select 
[2023-06-20 12:06:22] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:06:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:06:22] 1.10- check project update number [PUN]if not found
[2023-06-20 12:06:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:06:22] 3.9- Finish cron_job Function
[2023-06-20 12:07:09] 1.1- Start cron_job Function
[2023-06-20 12:07:09] 1.2-request Api_url $api_url
[2023-06-20 12:07:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:07:10] 1.4- fetch data from Api
[2023-06-20 12:07:10] 1.5- View data that returned from API
[2023-06-20 12:07:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:07:10] 1.7- get data of each project to select 
[2023-06-20 12:07:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:07:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:07:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:07:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:07:10] 3.9- Finish cron_job Function
[2023-06-20 12:08:22] 1.1- Start cron_job Function
[2023-06-20 12:08:22] 1.2-request Api_url $api_url
[2023-06-20 12:08:22] 1.3-store events of the jop periodically during process 
[2023-06-20 12:08:22] 1.4- fetch data from Api
[2023-06-20 12:08:22] 1.5- View data that returned from API
[2023-06-20 12:08:22] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:08:22] 1.7- get data of each project to select 
[2023-06-20 12:08:22] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:08:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:08:22] 1.10- check project update number [PUN]if not found
[2023-06-20 12:08:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:08:22] 3.9- Finish cron_job Function
[2023-06-20 12:09:32] 1.1- Start cron_job Function
[2023-06-20 12:09:32] 1.2-request Api_url $api_url
[2023-06-20 12:09:33] 1.3-store events of the jop periodically during process 
[2023-06-20 12:09:33] 1.4- fetch data from Api
[2023-06-20 12:09:33] 1.5- View data that returned from API
[2023-06-20 12:09:33] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:09:33] 1.7- get data of each project to select 
[2023-06-20 12:09:33] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:09:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:09:33] 1.10- check project update number [PUN]if not found
[2023-06-20 12:09:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:09:33] 3.9- Finish cron_job Function
[2023-06-20 12:10:28] 1.1- Start cron_job Function
[2023-06-20 12:10:28] 1.2-request Api_url $api_url
[2023-06-20 12:10:29] 1.3-store events of the jop periodically during process 
[2023-06-20 12:10:29] 1.4- fetch data from Api
[2023-06-20 12:10:29] 1.5- View data that returned from API
[2023-06-20 12:10:29] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:10:29] 1.7- get data of each project to select 
[2023-06-20 12:10:29] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:10:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:10:29] 1.10- check project update number [PUN]if not found
[2023-06-20 12:10:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:10:29] 3.9- Finish cron_job Function
[2023-06-20 12:11:09] 1.1- Start cron_job Function
[2023-06-20 12:11:09] 1.2-request Api_url $api_url
[2023-06-20 12:11:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:11:10] 1.4- fetch data from Api
[2023-06-20 12:11:10] 1.5- View data that returned from API
[2023-06-20 12:11:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:11:10] 1.7- get data of each project to select 
[2023-06-20 12:11:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:11:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:11:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:11:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:11:10] 3.9- Finish cron_job Function
[2023-06-20 12:12:27] 1.1- Start cron_job Function
[2023-06-20 12:12:27] 1.2-request Api_url $api_url
[2023-06-20 12:12:28] 1.3-store events of the jop periodically during process 
[2023-06-20 12:12:28] 1.4- fetch data from Api
[2023-06-20 12:12:28] 1.5- View data that returned from API
[2023-06-20 12:12:28] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:12:28] 1.7- get data of each project to select 
[2023-06-20 12:12:28] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:12:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:12:28] 1.10- check project update number [PUN]if not found
[2023-06-20 12:12:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:12:28] 3.9- Finish cron_job Function
[2023-06-20 12:13:24] 1.1- Start cron_job Function
[2023-06-20 12:13:24] 1.2-request Api_url $api_url
[2023-06-20 12:13:24] 1.3-store events of the jop periodically during process 
[2023-06-20 12:13:24] 1.4- fetch data from Api
[2023-06-20 12:13:24] 1.5- View data that returned from API
[2023-06-20 12:13:24] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:13:24] 1.7- get data of each project to select 
[2023-06-20 12:13:24] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:13:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:13:24] 1.10- check project update number [PUN]if not found
[2023-06-20 12:13:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:13:24] 3.9- Finish cron_job Function
[2023-06-20 12:14:28] 1.1- Start cron_job Function
[2023-06-20 12:14:28] 1.2-request Api_url $api_url
[2023-06-20 12:14:29] 1.3-store events of the jop periodically during process 
[2023-06-20 12:14:29] 1.4- fetch data from Api
[2023-06-20 12:14:29] 1.5- View data that returned from API
[2023-06-20 12:14:29] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:14:29] 1.7- get data of each project to select 
[2023-06-20 12:14:29] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:14:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:14:29] 1.10- check project update number [PUN]if not found
[2023-06-20 12:14:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:14:29] 3.9- Finish cron_job Function
[2023-06-20 12:15:47] 1.1- Start cron_job Function
[2023-06-20 12:15:47] 1.2-request Api_url $api_url
[2023-06-20 12:15:47] 1.3-store events of the jop periodically during process 
[2023-06-20 12:15:47] 1.4- fetch data from Api
[2023-06-20 12:15:47] 1.5- View data that returned from API
[2023-06-20 12:15:47] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:15:47] 1.7- get data of each project to select 
[2023-06-20 12:15:47] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:15:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:15:47] 1.10- check project update number [PUN]if not found
[2023-06-20 12:15:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:15:47] 3.9- Finish cron_job Function
[2023-06-20 12:16:09] 1.1- Start cron_job Function
[2023-06-20 12:16:09] 1.2-request Api_url $api_url
[2023-06-20 12:16:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:16:10] 1.4- fetch data from Api
[2023-06-20 12:16:10] 1.5- View data that returned from API
[2023-06-20 12:16:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:16:10] 1.7- get data of each project to select 
[2023-06-20 12:16:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:16:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:16:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:16:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:16:10] 3.9- Finish cron_job Function
[2023-06-20 12:17:39] 1.1- Start cron_job Function
[2023-06-20 12:17:39] 1.2-request Api_url $api_url
[2023-06-20 12:17:40] 1.3-store events of the jop periodically during process 
[2023-06-20 12:17:40] 1.4- fetch data from Api
[2023-06-20 12:17:40] 1.5- View data that returned from API
[2023-06-20 12:17:40] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:17:40] 1.7- get data of each project to select 
[2023-06-20 12:17:40] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:17:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:17:40] 1.10- check project update number [PUN]if not found
[2023-06-20 12:17:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:17:40] 3.9- Finish cron_job Function
[2023-06-20 12:18:47] 1.1- Start cron_job Function
[2023-06-20 12:18:47] 1.2-request Api_url $api_url
[2023-06-20 12:18:48] 1.3-store events of the jop periodically during process 
[2023-06-20 12:18:48] 1.4- fetch data from Api
[2023-06-20 12:18:48] 1.5- View data that returned from API
[2023-06-20 12:18:48] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:18:48] 1.7- get data of each project to select 
[2023-06-20 12:18:48] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:18:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:18:48] 1.10- check project update number [PUN]if not found
[2023-06-20 12:18:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:18:48] 3.9- Finish cron_job Function
[2023-06-20 12:19:17] 1.1- Start cron_job Function
[2023-06-20 12:19:17] 1.2-request Api_url $api_url
[2023-06-20 12:19:17] 1.3-store events of the jop periodically during process 
[2023-06-20 12:19:17] 1.4- fetch data from Api
[2023-06-20 12:19:17] 1.5- View data that returned from API
[2023-06-20 12:19:17] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:19:17] 1.7- get data of each project to select 
[2023-06-20 12:19:17] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:19:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:19:17] 1.10- check project update number [PUN]if not found
[2023-06-20 12:19:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:19:17] 3.9- Finish cron_job Function
[2023-06-20 12:20:49] 1.1- Start cron_job Function
[2023-06-20 12:20:49] 1.2-request Api_url $api_url
[2023-06-20 12:20:50] 1.3-store events of the jop periodically during process 
[2023-06-20 12:20:50] 1.4- fetch data from Api
[2023-06-20 12:20:50] 1.5- View data that returned from API
[2023-06-20 12:20:50] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:20:50] 1.7- get data of each project to select 
[2023-06-20 12:20:50] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:20:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:20:50] 1.10- check project update number [PUN]if not found
[2023-06-20 12:20:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:20:50] 3.9- Finish cron_job Function
[2023-06-20 12:21:19] 1.1- Start cron_job Function
[2023-06-20 12:21:19] 1.2-request Api_url $api_url
[2023-06-20 12:21:20] 1.3-store events of the jop periodically during process 
[2023-06-20 12:21:20] 1.4- fetch data from Api
[2023-06-20 12:21:20] 1.5- View data that returned from API
[2023-06-20 12:21:20] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:21:20] 1.7- get data of each project to select 
[2023-06-20 12:21:20] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:21:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:21:20] 1.10- check project update number [PUN]if not found
[2023-06-20 12:21:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:21:20] 3.9- Finish cron_job Function
[2023-06-20 12:22:42] 1.1- Start cron_job Function
[2023-06-20 12:22:42] 1.2-request Api_url $api_url
[2023-06-20 12:22:43] 1.3-store events of the jop periodically during process 
[2023-06-20 12:22:43] 1.4- fetch data from Api
[2023-06-20 12:22:43] 1.5- View data that returned from API
[2023-06-20 12:22:43] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:22:43] 1.7- get data of each project to select 
[2023-06-20 12:22:43] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:22:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:22:43] 1.10- check project update number [PUN]if not found
[2023-06-20 12:22:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:22:43] 3.9- Finish cron_job Function
[2023-06-20 12:23:19] 1.1- Start cron_job Function
[2023-06-20 12:23:19] 1.2-request Api_url $api_url
[2023-06-20 12:23:20] 1.3-store events of the jop periodically during process 
[2023-06-20 12:23:20] 1.4- fetch data from Api
[2023-06-20 12:23:20] 1.5- View data that returned from API
[2023-06-20 12:23:20] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:23:20] 1.7- get data of each project to select 
[2023-06-20 12:23:20] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:23:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:23:20] 1.10- check project update number [PUN]if not found
[2023-06-20 12:23:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:23:20] 3.9- Finish cron_job Function
[2023-06-20 12:24:47] 1.1- Start cron_job Function
[2023-06-20 12:24:47] 1.2-request Api_url $api_url
[2023-06-20 12:24:48] 1.3-store events of the jop periodically during process 
[2023-06-20 12:24:48] 1.4- fetch data from Api
[2023-06-20 12:24:48] 1.5- View data that returned from API
[2023-06-20 12:24:48] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:24:48] 1.7- get data of each project to select 
[2023-06-20 12:24:48] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:24:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:24:48] 1.10- check project update number [PUN]if not found
[2023-06-20 12:24:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:24:48] 3.9- Finish cron_job Function
[2023-06-20 12:25:09] 1.1- Start cron_job Function
[2023-06-20 12:25:09] 1.2-request Api_url $api_url
[2023-06-20 12:25:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:25:10] 1.4- fetch data from Api
[2023-06-20 12:25:10] 1.5- View data that returned from API
[2023-06-20 12:25:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:25:10] 1.7- get data of each project to select 
[2023-06-20 12:25:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:25:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:25:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:25:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:25:10] 3.9- Finish cron_job Function
[2023-06-20 12:26:08] 1.1- Start cron_job Function
[2023-06-20 12:26:08] 1.2-request Api_url $api_url
[2023-06-20 12:26:09] 1.3-store events of the jop periodically during process 
[2023-06-20 12:26:09] 1.4- fetch data from Api
[2023-06-20 12:26:09] 1.5- View data that returned from API
[2023-06-20 12:26:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:26:09] 1.7- get data of each project to select 
[2023-06-20 12:26:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:26:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:26:09] 1.10- check project update number [PUN]if not found
[2023-06-20 12:26:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:26:09] 3.9- Finish cron_job Function
[2023-06-20 12:27:20] 1.1- Start cron_job Function
[2023-06-20 12:27:20] 1.2-request Api_url $api_url
[2023-06-20 12:27:21] 1.3-store events of the jop periodically during process 
[2023-06-20 12:27:21] 1.4- fetch data from Api
[2023-06-20 12:27:21] 1.5- View data that returned from API
[2023-06-20 12:27:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:27:21] 1.7- get data of each project to select 
[2023-06-20 12:27:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:27:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:27:21] 1.10- check project update number [PUN]if not found
[2023-06-20 12:27:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:27:21] 3.9- Finish cron_job Function
[2023-06-20 12:28:47] 1.1- Start cron_job Function
[2023-06-20 12:28:47] 1.2-request Api_url $api_url
[2023-06-20 12:28:48] 1.3-store events of the jop periodically during process 
[2023-06-20 12:28:48] 1.4- fetch data from Api
[2023-06-20 12:28:48] 1.5- View data that returned from API
[2023-06-20 12:28:48] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:28:48] 1.7- get data of each project to select 
[2023-06-20 12:28:48] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:28:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:28:48] 1.10- check project update number [PUN]if not found
[2023-06-20 12:28:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:28:48] 3.9- Finish cron_job Function
[2023-06-20 12:29:20] 1.1- Start cron_job Function
[2023-06-20 12:29:20] 1.2-request Api_url $api_url
[2023-06-20 12:29:21] 1.3-store events of the jop periodically during process 
[2023-06-20 12:29:21] 1.4- fetch data from Api
[2023-06-20 12:29:21] 1.5- View data that returned from API
[2023-06-20 12:29:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:29:21] 1.7- get data of each project to select 
[2023-06-20 12:29:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:29:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:29:21] 1.10- check project update number [PUN]if not found
[2023-06-20 12:29:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:29:21] 3.9- Finish cron_job Function
[2023-06-20 12:30:09] 1.1- Start cron_job Function
[2023-06-20 12:30:09] 1.2-request Api_url $api_url
[2023-06-20 12:30:09] 1.3-store events of the jop periodically during process 
[2023-06-20 12:30:10] 1.4- fetch data from Api
[2023-06-20 12:30:10] 1.5- View data that returned from API
[2023-06-20 12:30:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:30:10] 1.7- get data of each project to select 
[2023-06-20 12:30:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:30:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:30:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:30:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:30:10] 3.9- Finish cron_job Function
[2023-06-20 12:31:56] 1.1- Start cron_job Function
[2023-06-20 12:31:56] 1.2-request Api_url $api_url
[2023-06-20 12:31:57] 1.3-store events of the jop periodically during process 
[2023-06-20 12:31:57] 1.4- fetch data from Api
[2023-06-20 12:31:57] 1.5- View data that returned from API
[2023-06-20 12:31:57] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:31:57] 1.7- get data of each project to select 
[2023-06-20 12:31:57] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:31:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:31:57] 1.10- check project update number [PUN]if not found
[2023-06-20 12:31:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:31:57] 3.9- Finish cron_job Function
[2023-06-20 12:32:09] 1.1- Start cron_job Function
[2023-06-20 12:32:09] 1.2-request Api_url $api_url
[2023-06-20 12:32:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:32:10] 1.4- fetch data from Api
[2023-06-20 12:32:10] 1.5- View data that returned from API
[2023-06-20 12:32:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:32:10] 1.7- get data of each project to select 
[2023-06-20 12:32:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:32:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:32:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:32:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:32:10] 3.9- Finish cron_job Function
[2023-06-20 12:33:57] 1.1- Start cron_job Function
[2023-06-20 12:33:57] 1.2-request Api_url $api_url
[2023-06-20 12:33:58] 1.3-store events of the jop periodically during process 
[2023-06-20 12:33:58] 1.4- fetch data from Api
[2023-06-20 12:33:58] 1.5- View data that returned from API
[2023-06-20 12:33:58] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:33:58] 1.7- get data of each project to select 
[2023-06-20 12:33:58] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:33:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:33:58] 1.10- check project update number [PUN]if not found
[2023-06-20 12:33:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:33:58] 3.9- Finish cron_job Function
[2023-06-20 12:34:09] 1.1- Start cron_job Function
[2023-06-20 12:34:09] 1.2-request Api_url $api_url
[2023-06-20 12:34:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:34:10] 1.4- fetch data from Api
[2023-06-20 12:34:10] 1.5- View data that returned from API
[2023-06-20 12:34:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:34:10] 1.7- get data of each project to select 
[2023-06-20 12:34:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:34:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:34:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:34:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:34:10] 3.9- Finish cron_job Function
[2023-06-20 12:35:58] 1.1- Start cron_job Function
[2023-06-20 12:35:58] 1.2-request Api_url $api_url
[2023-06-20 12:35:58] 1.3-store events of the jop periodically during process 
[2023-06-20 12:35:58] 1.4- fetch data from Api
[2023-06-20 12:35:58] 1.5- View data that returned from API
[2023-06-20 12:35:58] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:35:58] 1.7- get data of each project to select 
[2023-06-20 12:35:58] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:35:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:35:58] 1.10- check project update number [PUN]if not found
[2023-06-20 12:35:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:35:58] 3.9- Finish cron_job Function
[2023-06-20 12:49:48] 1.1- Start cron_job Function
[2023-06-20 12:49:48] 1.2-request Api_url $api_url
[2023-06-20 12:49:49] 1.3-store events of the jop periodically during process 
[2023-06-20 12:49:49] 1.4- fetch data from Api
[2023-06-20 12:49:49] 1.5- View data that returned from API
[2023-06-20 12:49:49] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:49:49] 1.7- get data of each project to select 
[2023-06-20 12:49:49] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:49:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:49:49] 1.10- check project update number [PUN]if not found
[2023-06-20 12:49:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:49:49] 3.9- Finish cron_job Function
[2023-06-20 12:50:48] 1.1- Start cron_job Function
[2023-06-20 12:50:48] 1.2-request Api_url $api_url
[2023-06-20 12:50:49] 1.3-store events of the jop periodically during process 
[2023-06-20 12:50:49] 1.4- fetch data from Api
[2023-06-20 12:50:49] 1.5- View data that returned from API
[2023-06-20 12:50:49] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:50:49] 1.7- get data of each project to select 
[2023-06-20 12:50:49] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:50:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:50:49] 1.10- check project update number [PUN]if not found
[2023-06-20 12:50:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:50:49] 3.9- Finish cron_job Function
[2023-06-20 12:52:21] 1.1- Start cron_job Function
[2023-06-20 12:52:21] 1.2-request Api_url $api_url
[2023-06-20 12:52:21] 1.3-store events of the jop periodically during process 
[2023-06-20 12:52:21] 1.4- fetch data from Api
[2023-06-20 12:52:21] 1.5- View data that returned from API
[2023-06-20 12:52:21] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:52:21] 1.7- get data of each project to select 
[2023-06-20 12:52:21] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:52:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:52:21] 1.10- check project update number [PUN]if not found
[2023-06-20 12:52:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:52:21] 3.9- Finish cron_job Function
[2023-06-20 12:53:22] 1.1- Start cron_job Function
[2023-06-20 12:53:22] 1.2-request Api_url $api_url
[2023-06-20 12:53:22] 1.3-store events of the jop periodically during process 
[2023-06-20 12:53:22] 1.4- fetch data from Api
[2023-06-20 12:53:22] 1.5- View data that returned from API
[2023-06-20 12:53:22] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:53:22] 1.7- get data of each project to select 
[2023-06-20 12:53:22] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:53:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:53:22] 1.10- check project update number [PUN]if not found
[2023-06-20 12:53:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:53:22] 3.9- Finish cron_job Function
[2023-06-20 12:54:22] 1.1- Start cron_job Function
[2023-06-20 12:54:22] 1.2-request Api_url $api_url
[2023-06-20 12:54:23] 1.3-store events of the jop periodically during process 
[2023-06-20 12:54:23] 1.4- fetch data from Api
[2023-06-20 12:54:23] 1.5- View data that returned from API
[2023-06-20 12:54:23] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:54:23] 1.7- get data of each project to select 
[2023-06-20 12:54:23] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:54:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:54:23] 1.10- check project update number [PUN]if not found
[2023-06-20 12:54:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:54:23] 3.9- Finish cron_job Function
[2023-06-20 12:55:22] 1.1- Start cron_job Function
[2023-06-20 12:55:22] 1.2-request Api_url $api_url
[2023-06-20 12:55:23] 1.3-store events of the jop periodically during process 
[2023-06-20 12:55:23] 1.4- fetch data from Api
[2023-06-20 12:55:23] 1.5- View data that returned from API
[2023-06-20 12:55:23] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:55:23] 1.7- get data of each project to select 
[2023-06-20 12:55:23] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:55:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:55:23] 1.10- check project update number [PUN]if not found
[2023-06-20 12:55:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:55:23] 3.9- Finish cron_job Function
[2023-06-20 12:56:09] 1.1- Start cron_job Function
[2023-06-20 12:56:09] 1.2-request Api_url $api_url
[2023-06-20 12:56:10] 1.3-store events of the jop periodically during process 
[2023-06-20 12:56:10] 1.4- fetch data from Api
[2023-06-20 12:56:10] 1.5- View data that returned from API
[2023-06-20 12:56:10] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:56:10] 1.7- get data of each project to select 
[2023-06-20 12:56:10] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:56:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:56:10] 1.10- check project update number [PUN]if not found
[2023-06-20 12:56:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:56:10] 3.9- Finish cron_job Function
[2023-06-20 12:57:18] 1.1- Start cron_job Function
[2023-06-20 12:57:18] 1.2-request Api_url $api_url
[2023-06-20 12:57:19] 1.3-store events of the jop periodically during process 
[2023-06-20 12:57:19] 1.4- fetch data from Api
[2023-06-20 12:57:19] 1.5- View data that returned from API
[2023-06-20 12:57:19] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:57:19] 1.7- get data of each project to select 
[2023-06-20 12:57:19] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:57:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:57:19] 1.10- check project update number [PUN]if not found
[2023-06-20 12:57:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:57:19] 3.9- Finish cron_job Function
[2023-06-20 12:58:08] 1.1- Start cron_job Function
[2023-06-20 12:58:08] 1.2-request Api_url $api_url
[2023-06-20 12:58:09] 1.3-store events of the jop periodically during process 
[2023-06-20 12:58:09] 1.4- fetch data from Api
[2023-06-20 12:58:09] 1.5- View data that returned from API
[2023-06-20 12:58:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:58:09] 1.7- get data of each project to select 
[2023-06-20 12:58:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:58:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:58:09] 1.10- check project update number [PUN]if not found
[2023-06-20 12:58:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:58:09] 3.9- Finish cron_job Function
[2023-06-20 12:59:22] 1.1- Start cron_job Function
[2023-06-20 12:59:22] 1.2-request Api_url $api_url
[2023-06-20 12:59:23] 1.3-store events of the jop periodically during process 
[2023-06-20 12:59:23] 1.4- fetch data from Api
[2023-06-20 12:59:23] 1.5- View data that returned from API
[2023-06-20 12:59:23] 1.6- get and View projects & tags that returned from  API
[2023-06-20 12:59:23] 1.7- get data of each project to select 
[2023-06-20 12:59:23] 1.8- The selected project Name:my android. id: 7
[2023-06-20 12:59:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 12:59:23] 1.10- check project update number [PUN]if not found
[2023-06-20 12:59:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 12:59:23] 3.9- Finish cron_job Function
[2023-06-20 13:00:08] 1.1- Start cron_job Function
[2023-06-20 13:00:08] 1.2-request Api_url $api_url
[2023-06-20 13:00:09] 1.3-store events of the jop periodically during process 
[2023-06-20 13:00:09] 1.4- fetch data from Api
[2023-06-20 13:00:09] 1.5- View data that returned from API
[2023-06-20 13:00:09] 1.6- get and View projects & tags that returned from  API
[2023-06-20 13:00:09] 1.7- get data of each project to select 
[2023-06-20 13:00:09] 1.8- The selected project Name:my android. id: 7
[2023-06-20 13:00:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-20 13:00:09] 1.10- check project update number [PUN]if not found
[2023-06-20 13:00:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-20 13:00:09] 3.9- Finish cron_job Function
[2023-06-21 05:25:17] 1.1- Start cron_job Function
[2023-06-21 05:25:17] 1.2-request Api_url $api_url
[2023-06-21 05:25:18] 1.3-store events of the jop periodically during process 
[2023-06-21 05:25:18] 1.4- fetch data from Api
[2023-06-21 05:25:18] 1.5- View data that returned from API
[2023-06-21 05:25:18] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:25:18] 1.7- get data of each project to select 
[2023-06-21 05:25:18] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:25:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:25:18] 1.10- check project update number [PUN]if not found
[2023-06-21 05:25:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:25:18] 2.2- check if project update number[pun > 0]
[2023-06-21 05:25:18] 2.3- store data into history table
[2023-06-21 05:25:18] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-21 05:25:20] 2.7-changed the new pun 192 
[2023-06-21 05:25:20] 2.8- register updated_app in event table
[2023-06-21 05:25:20] 2.9- set status {'updated'}
[2023-06-21 05:25:20] 3.1- start_process
[2023-06-21 05:25:20] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-21 05:25:20] 3.3- if aun status > 0 
[2023-06-21 05:25:20] 3.5 check  the app have key '.rating.' if not found 
[2023-06-21 05:25:20] 3.7 check if the keys exists, update data
[2023-06-21 05:25:20] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:20] 3.5 check  the app have key '.version.' if not found 
[2023-06-21 05:25:20] 3.7 check if the keys exists, update data
[2023-06-21 05:25:20] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:20] 3.5 check  the app have key '..' if not found 
[2023-06-21 05:25:20] 3.6- Insert  all keys 
[2023-06-21 05:25:20] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-21 05:25:20] 3.7 check if the keys exists, update data
[2023-06-21 05:25:20] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:20] 3.5 check  the app have key '.logo.' if not found 
[2023-06-21 05:25:20] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.link.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.author.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.votes.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.5 check  the app have key '.file.' if not found 
[2023-06-21 05:25:22] 3.7 check if the keys exists, update data
[2023-06-21 05:25:22] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:22] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-21 05:25:22] 3.3- if aun status > 0 
[2023-06-21 05:25:22] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 2.7-changed the new pun 16 
[2023-06-21 05:25:23] 2.8- register updated_app in event table
[2023-06-21 05:25:23] 2.9- set status {'updated'}
[2023-06-21 05:25:23] 3.1- start_process
[2023-06-21 05:25:23] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-21 05:25:23] 3.3- if aun status > 0 
[2023-06-21 05:25:23] 3.5 check  the app have key '.rating.' if not found 
[2023-06-21 05:25:23] 3.7 check if the keys exists, update data
[2023-06-21 05:25:23] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:23] 3.5 check  the app have key '.version.' if not found 
[2023-06-21 05:25:23] 3.7 check if the keys exists, update data
[2023-06-21 05:25:23] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:23] 3.5 check  the app have key '..' if not found 
[2023-06-21 05:25:23] 3.6- Insert  all keys 
[2023-06-21 05:25:23] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-21 05:25:23] 3.7 check if the keys exists, update data
[2023-06-21 05:25:23] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:23] 3.5 check  the app have key '.logo.' if not found 
[2023-06-21 05:25:23] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.link.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.author.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.votes.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.price.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.5 check  the app have key '.file.' if not found 
[2023-06-21 05:25:24] 3.7 check if the keys exists, update data
[2023-06-21 05:25:24] 3.8- update all keys & logo & thumbnail 
[2023-06-21 05:25:24] 3.1- start_process
[2023-06-21 05:25:24] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-21 05:25:24] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-21 05:25:25] 3.3- if aun status > 0 
[2023-06-21 05:25:25] 3.1- start_process
[2023-06-21 05:25:25] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:26] 3.1- start_process
[2023-06-21 05:25:26] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-21 05:25:26] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:27] 3.1- start_process
[2023-06-21 05:25:27] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-21 05:25:27] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:28] 3.1- start_process
[2023-06-21 05:25:28] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-21 05:25:28] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.1- start_process
[2023-06-21 05:25:29] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-21 05:25:29] 3.3- if aun status > 0 
[2023-06-21 05:25:29] 3.9- Finish cron_job Function
[2023-06-21 05:26:14] 1.1- Start cron_job Function
[2023-06-21 05:26:14] 1.2-request Api_url $api_url
[2023-06-21 05:26:15] 1.3-store events of the jop periodically during process 
[2023-06-21 05:26:15] 1.4- fetch data from Api
[2023-06-21 05:26:15] 1.5- View data that returned from API
[2023-06-21 05:26:15] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:26:15] 1.7- get data of each project to select 
[2023-06-21 05:26:15] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:26:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:26:15] 1.10- check project update number [PUN]if not found
[2023-06-21 05:26:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:26:15] 3.9- Finish cron_job Function
[2023-06-21 05:27:17] 1.1- Start cron_job Function
[2023-06-21 05:27:17] 1.2-request Api_url $api_url
[2023-06-21 05:27:18] 1.3-store events of the jop periodically during process 
[2023-06-21 05:27:18] 1.4- fetch data from Api
[2023-06-21 05:27:18] 1.5- View data that returned from API
[2023-06-21 05:27:18] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:27:18] 1.7- get data of each project to select 
[2023-06-21 05:27:18] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:27:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:27:18] 1.10- check project update number [PUN]if not found
[2023-06-21 05:27:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:27:18] 3.9- Finish cron_job Function
[2023-06-21 05:28:14] 1.1- Start cron_job Function
[2023-06-21 05:28:14] 1.2-request Api_url $api_url
[2023-06-21 05:28:15] 1.3-store events of the jop periodically during process 
[2023-06-21 05:28:15] 1.4- fetch data from Api
[2023-06-21 05:28:15] 1.5- View data that returned from API
[2023-06-21 05:28:15] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:28:15] 1.7- get data of each project to select 
[2023-06-21 05:28:15] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:28:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:28:15] 1.10- check project update number [PUN]if not found
[2023-06-21 05:28:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:28:15] 3.9- Finish cron_job Function
[2023-06-21 05:29:12] 1.1- Start cron_job Function
[2023-06-21 05:29:12] 1.2-request Api_url $api_url
[2023-06-21 05:29:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:29:13] 1.4- fetch data from Api
[2023-06-21 05:29:13] 1.5- View data that returned from API
[2023-06-21 05:29:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:29:13] 1.7- get data of each project to select 
[2023-06-21 05:29:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:29:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:29:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:29:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:29:13] 3.9- Finish cron_job Function
[2023-06-21 05:30:12] 1.1- Start cron_job Function
[2023-06-21 05:30:12] 1.2-request Api_url $api_url
[2023-06-21 05:30:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:30:13] 1.4- fetch data from Api
[2023-06-21 05:30:13] 1.5- View data that returned from API
[2023-06-21 05:30:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:30:13] 1.7- get data of each project to select 
[2023-06-21 05:30:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:30:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:30:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:30:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:30:13] 3.9- Finish cron_job Function
[2023-06-21 05:31:12] 1.1- Start cron_job Function
[2023-06-21 05:31:12] 1.2-request Api_url $api_url
[2023-06-21 05:31:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:31:13] 1.4- fetch data from Api
[2023-06-21 05:31:13] 1.5- View data that returned from API
[2023-06-21 05:31:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:31:13] 1.7- get data of each project to select 
[2023-06-21 05:31:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:31:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:31:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:31:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:31:13] 3.9- Finish cron_job Function
[2023-06-21 05:32:12] 1.1- Start cron_job Function
[2023-06-21 05:32:12] 1.2-request Api_url $api_url
[2023-06-21 05:32:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:32:13] 1.4- fetch data from Api
[2023-06-21 05:32:13] 1.5- View data that returned from API
[2023-06-21 05:32:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:32:13] 1.7- get data of each project to select 
[2023-06-21 05:32:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:32:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:32:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:32:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:32:13] 3.9- Finish cron_job Function
[2023-06-21 05:33:13] 1.1- Start cron_job Function
[2023-06-21 05:33:13] 1.2-request Api_url $api_url
[2023-06-21 05:33:14] 1.3-store events of the jop periodically during process 
[2023-06-21 05:33:14] 1.4- fetch data from Api
[2023-06-21 05:33:14] 1.5- View data that returned from API
[2023-06-21 05:33:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:33:14] 1.7- get data of each project to select 
[2023-06-21 05:33:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:33:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:33:14] 1.10- check project update number [PUN]if not found
[2023-06-21 05:33:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:33:14] 3.9- Finish cron_job Function
[2023-06-21 05:34:12] 1.1- Start cron_job Function
[2023-06-21 05:34:12] 1.2-request Api_url $api_url
[2023-06-21 05:34:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:34:13] 1.4- fetch data from Api
[2023-06-21 05:34:13] 1.5- View data that returned from API
[2023-06-21 05:34:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:34:13] 1.7- get data of each project to select 
[2023-06-21 05:34:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:34:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:34:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:34:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:34:13] 3.9- Finish cron_job Function
[2023-06-21 05:35:12] 1.1- Start cron_job Function
[2023-06-21 05:35:12] 1.2-request Api_url $api_url
[2023-06-21 05:35:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:35:13] 1.4- fetch data from Api
[2023-06-21 05:35:13] 1.5- View data that returned from API
[2023-06-21 05:35:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:35:13] 1.7- get data of each project to select 
[2023-06-21 05:35:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:35:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:35:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:35:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:35:13] 3.9- Finish cron_job Function
[2023-06-21 05:36:12] 1.1- Start cron_job Function
[2023-06-21 05:36:12] 1.2-request Api_url $api_url
[2023-06-21 05:36:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:36:13] 1.4- fetch data from Api
[2023-06-21 05:36:13] 1.5- View data that returned from API
[2023-06-21 05:36:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:36:13] 1.7- get data of each project to select 
[2023-06-21 05:36:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:36:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:36:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:36:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:36:13] 3.9- Finish cron_job Function
[2023-06-21 05:37:12] 1.1- Start cron_job Function
[2023-06-21 05:37:12] 1.2-request Api_url $api_url
[2023-06-21 05:37:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:37:13] 1.4- fetch data from Api
[2023-06-21 05:37:13] 1.5- View data that returned from API
[2023-06-21 05:37:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:37:13] 1.7- get data of each project to select 
[2023-06-21 05:37:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:37:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:37:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:37:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:37:13] 3.9- Finish cron_job Function
[2023-06-21 05:38:14] 1.1- Start cron_job Function
[2023-06-21 05:38:14] 1.2-request Api_url $api_url
[2023-06-21 05:38:15] 1.3-store events of the jop periodically during process 
[2023-06-21 05:38:15] 1.4- fetch data from Api
[2023-06-21 05:38:15] 1.5- View data that returned from API
[2023-06-21 05:38:15] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:38:15] 1.7- get data of each project to select 
[2023-06-21 05:38:15] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:38:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:38:15] 1.10- check project update number [PUN]if not found
[2023-06-21 05:38:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:38:15] 3.9- Finish cron_job Function
[2023-06-21 05:40:03] 1.1- Start cron_job Function
[2023-06-21 05:40:03] 1.2-request Api_url $api_url
[2023-06-21 05:40:04] 1.3-store events of the jop periodically during process 
[2023-06-21 05:40:04] 1.4- fetch data from Api
[2023-06-21 05:40:04] 1.5- View data that returned from API
[2023-06-21 05:40:04] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:40:04] 1.7- get data of each project to select 
[2023-06-21 05:40:04] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:40:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:40:04] 1.10- check project update number [PUN]if not found
[2023-06-21 05:40:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:40:04] 3.9- Finish cron_job Function
[2023-06-21 05:40:13] 1.1- Start cron_job Function
[2023-06-21 05:40:13] 1.2-request Api_url $api_url
[2023-06-21 05:40:13] 1.3-store events of the jop periodically during process 
[2023-06-21 05:40:13] 1.4- fetch data from Api
[2023-06-21 05:40:13] 1.5- View data that returned from API
[2023-06-21 05:40:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:40:13] 1.7- get data of each project to select 
[2023-06-21 05:40:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:40:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:40:13] 1.10- check project update number [PUN]if not found
[2023-06-21 05:40:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:40:13] 3.9- Finish cron_job Function
[2023-06-21 05:42:03] 1.1- Start cron_job Function
[2023-06-21 05:42:03] 1.2-request Api_url $api_url
[2023-06-21 05:42:04] 1.3-store events of the jop periodically during process 
[2023-06-21 05:42:04] 1.4- fetch data from Api
[2023-06-21 05:42:04] 1.5- View data that returned from API
[2023-06-21 05:42:04] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:42:04] 1.7- get data of each project to select 
[2023-06-21 05:42:04] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:42:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:42:04] 1.10- check project update number [PUN]if not found
[2023-06-21 05:42:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:42:04] 3.9- Finish cron_job Function
[2023-06-21 05:42:14] 1.1- Start cron_job Function
[2023-06-21 05:42:14] 1.2-request Api_url $api_url
[2023-06-21 05:42:14] 1.3-store events of the jop periodically during process 
[2023-06-21 05:42:14] 1.4- fetch data from Api
[2023-06-21 05:42:14] 1.5- View data that returned from API
[2023-06-21 05:42:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:42:14] 1.7- get data of each project to select 
[2023-06-21 05:42:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:42:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:42:14] 1.10- check project update number [PUN]if not found
[2023-06-21 05:42:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:42:14] 3.9- Finish cron_job Function
[2023-06-21 05:44:04] 1.1- Start cron_job Function
[2023-06-21 05:44:04] 1.2-request Api_url $api_url
[2023-06-21 05:44:04] 1.3-store events of the jop periodically during process 
[2023-06-21 05:44:04] 1.4- fetch data from Api
[2023-06-21 05:44:04] 1.5- View data that returned from API
[2023-06-21 05:44:04] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:44:04] 1.7- get data of each project to select 
[2023-06-21 05:44:04] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:44:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:44:04] 1.10- check project update number [PUN]if not found
[2023-06-21 05:44:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:44:04] 3.9- Finish cron_job Function
[2023-06-21 05:44:14] 1.1- Start cron_job Function
[2023-06-21 05:44:14] 1.2-request Api_url $api_url
[2023-06-21 05:44:14] 1.3-store events of the jop periodically during process 
[2023-06-21 05:44:14] 1.4- fetch data from Api
[2023-06-21 05:44:14] 1.5- View data that returned from API
[2023-06-21 05:44:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:44:14] 1.7- get data of each project to select 
[2023-06-21 05:44:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:44:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:44:14] 1.10- check project update number [PUN]if not found
[2023-06-21 05:44:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:44:14] 3.9- Finish cron_job Function
[2023-06-21 05:46:03] 1.1- Start cron_job Function
[2023-06-21 05:46:03] 1.2-request Api_url $api_url
[2023-06-21 05:46:04] 1.3-store events of the jop periodically during process 
[2023-06-21 05:46:04] 1.4- fetch data from Api
[2023-06-21 05:46:04] 1.5- View data that returned from API
[2023-06-21 05:46:04] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:46:04] 1.7- get data of each project to select 
[2023-06-21 05:46:04] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:46:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:46:04] 1.10- check project update number [PUN]if not found
[2023-06-21 05:46:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:46:04] 3.9- Finish cron_job Function
[2023-06-21 05:48:03] 1.1- Start cron_job Function
[2023-06-21 05:48:03] 1.2-request Api_url $api_url
[2023-06-21 05:48:04] 1.3-store events of the jop periodically during process 
[2023-06-21 05:48:04] 1.4- fetch data from Api
[2023-06-21 05:48:04] 1.5- View data that returned from API
[2023-06-21 05:48:04] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:48:04] 1.7- get data of each project to select 
[2023-06-21 05:48:04] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:48:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:48:04] 1.10- check project update number [PUN]if not found
[2023-06-21 05:48:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:48:04] 3.9- Finish cron_job Function
[2023-06-21 05:56:37] 1.1- Start cron_job Function
[2023-06-21 05:56:37] 1.2-request Api_url $api_url
[2023-06-21 05:56:37] 1.3-store events of the jop periodically during process 
[2023-06-21 05:56:37] 1.4- fetch data from Api
[2023-06-21 05:56:37] 1.5- View data that returned from API
[2023-06-21 05:56:37] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:56:37] 1.7- get data of each project to select 
[2023-06-21 05:56:37] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:56:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:56:37] 1.10- check project update number [PUN]if not found
[2023-06-21 05:56:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:56:37] 3.9- Finish cron_job Function
[2023-06-21 05:57:43] 1.1- Start cron_job Function
[2023-06-21 05:57:43] 1.2-request Api_url $api_url
[2023-06-21 05:57:43] 1.3-store events of the jop periodically during process 
[2023-06-21 05:57:43] 1.4- fetch data from Api
[2023-06-21 05:57:43] 1.5- View data that returned from API
[2023-06-21 05:57:43] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:57:43] 1.7- get data of each project to select 
[2023-06-21 05:57:43] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:57:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:57:43] 1.10- check project update number [PUN]if not found
[2023-06-21 05:57:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:57:43] 3.9- Finish cron_job Function
[2023-06-21 05:58:32] 1.1- Start cron_job Function
[2023-06-21 05:58:32] 1.2-request Api_url $api_url
[2023-06-21 05:58:32] 1.3-store events of the jop periodically during process 
[2023-06-21 05:58:32] 1.4- fetch data from Api
[2023-06-21 05:58:32] 1.5- View data that returned from API
[2023-06-21 05:58:32] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:58:32] 1.7- get data of each project to select 
[2023-06-21 05:58:32] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:58:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:58:32] 1.10- check project update number [PUN]if not found
[2023-06-21 05:58:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:58:32] 3.9- Finish cron_job Function
[2023-06-21 05:59:42] 1.1- Start cron_job Function
[2023-06-21 05:59:42] 1.2-request Api_url $api_url
[2023-06-21 05:59:43] 1.3-store events of the jop periodically during process 
[2023-06-21 05:59:43] 1.4- fetch data from Api
[2023-06-21 05:59:43] 1.5- View data that returned from API
[2023-06-21 05:59:43] 1.6- get and View projects & tags that returned from  API
[2023-06-21 05:59:43] 1.7- get data of each project to select 
[2023-06-21 05:59:43] 1.8- The selected project Name:my android. id: 7
[2023-06-21 05:59:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 05:59:43] 1.10- check project update number [PUN]if not found
[2023-06-21 05:59:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 05:59:43] 3.9- Finish cron_job Function
[2023-06-21 06:00:32] 1.1- Start cron_job Function
[2023-06-21 06:00:32] 1.2-request Api_url $api_url
[2023-06-21 06:00:33] 1.3-store events of the jop periodically during process 
[2023-06-21 06:00:33] 1.4- fetch data from Api
[2023-06-21 06:00:33] 1.5- View data that returned from API
[2023-06-21 06:00:33] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:00:33] 1.7- get data of each project to select 
[2023-06-21 06:00:33] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:00:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:00:33] 1.10- check project update number [PUN]if not found
[2023-06-21 06:00:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:00:33] 3.9- Finish cron_job Function
[2023-06-21 06:01:42] 1.1- Start cron_job Function
[2023-06-21 06:01:42] 1.2-request Api_url $api_url
[2023-06-21 06:01:43] 1.3-store events of the jop periodically during process 
[2023-06-21 06:01:43] 1.4- fetch data from Api
[2023-06-21 06:01:43] 1.5- View data that returned from API
[2023-06-21 06:01:43] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:01:43] 1.7- get data of each project to select 
[2023-06-21 06:01:43] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:01:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:01:43] 1.10- check project update number [PUN]if not found
[2023-06-21 06:01:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:01:43] 3.9- Finish cron_job Function
[2023-06-21 06:02:10] 1.1- Start cron_job Function
[2023-06-21 06:02:10] 1.2-request Api_url $api_url
[2023-06-21 06:02:10] 1.3-store events of the jop periodically during process 
[2023-06-21 06:02:10] 1.4- fetch data from Api
[2023-06-21 06:02:10] 1.5- View data that returned from API
[2023-06-21 06:02:10] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:02:10] 1.7- get data of each project to select 
[2023-06-21 06:02:10] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:02:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:02:10] 1.10- check project update number [PUN]if not found
[2023-06-21 06:02:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:02:10] 3.9- Finish cron_job Function
[2023-06-21 06:03:08] 1.1- Start cron_job Function
[2023-06-21 06:03:08] 1.2-request Api_url $api_url
[2023-06-21 06:03:09] 1.3-store events of the jop periodically during process 
[2023-06-21 06:03:09] 1.4- fetch data from Api
[2023-06-21 06:03:09] 1.5- View data that returned from API
[2023-06-21 06:03:09] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:03:09] 1.7- get data of each project to select 
[2023-06-21 06:03:09] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:03:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:03:09] 1.10- check project update number [PUN]if not found
[2023-06-21 06:03:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:03:09] 3.9- Finish cron_job Function
[2023-06-21 06:04:33] 1.1- Start cron_job Function
[2023-06-21 06:04:33] 1.2-request Api_url $api_url
[2023-06-21 06:04:34] 1.3-store events of the jop periodically during process 
[2023-06-21 06:04:34] 1.4- fetch data from Api
[2023-06-21 06:04:34] 1.5- View data that returned from API
[2023-06-21 06:04:34] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:04:34] 1.7- get data of each project to select 
[2023-06-21 06:04:34] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:04:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:04:34] 1.10- check project update number [PUN]if not found
[2023-06-21 06:04:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:04:34] 3.9- Finish cron_job Function
[2023-06-21 06:05:09] 1.1- Start cron_job Function
[2023-06-21 06:05:09] 1.2-request Api_url $api_url
[2023-06-21 06:05:10] 1.3-store events of the jop periodically during process 
[2023-06-21 06:05:10] 1.4- fetch data from Api
[2023-06-21 06:05:10] 1.5- View data that returned from API
[2023-06-21 06:05:10] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:05:10] 1.7- get data of each project to select 
[2023-06-21 06:05:10] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:05:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:05:10] 1.10- check project update number [PUN]if not found
[2023-06-21 06:05:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:05:10] 3.9- Finish cron_job Function
[2023-06-21 06:06:33] 1.1- Start cron_job Function
[2023-06-21 06:06:33] 1.2-request Api_url $api_url
[2023-06-21 06:06:33] 1.3-store events of the jop periodically during process 
[2023-06-21 06:06:33] 1.4- fetch data from Api
[2023-06-21 06:06:33] 1.5- View data that returned from API
[2023-06-21 06:06:33] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:06:33] 1.7- get data of each project to select 
[2023-06-21 06:06:33] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:06:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:06:33] 1.10- check project update number [PUN]if not found
[2023-06-21 06:06:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:06:33] 3.9- Finish cron_job Function
[2023-06-21 06:07:09] 1.1- Start cron_job Function
[2023-06-21 06:07:09] 1.2-request Api_url $api_url
[2023-06-21 06:07:10] 1.3-store events of the jop periodically during process 
[2023-06-21 06:07:10] 1.4- fetch data from Api
[2023-06-21 06:07:10] 1.5- View data that returned from API
[2023-06-21 06:07:10] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:07:10] 1.7- get data of each project to select 
[2023-06-21 06:07:10] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:07:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:07:10] 1.10- check project update number [PUN]if not found
[2023-06-21 06:07:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:07:10] 3.9- Finish cron_job Function
[2023-06-21 06:08:45] 1.1- Start cron_job Function
[2023-06-21 06:08:45] 1.2-request Api_url $api_url
[2023-06-21 06:08:46] 1.3-store events of the jop periodically during process 
[2023-06-21 06:08:46] 1.4- fetch data from Api
[2023-06-21 06:08:46] 1.5- View data that returned from API
[2023-06-21 06:08:46] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:08:46] 1.7- get data of each project to select 
[2023-06-21 06:08:46] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:08:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:08:46] 1.10- check project update number [PUN]if not found
[2023-06-21 06:08:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:08:46] 3.9- Finish cron_job Function
[2023-06-21 06:09:10] 1.1- Start cron_job Function
[2023-06-21 06:09:10] 1.2-request Api_url $api_url
[2023-06-21 06:09:11] 1.3-store events of the jop periodically during process 
[2023-06-21 06:09:11] 1.4- fetch data from Api
[2023-06-21 06:09:11] 1.5- View data that returned from API
[2023-06-21 06:09:11] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:09:11] 1.7- get data of each project to select 
[2023-06-21 06:09:11] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:09:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:09:11] 1.10- check project update number [PUN]if not found
[2023-06-21 06:09:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:09:11] 3.9- Finish cron_job Function
[2023-06-21 06:10:46] 1.1- Start cron_job Function
[2023-06-21 06:10:46] 1.2-request Api_url $api_url
[2023-06-21 06:10:47] 1.3-store events of the jop periodically during process 
[2023-06-21 06:10:47] 1.4- fetch data from Api
[2023-06-21 06:10:47] 1.5- View data that returned from API
[2023-06-21 06:10:47] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:10:47] 1.7- get data of each project to select 
[2023-06-21 06:10:47] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:10:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:10:47] 1.10- check project update number [PUN]if not found
[2023-06-21 06:10:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:10:47] 3.9- Finish cron_job Function
[2023-06-21 06:11:10] 1.1- Start cron_job Function
[2023-06-21 06:11:10] 1.2-request Api_url $api_url
[2023-06-21 06:11:11] 1.3-store events of the jop periodically during process 
[2023-06-21 06:11:11] 1.4- fetch data from Api
[2023-06-21 06:11:11] 1.5- View data that returned from API
[2023-06-21 06:11:11] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:11:11] 1.7- get data of each project to select 
[2023-06-21 06:11:11] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:11:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:11:11] 1.10- check project update number [PUN]if not found
[2023-06-21 06:11:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:11:11] 3.9- Finish cron_job Function
[2023-06-21 06:12:48] 1.1- Start cron_job Function
[2023-06-21 06:12:48] 1.2-request Api_url $api_url
[2023-06-21 06:12:49] 1.3-store events of the jop periodically during process 
[2023-06-21 06:12:49] 1.4- fetch data from Api
[2023-06-21 06:12:49] 1.5- View data that returned from API
[2023-06-21 06:12:49] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:12:49] 1.7- get data of each project to select 
[2023-06-21 06:12:49] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:12:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:12:49] 1.10- check project update number [PUN]if not found
[2023-06-21 06:12:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:12:49] 3.9- Finish cron_job Function
[2023-06-21 06:13:10] 1.1- Start cron_job Function
[2023-06-21 06:13:10] 1.2-request Api_url $api_url
[2023-06-21 06:13:11] 1.3-store events of the jop periodically during process 
[2023-06-21 06:13:11] 1.4- fetch data from Api
[2023-06-21 06:13:11] 1.5- View data that returned from API
[2023-06-21 06:13:11] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:13:11] 1.7- get data of each project to select 
[2023-06-21 06:13:11] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:13:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:13:11] 1.10- check project update number [PUN]if not found
[2023-06-21 06:13:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:13:11] 3.9- Finish cron_job Function
[2023-06-21 06:14:48] 1.1- Start cron_job Function
[2023-06-21 06:14:48] 1.2-request Api_url $api_url
[2023-06-21 06:14:49] 1.3-store events of the jop periodically during process 
[2023-06-21 06:14:49] 1.4- fetch data from Api
[2023-06-21 06:14:49] 1.5- View data that returned from API
[2023-06-21 06:14:49] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:14:49] 1.7- get data of each project to select 
[2023-06-21 06:14:49] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:14:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:14:49] 1.10- check project update number [PUN]if not found
[2023-06-21 06:14:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:14:49] 3.9- Finish cron_job Function
[2023-06-21 06:15:11] 1.1- Start cron_job Function
[2023-06-21 06:15:11] 1.2-request Api_url $api_url
[2023-06-21 06:15:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:15:12] 1.4- fetch data from Api
[2023-06-21 06:15:12] 1.5- View data that returned from API
[2023-06-21 06:15:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:15:12] 1.7- get data of each project to select 
[2023-06-21 06:15:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:15:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:15:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:15:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:15:12] 3.9- Finish cron_job Function
[2023-06-21 06:16:48] 1.1- Start cron_job Function
[2023-06-21 06:16:48] 1.2-request Api_url $api_url
[2023-06-21 06:16:49] 1.3-store events of the jop periodically during process 
[2023-06-21 06:16:49] 1.4- fetch data from Api
[2023-06-21 06:16:49] 1.5- View data that returned from API
[2023-06-21 06:16:49] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:16:49] 1.7- get data of each project to select 
[2023-06-21 06:16:49] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:16:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:16:49] 1.10- check project update number [PUN]if not found
[2023-06-21 06:16:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:16:49] 3.9- Finish cron_job Function
[2023-06-21 06:17:12] 1.1- Start cron_job Function
[2023-06-21 06:17:12] 1.2-request Api_url $api_url
[2023-06-21 06:17:13] 1.3-store events of the jop periodically during process 
[2023-06-21 06:17:13] 1.4- fetch data from Api
[2023-06-21 06:17:13] 1.5- View data that returned from API
[2023-06-21 06:17:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:17:13] 1.7- get data of each project to select 
[2023-06-21 06:17:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:17:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:17:13] 1.10- check project update number [PUN]if not found
[2023-06-21 06:17:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:17:13] 3.9- Finish cron_job Function
[2023-06-21 06:18:09] 1.1- Start cron_job Function
[2023-06-21 06:18:09] 1.2-request Api_url $api_url
[2023-06-21 06:18:09] 1.3-store events of the jop periodically during process 
[2023-06-21 06:18:09] 1.4- fetch data from Api
[2023-06-21 06:18:09] 1.5- View data that returned from API
[2023-06-21 06:18:09] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:18:09] 1.7- get data of each project to select 
[2023-06-21 06:18:09] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:18:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:18:09] 1.10- check project update number [PUN]if not found
[2023-06-21 06:18:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:18:09] 3.9- Finish cron_job Function
[2023-06-21 06:19:11] 1.1- Start cron_job Function
[2023-06-21 06:19:11] 1.2-request Api_url $api_url
[2023-06-21 06:19:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:19:12] 1.4- fetch data from Api
[2023-06-21 06:19:12] 1.5- View data that returned from API
[2023-06-21 06:19:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:19:12] 1.7- get data of each project to select 
[2023-06-21 06:19:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:19:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:19:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:19:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:19:12] 3.9- Finish cron_job Function
[2023-06-21 06:20:49] 1.1- Start cron_job Function
[2023-06-21 06:20:49] 1.2-request Api_url $api_url
[2023-06-21 06:20:50] 1.3-store events of the jop periodically during process 
[2023-06-21 06:20:50] 1.4- fetch data from Api
[2023-06-21 06:20:50] 1.5- View data that returned from API
[2023-06-21 06:20:50] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:20:50] 1.7- get data of each project to select 
[2023-06-21 06:20:50] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:20:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:20:50] 1.10- check project update number [PUN]if not found
[2023-06-21 06:20:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:20:50] 3.9- Finish cron_job Function
[2023-06-21 06:21:11] 1.1- Start cron_job Function
[2023-06-21 06:21:11] 1.2-request Api_url $api_url
[2023-06-21 06:21:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:21:12] 1.4- fetch data from Api
[2023-06-21 06:21:12] 1.5- View data that returned from API
[2023-06-21 06:21:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:21:12] 1.7- get data of each project to select 
[2023-06-21 06:21:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:21:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:21:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:21:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:21:12] 3.9- Finish cron_job Function
[2023-06-21 06:22:50] 1.1- Start cron_job Function
[2023-06-21 06:22:50] 1.2-request Api_url $api_url
[2023-06-21 06:22:51] 1.3-store events of the jop periodically during process 
[2023-06-21 06:22:51] 1.4- fetch data from Api
[2023-06-21 06:22:51] 1.5- View data that returned from API
[2023-06-21 06:22:51] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:22:51] 1.7- get data of each project to select 
[2023-06-21 06:22:51] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:22:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:22:51] 1.10- check project update number [PUN]if not found
[2023-06-21 06:22:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:22:51] 3.9- Finish cron_job Function
[2023-06-21 06:23:11] 1.1- Start cron_job Function
[2023-06-21 06:23:11] 1.2-request Api_url $api_url
[2023-06-21 06:23:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:23:12] 1.4- fetch data from Api
[2023-06-21 06:23:12] 1.5- View data that returned from API
[2023-06-21 06:23:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:23:12] 1.7- get data of each project to select 
[2023-06-21 06:23:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:23:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:23:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:23:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:23:12] 3.9- Finish cron_job Function
[2023-06-21 06:24:49] 1.1- Start cron_job Function
[2023-06-21 06:24:49] 1.2-request Api_url $api_url
[2023-06-21 06:24:50] 1.3-store events of the jop periodically during process 
[2023-06-21 06:24:50] 1.4- fetch data from Api
[2023-06-21 06:24:50] 1.5- View data that returned from API
[2023-06-21 06:24:50] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:24:50] 1.7- get data of each project to select 
[2023-06-21 06:24:50] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:24:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:24:50] 1.10- check project update number [PUN]if not found
[2023-06-21 06:24:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:24:50] 3.9- Finish cron_job Function
[2023-06-21 06:25:11] 1.1- Start cron_job Function
[2023-06-21 06:25:11] 1.2-request Api_url $api_url
[2023-06-21 06:25:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:25:12] 1.4- fetch data from Api
[2023-06-21 06:25:12] 1.5- View data that returned from API
[2023-06-21 06:25:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:25:12] 1.7- get data of each project to select 
[2023-06-21 06:25:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:25:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:25:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:25:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:25:12] 3.9- Finish cron_job Function
[2023-06-21 06:26:49] 1.1- Start cron_job Function
[2023-06-21 06:26:49] 1.2-request Api_url $api_url
[2023-06-21 06:26:51] 1.3-store events of the jop periodically during process 
[2023-06-21 06:26:51] 1.4- fetch data from Api
[2023-06-21 06:26:51] 1.5- View data that returned from API
[2023-06-21 06:26:51] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:26:51] 1.7- get data of each project to select 
[2023-06-21 06:26:51] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:26:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:26:51] 1.10- check project update number [PUN]if not found
[2023-06-21 06:26:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:26:51] 3.9- Finish cron_job Function
[2023-06-21 06:27:13] 1.1- Start cron_job Function
[2023-06-21 06:27:13] 1.2-request Api_url $api_url
[2023-06-21 06:27:13] 1.3-store events of the jop periodically during process 
[2023-06-21 06:27:13] 1.4- fetch data from Api
[2023-06-21 06:27:13] 1.5- View data that returned from API
[2023-06-21 06:27:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:27:13] 1.7- get data of each project to select 
[2023-06-21 06:27:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:27:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:27:13] 1.10- check project update number [PUN]if not found
[2023-06-21 06:27:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:27:13] 3.9- Finish cron_job Function
[2023-06-21 06:28:50] 1.1- Start cron_job Function
[2023-06-21 06:28:50] 1.2-request Api_url $api_url
[2023-06-21 06:28:51] 1.3-store events of the jop periodically during process 
[2023-06-21 06:28:51] 1.4- fetch data from Api
[2023-06-21 06:28:51] 1.5- View data that returned from API
[2023-06-21 06:28:51] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:28:51] 1.7- get data of each project to select 
[2023-06-21 06:28:51] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:28:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:28:51] 1.10- check project update number [PUN]if not found
[2023-06-21 06:28:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:28:51] 3.9- Finish cron_job Function
[2023-06-21 06:29:12] 1.1- Start cron_job Function
[2023-06-21 06:29:12] 1.2-request Api_url $api_url
[2023-06-21 06:29:12] 1.3-store events of the jop periodically during process 
[2023-06-21 06:29:12] 1.4- fetch data from Api
[2023-06-21 06:29:12] 1.5- View data that returned from API
[2023-06-21 06:29:12] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:29:12] 1.7- get data of each project to select 
[2023-06-21 06:29:12] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:29:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:29:12] 1.10- check project update number [PUN]if not found
[2023-06-21 06:29:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:29:12] 3.9- Finish cron_job Function
[2023-06-21 06:30:50] 1.1- Start cron_job Function
[2023-06-21 06:30:50] 1.2-request Api_url $api_url
[2023-06-21 06:30:51] 1.3-store events of the jop periodically during process 
[2023-06-21 06:30:51] 1.4- fetch data from Api
[2023-06-21 06:30:51] 1.5- View data that returned from API
[2023-06-21 06:30:51] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:30:51] 1.7- get data of each project to select 
[2023-06-21 06:30:51] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:30:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:30:51] 1.10- check project update number [PUN]if not found
[2023-06-21 06:30:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:30:51] 3.9- Finish cron_job Function
[2023-06-21 06:31:12] 1.1- Start cron_job Function
[2023-06-21 06:31:12] 1.2-request Api_url $api_url
[2023-06-21 06:31:13] 1.3-store events of the jop periodically during process 
[2023-06-21 06:31:13] 1.4- fetch data from Api
[2023-06-21 06:31:13] 1.5- View data that returned from API
[2023-06-21 06:31:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:31:13] 1.7- get data of each project to select 
[2023-06-21 06:31:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:31:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:31:13] 1.10- check project update number [PUN]if not found
[2023-06-21 06:31:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:31:13] 3.9- Finish cron_job Function
[2023-06-21 06:32:52] 1.1- Start cron_job Function
[2023-06-21 06:32:52] 1.2-request Api_url $api_url
[2023-06-21 06:32:53] 1.3-store events of the jop periodically during process 
[2023-06-21 06:32:53] 1.4- fetch data from Api
[2023-06-21 06:32:53] 1.5- View data that returned from API
[2023-06-21 06:32:53] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:32:53] 1.7- get data of each project to select 
[2023-06-21 06:32:53] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:32:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:32:53] 1.10- check project update number [PUN]if not found
[2023-06-21 06:32:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:32:53] 3.9- Finish cron_job Function
[2023-06-21 06:33:12] 1.1- Start cron_job Function
[2023-06-21 06:33:12] 1.2-request Api_url $api_url
[2023-06-21 06:33:13] 1.3-store events of the jop periodically during process 
[2023-06-21 06:33:13] 1.4- fetch data from Api
[2023-06-21 06:33:13] 1.5- View data that returned from API
[2023-06-21 06:33:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:33:13] 1.7- get data of each project to select 
[2023-06-21 06:33:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:33:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:33:13] 1.10- check project update number [PUN]if not found
[2023-06-21 06:33:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:33:13] 3.9- Finish cron_job Function
[2023-06-21 06:34:51] 1.1- Start cron_job Function
[2023-06-21 06:34:51] 1.2-request Api_url $api_url
[2023-06-21 06:34:52] 1.3-store events of the jop periodically during process 
[2023-06-21 06:34:52] 1.4- fetch data from Api
[2023-06-21 06:34:52] 1.5- View data that returned from API
[2023-06-21 06:34:52] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:34:52] 1.7- get data of each project to select 
[2023-06-21 06:34:52] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:34:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:34:52] 1.10- check project update number [PUN]if not found
[2023-06-21 06:34:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:34:52] 3.9- Finish cron_job Function
[2023-06-21 06:35:13] 1.1- Start cron_job Function
[2023-06-21 06:35:13] 1.2-request Api_url $api_url
[2023-06-21 06:35:13] 1.3-store events of the jop periodically during process 
[2023-06-21 06:35:13] 1.4- fetch data from Api
[2023-06-21 06:35:13] 1.5- View data that returned from API
[2023-06-21 06:35:13] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:35:13] 1.7- get data of each project to select 
[2023-06-21 06:35:13] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:35:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:35:13] 1.10- check project update number [PUN]if not found
[2023-06-21 06:35:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:35:13] 3.9- Finish cron_job Function
[2023-06-21 06:36:51] 1.1- Start cron_job Function
[2023-06-21 06:36:51] 1.2-request Api_url $api_url
[2023-06-21 06:36:52] 1.3-store events of the jop periodically during process 
[2023-06-21 06:36:52] 1.4- fetch data from Api
[2023-06-21 06:36:52] 1.5- View data that returned from API
[2023-06-21 06:36:52] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:36:52] 1.7- get data of each project to select 
[2023-06-21 06:36:52] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:36:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:36:52] 1.10- check project update number [PUN]if not found
[2023-06-21 06:36:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:36:52] 3.9- Finish cron_job Function
[2023-06-21 06:37:13] 1.1- Start cron_job Function
[2023-06-21 06:37:13] 1.2-request Api_url $api_url
[2023-06-21 06:37:14] 1.3-store events of the jop periodically during process 
[2023-06-21 06:37:14] 1.4- fetch data from Api
[2023-06-21 06:37:14] 1.5- View data that returned from API
[2023-06-21 06:37:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:37:14] 1.7- get data of each project to select 
[2023-06-21 06:37:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:37:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:37:14] 1.10- check project update number [PUN]if not found
[2023-06-21 06:37:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:37:14] 3.9- Finish cron_job Function
[2023-06-21 06:38:51] 1.1- Start cron_job Function
[2023-06-21 06:38:51] 1.2-request Api_url $api_url
[2023-06-21 06:38:52] 1.3-store events of the jop periodically during process 
[2023-06-21 06:38:52] 1.4- fetch data from Api
[2023-06-21 06:38:52] 1.5- View data that returned from API
[2023-06-21 06:38:52] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:38:52] 1.7- get data of each project to select 
[2023-06-21 06:38:52] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:38:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:38:52] 1.10- check project update number [PUN]if not found
[2023-06-21 06:38:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:38:52] 3.9- Finish cron_job Function
[2023-06-21 06:39:14] 1.1- Start cron_job Function
[2023-06-21 06:39:14] 1.2-request Api_url $api_url
[2023-06-21 06:39:15] 1.3-store events of the jop periodically during process 
[2023-06-21 06:39:15] 1.4- fetch data from Api
[2023-06-21 06:39:15] 1.5- View data that returned from API
[2023-06-21 06:39:15] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:39:15] 1.7- get data of each project to select 
[2023-06-21 06:39:15] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:39:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:39:15] 1.10- check project update number [PUN]if not found
[2023-06-21 06:39:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:39:15] 3.9- Finish cron_job Function
[2023-06-21 06:40:52] 1.1- Start cron_job Function
[2023-06-21 06:40:52] 1.2-request Api_url $api_url
[2023-06-21 06:40:53] 1.3-store events of the jop periodically during process 
[2023-06-21 06:40:53] 1.4- fetch data from Api
[2023-06-21 06:40:53] 1.5- View data that returned from API
[2023-06-21 06:40:53] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:40:53] 1.7- get data of each project to select 
[2023-06-21 06:40:53] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:40:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:40:53] 1.10- check project update number [PUN]if not found
[2023-06-21 06:40:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:40:53] 3.9- Finish cron_job Function
[2023-06-21 06:41:14] 1.1- Start cron_job Function
[2023-06-21 06:41:14] 1.2-request Api_url $api_url
[2023-06-21 06:41:14] 1.3-store events of the jop periodically during process 
[2023-06-21 06:41:14] 1.4- fetch data from Api
[2023-06-21 06:41:14] 1.5- View data that returned from API
[2023-06-21 06:41:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:41:14] 1.7- get data of each project to select 
[2023-06-21 06:41:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:41:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:41:14] 1.10- check project update number [PUN]if not found
[2023-06-21 06:41:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:41:14] 3.9- Finish cron_job Function
[2023-06-21 06:42:53] 1.1- Start cron_job Function
[2023-06-21 06:42:53] 1.2-request Api_url $api_url
[2023-06-21 06:42:53] 1.3-store events of the jop periodically during process 
[2023-06-21 06:42:53] 1.4- fetch data from Api
[2023-06-21 06:42:53] 1.5- View data that returned from API
[2023-06-21 06:42:53] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:42:53] 1.7- get data of each project to select 
[2023-06-21 06:42:53] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:42:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:42:53] 1.10- check project update number [PUN]if not found
[2023-06-21 06:42:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:42:53] 3.9- Finish cron_job Function
[2023-06-21 06:43:14] 1.1- Start cron_job Function
[2023-06-21 06:43:14] 1.2-request Api_url $api_url
[2023-06-21 06:43:14] 1.3-store events of the jop periodically during process 
[2023-06-21 06:43:14] 1.4- fetch data from Api
[2023-06-21 06:43:14] 1.5- View data that returned from API
[2023-06-21 06:43:14] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:43:14] 1.7- get data of each project to select 
[2023-06-21 06:43:14] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:43:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:43:14] 1.10- check project update number [PUN]if not found
[2023-06-21 06:43:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:43:14] 3.9- Finish cron_job Function
[2023-06-21 06:44:52] 1.1- Start cron_job Function
[2023-06-21 06:44:52] 1.2-request Api_url $api_url
[2023-06-21 06:44:53] 1.3-store events of the jop periodically during process 
[2023-06-21 06:44:53] 1.4- fetch data from Api
[2023-06-21 06:44:53] 1.5- View data that returned from API
[2023-06-21 06:44:53] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:44:53] 1.7- get data of each project to select 
[2023-06-21 06:44:53] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:44:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:44:53] 1.10- check project update number [PUN]if not found
[2023-06-21 06:44:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:44:53] 3.9- Finish cron_job Function
[2023-06-21 06:45:14] 1.1- Start cron_job Function
[2023-06-21 06:45:14] 1.2-request Api_url $api_url
[2023-06-21 06:45:15] 1.3-store events of the jop periodically during process 
[2023-06-21 06:45:15] 1.4- fetch data from Api
[2023-06-21 06:45:15] 1.5- View data that returned from API
[2023-06-21 06:45:15] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:45:15] 1.7- get data of each project to select 
[2023-06-21 06:45:15] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:45:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:45:15] 1.10- check project update number [PUN]if not found
[2023-06-21 06:45:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:45:15] 3.9- Finish cron_job Function
[2023-06-21 06:46:53] 1.1- Start cron_job Function
[2023-06-21 06:46:53] 1.2-request Api_url $api_url
[2023-06-21 06:46:54] 1.3-store events of the jop periodically during process 
[2023-06-21 06:46:54] 1.4- fetch data from Api
[2023-06-21 06:46:54] 1.5- View data that returned from API
[2023-06-21 06:46:54] 1.6- get and View projects & tags that returned from  API
[2023-06-21 06:46:54] 1.7- get data of each project to select 
[2023-06-21 06:46:54] 1.8- The selected project Name:my android. id: 7
[2023-06-21 06:46:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-21 06:46:54] 1.10- check project update number [PUN]if not found
[2023-06-21 06:46:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-21 06:46:54] 3.9- Finish cron_job Function
