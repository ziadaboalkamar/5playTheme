[2023-06-24 11:53:57] 1.1- Start cron_job Function
[2023-06-24 11:53:57] 1.2-request Api_url $api_url
[2023-06-24 11:53:58] 1.3-store events of the jop periodically during process 
[2023-06-24 11:53:58] 1.4- fetch data from Api
[2023-06-24 11:53:58] 1.5- View data that returned from API
[2023-06-24 11:53:58] 1.6- get and View projects & tags that returned from  API
[2023-06-24 11:53:58] 1.7- get data of each project to select 
[2023-06-24 11:53:58] 1.8- The selected project Name:my android. id: 7
[2023-06-24 11:53:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 11:53:58] 1.10- check project update number [PUN]if not found
[2023-06-24 11:53:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 11:53:58] 3.9- Finish cron_job Function
[2023-06-24 11:54:58] 1.1- Start cron_job Function
[2023-06-24 11:54:58] 1.2-request Api_url $api_url
[2023-06-24 11:54:59] 1.3-store events of the jop periodically during process 
[2023-06-24 11:54:59] 1.4- fetch data from Api
[2023-06-24 11:54:59] 1.5- View data that returned from API
[2023-06-24 11:54:59] 1.6- get and View projects & tags that returned from  API
[2023-06-24 11:54:59] 1.7- get data of each project to select 
[2023-06-24 11:54:59] 1.8- The selected project Name:my android. id: 7
[2023-06-24 11:54:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 11:54:59] 1.10- check project update number [PUN]if not found
[2023-06-24 11:54:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 11:54:59] 3.9- Finish cron_job Function
[2023-06-24 11:55:58] 1.1- Start cron_job Function
[2023-06-24 11:55:58] 1.2-request Api_url $api_url
[2023-06-24 11:55:58] 1.3-store events of the jop periodically during process 
[2023-06-24 11:55:58] 1.4- fetch data from Api
[2023-06-24 11:55:58] 1.5- View data that returned from API
[2023-06-24 11:55:58] 1.6- get and View projects & tags that returned from  API
[2023-06-24 11:55:58] 1.7- get data of each project to select 
[2023-06-24 11:55:58] 1.8- The selected project Name:my android. id: 7
[2023-06-24 11:55:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 11:55:58] 1.10- check project update number [PUN]if not found
[2023-06-24 11:55:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 11:55:58] 3.9- Finish cron_job Function
[2023-06-24 11:57:58] 1.1- Start cron_job Function
[2023-06-24 11:57:58] 1.2-request Api_url $api_url
[2023-06-24 11:57:58] 1.3-store events of the jop periodically during process 
[2023-06-24 11:57:58] 1.4- fetch data from Api
[2023-06-24 11:57:58] 1.5- View data that returned from API
[2023-06-24 11:57:58] 1.6- get and View projects & tags that returned from  API
[2023-06-24 11:57:58] 1.7- get data of each project to select 
[2023-06-24 11:57:58] 1.8- The selected project Name:my android. id: 7
[2023-06-24 11:57:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 11:57:58] 1.10- check project update number [PUN]if not found
[2023-06-24 11:57:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 11:57:58] 3.9- Finish cron_job Function
[2023-06-24 12:03:35] 1.1- Start cron_job Function
[2023-06-24 12:03:35] 1.2-request Api_url $api_url
[2023-06-24 12:03:35] 1.3-store events of the jop periodically during process 
[2023-06-24 12:03:35] 1.4- fetch data from Api
[2023-06-24 12:03:35] 1.5- View data that returned from API
[2023-06-24 12:03:35] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:03:35] 1.7- get data of each project to select 
[2023-06-24 12:03:35] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:03:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:03:35] 1.10- check project update number [PUN]if not found
[2023-06-24 12:03:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:03:35] 3.9- Finish cron_job Function
[2023-06-24 12:04:22] 1.1- Start cron_job Function
[2023-06-24 12:04:22] 1.2-request Api_url $api_url
[2023-06-24 12:04:22] 1.3-store events of the jop periodically during process 
[2023-06-24 12:04:22] 1.4- fetch data from Api
[2023-06-24 12:04:22] 1.5- View data that returned from API
[2023-06-24 12:04:22] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:04:22] 1.7- get data of each project to select 
[2023-06-24 12:04:22] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:04:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:04:22] 1.10- check project update number [PUN]if not found
[2023-06-24 12:04:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:04:22] 3.9- Finish cron_job Function
[2023-06-24 12:06:46] 1.1- Start cron_job Function
[2023-06-24 12:06:46] 1.2-request Api_url $api_url
[2023-06-24 12:06:47] 1.3-store events of the jop periodically during process 
[2023-06-24 12:06:47] 1.4- fetch data from Api
[2023-06-24 12:06:47] 1.5- View data that returned from API
[2023-06-24 12:06:47] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:06:47] 1.7- get data of each project to select 
[2023-06-24 12:06:47] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:06:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:06:47] 1.10- check project update number [PUN]if not found
[2023-06-24 12:06:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:06:47] 3.9- Finish cron_job Function
[2023-06-24 12:07:20] 1.1- Start cron_job Function
[2023-06-24 12:07:20] 1.2-request Api_url $api_url
[2023-06-24 12:07:21] 1.3-store events of the jop periodically during process 
[2023-06-24 12:07:21] 1.4- fetch data from Api
[2023-06-24 12:07:21] 1.5- View data that returned from API
[2023-06-24 12:07:21] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:07:21] 1.7- get data of each project to select 
[2023-06-24 12:07:21] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:07:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:07:21] 1.10- check project update number [PUN]if not found
[2023-06-24 12:07:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:07:21] 3.9- Finish cron_job Function
[2023-06-24 12:08:24] 1.1- Start cron_job Function
[2023-06-24 12:08:24] 1.2-request Api_url $api_url
[2023-06-24 12:08:24] 1.3-store events of the jop periodically during process 
[2023-06-24 12:08:24] 1.4- fetch data from Api
[2023-06-24 12:08:24] 1.5- View data that returned from API
[2023-06-24 12:08:24] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:08:24] 1.7- get data of each project to select 
[2023-06-24 12:08:24] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:08:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:08:24] 1.10- check project update number [PUN]if not found
[2023-06-24 12:08:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:08:24] 3.9- Finish cron_job Function
[2023-06-24 12:09:11] 1.1- Start cron_job Function
[2023-06-24 12:09:11] 1.2-request Api_url $api_url
[2023-06-24 12:09:12] 1.3-store events of the jop periodically during process 
[2023-06-24 12:09:12] 1.4- fetch data from Api
[2023-06-24 12:09:12] 1.5- View data that returned from API
[2023-06-24 12:09:12] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:09:12] 1.7- get data of each project to select 
[2023-06-24 12:09:12] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:09:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:09:12] 1.10- check project update number [PUN]if not found
[2023-06-24 12:09:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:09:12] 3.9- Finish cron_job Function
[2023-06-24 12:13:36] 1.1- Start cron_job Function
[2023-06-24 12:13:36] 1.2-request Api_url $api_url
[2023-06-24 12:13:36] 1.3-store events of the jop periodically during process 
[2023-06-24 12:13:36] 1.4- fetch data from Api
[2023-06-24 12:13:36] 1.5- View data that returned from API
[2023-06-24 12:13:36] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:13:36] 1.7- get data of each project to select 
[2023-06-24 12:13:36] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:13:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:13:36] 1.10- check project update number [PUN]if not found
[2023-06-24 12:13:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:13:36] 3.9- Finish cron_job Function
[2023-06-24 12:14:30] 1.1- Start cron_job Function
[2023-06-24 12:14:30] 1.2-request Api_url $api_url
[2023-06-24 12:14:31] 1.3-store events of the jop periodically during process 
[2023-06-24 12:14:31] 1.4- fetch data from Api
[2023-06-24 12:14:31] 1.5- View data that returned from API
[2023-06-24 12:14:31] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:14:31] 1.7- get data of each project to select 
[2023-06-24 12:14:31] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:14:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:14:31] 1.10- check project update number [PUN]if not found
[2023-06-24 12:14:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:14:31] 3.9- Finish cron_job Function
[2023-06-24 12:15:34] 1.1- Start cron_job Function
[2023-06-24 12:15:34] 1.2-request Api_url $api_url
[2023-06-24 12:15:34] 1.3-store events of the jop periodically during process 
[2023-06-24 12:15:34] 1.4- fetch data from Api
[2023-06-24 12:15:34] 1.5- View data that returned from API
[2023-06-24 12:15:34] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:15:34] 1.7- get data of each project to select 
[2023-06-24 12:15:34] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:15:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:15:34] 1.10- check project update number [PUN]if not found
[2023-06-24 12:15:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:15:34] 3.9- Finish cron_job Function
[2023-06-24 12:16:47] 1.1- Start cron_job Function
[2023-06-24 12:16:47] 1.2-request Api_url $api_url
[2023-06-24 12:16:48] 1.3-store events of the jop periodically during process 
[2023-06-24 12:16:48] 1.4- fetch data from Api
[2023-06-24 12:16:48] 1.5- View data that returned from API
[2023-06-24 12:16:48] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:16:48] 1.7- get data of each project to select 
[2023-06-24 12:16:48] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:16:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:16:48] 1.10- check project update number [PUN]if not found
[2023-06-24 12:16:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:16:48] 3.9- Finish cron_job Function
[2023-06-24 12:17:13] 1.1- Start cron_job Function
[2023-06-24 12:17:13] 1.2-request Api_url $api_url
[2023-06-24 12:17:14] 1.3-store events of the jop periodically during process 
[2023-06-24 12:17:14] 1.4- fetch data from Api
[2023-06-24 12:17:14] 1.5- View data that returned from API
[2023-06-24 12:17:14] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:17:14] 1.7- get data of each project to select 
[2023-06-24 12:17:14] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:17:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:17:14] 1.10- check project update number [PUN]if not found
[2023-06-24 12:17:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:17:14] 3.9- Finish cron_job Function
[2023-06-24 12:18:17] 1.1- Start cron_job Function
[2023-06-24 12:18:17] 1.2-request Api_url $api_url
[2023-06-24 12:18:18] 1.3-store events of the jop periodically during process 
[2023-06-24 12:18:18] 1.4- fetch data from Api
[2023-06-24 12:18:18] 1.5- View data that returned from API
[2023-06-24 12:18:18] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:18:18] 1.7- get data of each project to select 
[2023-06-24 12:18:18] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:18:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:18:18] 1.10- check project update number [PUN]if not found
[2023-06-24 12:18:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:18:18] 3.9- Finish cron_job Function
[2023-06-24 12:20:48] 1.1- Start cron_job Function
[2023-06-24 12:20:48] 1.2-request Api_url $api_url
[2023-06-24 12:20:48] 1.3-store events of the jop periodically during process 
[2023-06-24 12:20:48] 1.4- fetch data from Api
[2023-06-24 12:20:48] 1.5- View data that returned from API
[2023-06-24 12:20:48] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:20:48] 1.7- get data of each project to select 
[2023-06-24 12:20:48] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:20:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:20:48] 1.10- check project update number [PUN]if not found
[2023-06-24 12:20:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:20:48] 3.9- Finish cron_job Function
[2023-06-24 12:22:49] 1.1- Start cron_job Function
[2023-06-24 12:22:49] 1.2-request Api_url $api_url
[2023-06-24 12:22:49] 1.3-store events of the jop periodically during process 
[2023-06-24 12:22:49] 1.4- fetch data from Api
[2023-06-24 12:22:49] 1.5- View data that returned from API
[2023-06-24 12:22:49] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:22:49] 1.7- get data of each project to select 
[2023-06-24 12:22:49] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:22:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:22:49] 1.10- check project update number [PUN]if not found
[2023-06-24 12:22:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:22:49] 3.9- Finish cron_job Function
[2023-06-24 12:23:59] 1.1- Start cron_job Function
[2023-06-24 12:23:59] 1.2-request Api_url $api_url
[2023-06-24 12:23:59] 1.3-store events of the jop periodically during process 
[2023-06-24 12:23:59] 1.4- fetch data from Api
[2023-06-24 12:23:59] 1.5- View data that returned from API
[2023-06-24 12:23:59] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:23:59] 1.7- get data of each project to select 
[2023-06-24 12:23:59] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:23:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:23:59] 1.10- check project update number [PUN]if not found
[2023-06-24 12:23:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:23:59] 3.9- Finish cron_job Function
[2023-06-24 12:24:50] 1.1- Start cron_job Function
[2023-06-24 12:24:50] 1.2-request Api_url $api_url
[2023-06-24 12:24:50] 1.3-store events of the jop periodically during process 
[2023-06-24 12:24:50] 1.4- fetch data from Api
[2023-06-24 12:24:50] 1.5- View data that returned from API
[2023-06-24 12:24:50] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:24:50] 1.7- get data of each project to select 
[2023-06-24 12:24:50] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:24:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:24:50] 1.10- check project update number [PUN]if not found
[2023-06-24 12:24:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:24:50] 3.9- Finish cron_job Function
[2023-06-24 12:31:09] 1.1- Start cron_job Function
[2023-06-24 12:31:09] 1.2-request Api_url $api_url
[2023-06-24 12:31:09] 1.3-store events of the jop periodically during process 
[2023-06-24 12:31:09] 1.4- fetch data from Api
[2023-06-24 12:31:09] 1.5- View data that returned from API
[2023-06-24 12:31:09] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:31:09] 1.7- get data of each project to select 
[2023-06-24 12:31:09] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:31:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:31:09] 1.10- check project update number [PUN]if not found
[2023-06-24 12:31:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:31:09] 3.9- Finish cron_job Function
[2023-06-24 12:32:40] 1.1- Start cron_job Function
[2023-06-24 12:32:40] 1.2-request Api_url $api_url
[2023-06-24 12:32:41] 1.3-store events of the jop periodically during process 
[2023-06-24 12:32:41] 1.4- fetch data from Api
[2023-06-24 12:32:41] 1.5- View data that returned from API
[2023-06-24 12:32:41] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:32:41] 1.7- get data of each project to select 
[2023-06-24 12:32:41] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:32:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:32:41] 1.10- check project update number [PUN]if not found
[2023-06-24 12:32:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:32:41] 3.9- Finish cron_job Function
[2023-06-24 12:33:10] 1.1- Start cron_job Function
[2023-06-24 12:33:10] 1.2-request Api_url $api_url
[2023-06-24 12:33:11] 1.3-store events of the jop periodically during process 
[2023-06-24 12:33:11] 1.4- fetch data from Api
[2023-06-24 12:33:11] 1.5- View data that returned from API
[2023-06-24 12:33:11] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:33:11] 1.7- get data of each project to select 
[2023-06-24 12:33:11] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:33:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:33:11] 1.10- check project update number [PUN]if not found
[2023-06-24 12:33:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:33:11] 3.9- Finish cron_job Function
[2023-06-24 12:35:08] 1.1- Start cron_job Function
[2023-06-24 12:35:08] 1.2-request Api_url $api_url
[2023-06-24 12:35:09] 1.3-store events of the jop periodically during process 
[2023-06-24 12:35:09] 1.4- fetch data from Api
[2023-06-24 12:35:09] 1.5- View data that returned from API
[2023-06-24 12:35:09] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:35:09] 1.7- get data of each project to select 
[2023-06-24 12:35:09] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:35:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:35:09] 1.10- check project update number [PUN]if not found
[2023-06-24 12:35:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:35:09] 3.9- Finish cron_job Function
[2023-06-24 12:35:12] 1.1- Start cron_job Function
[2023-06-24 12:35:12] 1.2-request Api_url $api_url
[2023-06-24 12:35:12] 1.3-store events of the jop periodically during process 
[2023-06-24 12:35:12] 1.4- fetch data from Api
[2023-06-24 12:35:12] 1.5- View data that returned from API
[2023-06-24 12:35:12] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:35:12] 1.7- get data of each project to select 
[2023-06-24 12:35:12] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:35:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:35:12] 1.10- check project update number [PUN]if not found
[2023-06-24 12:35:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:35:12] 3.9- Finish cron_job Function
[2023-06-24 12:36:41] 1.1- Start cron_job Function
[2023-06-24 12:36:41] 1.2-request Api_url $api_url
[2023-06-24 12:36:42] 1.3-store events of the jop periodically during process 
[2023-06-24 12:36:42] 1.4- fetch data from Api
[2023-06-24 12:36:42] 1.5- View data that returned from API
[2023-06-24 12:36:42] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:36:42] 1.7- get data of each project to select 
[2023-06-24 12:36:42] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:36:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:36:42] 1.10- check project update number [PUN]if not found
[2023-06-24 12:36:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:36:42] 3.9- Finish cron_job Function
[2023-06-24 12:37:10] 1.1- Start cron_job Function
[2023-06-24 12:37:10] 1.2-request Api_url $api_url
[2023-06-24 12:37:11] 1.3-store events of the jop periodically during process 
[2023-06-24 12:37:11] 1.4- fetch data from Api
[2023-06-24 12:37:11] 1.5- View data that returned from API
[2023-06-24 12:37:11] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:37:11] 1.7- get data of each project to select 
[2023-06-24 12:37:11] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:37:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:37:11] 1.10- check project update number [PUN]if not found
[2023-06-24 12:37:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:37:11] 3.9- Finish cron_job Function
[2023-06-24 12:38:10] 1.1- Start cron_job Function
[2023-06-24 12:38:10] 1.2-request Api_url $api_url
[2023-06-24 12:38:10] 1.3-store events of the jop periodically during process 
[2023-06-24 12:38:10] 1.4- fetch data from Api
[2023-06-24 12:38:10] 1.5- View data that returned from API
[2023-06-24 12:38:10] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:38:10] 1.7- get data of each project to select 
[2023-06-24 12:38:10] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:38:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:38:10] 1.10- check project update number [PUN]if not found
[2023-06-24 12:38:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:38:10] 3.9- Finish cron_job Function
[2023-06-24 12:39:12] 1.1- Start cron_job Function
[2023-06-24 12:39:12] 1.2-request Api_url $api_url
[2023-06-24 12:39:12] 1.3-store events of the jop periodically during process 
[2023-06-24 12:39:12] 1.4- fetch data from Api
[2023-06-24 12:39:12] 1.5- View data that returned from API
[2023-06-24 12:39:12] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:39:12] 1.7- get data of each project to select 
[2023-06-24 12:39:12] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:39:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:39:12] 1.10- check project update number [PUN]if not found
[2023-06-24 12:39:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:39:12] 3.9- Finish cron_job Function
[2023-06-24 12:40:58] 1.1- Start cron_job Function
[2023-06-24 12:40:58] 1.2-request Api_url $api_url
[2023-06-24 12:40:59] 1.3-store events of the jop periodically during process 
[2023-06-24 12:40:59] 1.4- fetch data from Api
[2023-06-24 12:40:59] 1.5- View data that returned from API
[2023-06-24 12:40:59] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:40:59] 1.7- get data of each project to select 
[2023-06-24 12:40:59] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:40:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:40:59] 1.10- check project update number [PUN]if not found
[2023-06-24 12:40:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:40:59] 2.2- check if project update number[pun > 0]
[2023-06-24 12:40:59] 2.3- store data into history table
[2023-06-24 12:40:59] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-24 12:41:01] 2.7-changed the new pun 221 
[2023-06-24 12:41:01] 2.8- register updated_app in event table
[2023-06-24 12:41:01] 2.9- set status {'updated'}
[2023-06-24 12:41:01] 3.1- start_process
[2023-06-24 12:41:01] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-24 12:41:01] 3.3- if aun status > 0 
[2023-06-24 12:41:01] 3.5 check  the app have key '.rating.' if not found 
[2023-06-24 12:41:01] 3.7 check if the keys exists, update data
[2023-06-24 12:41:01] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:01] 3.5 check  the app have key '.version.' if not found 
[2023-06-24 12:41:01] 3.7 check if the keys exists, update data
[2023-06-24 12:41:01] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:01] 3.5 check  the app have key '..' if not found 
[2023-06-24 12:41:01] 3.6- Insert  all keys 
[2023-06-24 12:41:01] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-24 12:41:01] 3.7 check if the keys exists, update data
[2023-06-24 12:41:01] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:01] 3.5 check  the app have key '.logo.' if not found 
[2023-06-24 12:41:01] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.link.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.author.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.votes.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.5 check  the app have key '.file.' if not found 
[2023-06-24 12:41:02] 3.7 check if the keys exists, update data
[2023-06-24 12:41:02] 3.8- update all keys & logo & thumbnail 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:02] 3.1- start_process
[2023-06-24 12:41:02] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-24 12:41:02] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:03] 3.1- start_process
[2023-06-24 12:41:03] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-24 12:41:03] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:04] 3.1- start_process
[2023-06-24 12:41:04] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-24 12:41:04] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:05] 3.1- start_process
[2023-06-24 12:41:05] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-24 12:41:05] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:06] 3.1- start_process
[2023-06-24 12:41:06] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-24 12:41:06] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:07] 3.1- start_process
[2023-06-24 12:41:07] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-24 12:41:07] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:08] 3.1- start_process
[2023-06-24 12:41:08] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-24 12:41:08] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.1- start_process
[2023-06-24 12:41:09] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-24 12:41:09] 3.3- if aun status > 0 
[2023-06-24 12:41:09] 3.9- Finish cron_job Function
[2023-06-24 12:41:11] 1.1- Start cron_job Function
[2023-06-24 12:41:11] 1.2-request Api_url $api_url
[2023-06-24 12:41:12] 1.3-store events of the jop periodically during process 
[2023-06-24 12:41:12] 1.4- fetch data from Api
[2023-06-24 12:41:12] 1.5- View data that returned from API
[2023-06-24 12:41:12] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:41:12] 1.7- get data of each project to select 
[2023-06-24 12:41:12] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:41:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:41:12] 1.10- check project update number [PUN]if not found
[2023-06-24 12:41:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:41:12] 3.9- Finish cron_job Function
[2023-06-24 12:42:48] 1.1- Start cron_job Function
[2023-06-24 12:42:48] 1.2-request Api_url $api_url
[2023-06-24 12:42:49] 1.3-store events of the jop periodically during process 
[2023-06-24 12:42:49] 1.4- fetch data from Api
[2023-06-24 12:42:49] 1.5- View data that returned from API
[2023-06-24 12:42:49] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:42:49] 1.7- get data of each project to select 
[2023-06-24 12:42:49] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:42:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:42:49] 1.10- check project update number [PUN]if not found
[2023-06-24 12:42:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:42:49] 3.9- Finish cron_job Function
[2023-06-24 12:43:43] 1.1- Start cron_job Function
[2023-06-24 12:43:43] 1.2-request Api_url $api_url
[2023-06-24 12:43:44] 1.3-store events of the jop periodically during process 
[2023-06-24 12:43:44] 1.4- fetch data from Api
[2023-06-24 12:43:44] 1.5- View data that returned from API
[2023-06-24 12:43:44] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:43:44] 1.7- get data of each project to select 
[2023-06-24 12:43:44] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:43:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:43:44] 1.10- check project update number [PUN]if not found
[2023-06-24 12:43:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:43:44] 3.9- Finish cron_job Function
[2023-06-24 12:44:09] 1.1- Start cron_job Function
[2023-06-24 12:44:09] 1.2-request Api_url $api_url
[2023-06-24 12:44:10] 1.3-store events of the jop periodically during process 
[2023-06-24 12:44:10] 1.4- fetch data from Api
[2023-06-24 12:44:10] 1.5- View data that returned from API
[2023-06-24 12:44:10] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:44:10] 1.7- get data of each project to select 
[2023-06-24 12:44:10] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:44:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:44:10] 1.10- check project update number [PUN]if not found
[2023-06-24 12:44:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:44:10] 3.9- Finish cron_job Function
[2023-06-24 12:45:19] 1.1- Start cron_job Function
[2023-06-24 12:45:19] 1.2-request Api_url $api_url
[2023-06-24 12:45:20] 1.3-store events of the jop periodically during process 
[2023-06-24 12:45:20] 1.4- fetch data from Api
[2023-06-24 12:45:20] 1.5- View data that returned from API
[2023-06-24 12:45:20] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:45:20] 1.7- get data of each project to select 
[2023-06-24 12:45:20] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:45:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:45:20] 1.10- check project update number [PUN]if not found
[2023-06-24 12:45:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:45:20] 3.9- Finish cron_job Function
[2023-06-24 12:47:15] 1.1- Start cron_job Function
[2023-06-24 12:47:15] 1.2-request Api_url $api_url
[2023-06-24 12:47:15] 1.3-store events of the jop periodically during process 
[2023-06-24 12:47:15] 1.4- fetch data from Api
[2023-06-24 12:47:15] 1.5- View data that returned from API
[2023-06-24 12:47:15] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:47:15] 1.7- get data of each project to select 
[2023-06-24 12:47:15] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:47:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:47:15] 1.10- check project update number [PUN]if not found
[2023-06-24 12:47:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:47:15] 3.9- Finish cron_job Function
[2023-06-24 12:50:07] 1.1- Start cron_job Function
[2023-06-24 12:50:07] 1.2-request Api_url $api_url
[2023-06-24 12:50:07] 1.3-store events of the jop periodically during process 
[2023-06-24 12:50:07] 1.4- fetch data from Api
[2023-06-24 12:50:07] 1.5- View data that returned from API
[2023-06-24 12:50:07] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:50:07] 1.7- get data of each project to select 
[2023-06-24 12:50:07] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:50:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:50:07] 1.10- check project update number [PUN]if not found
[2023-06-24 12:50:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:50:07] 3.9- Finish cron_job Function
[2023-06-24 12:51:14] 1.1- Start cron_job Function
[2023-06-24 12:51:14] 1.2-request Api_url $api_url
[2023-06-24 12:51:15] 1.3-store events of the jop periodically during process 
[2023-06-24 12:51:15] 1.4- fetch data from Api
[2023-06-24 12:51:15] 1.5- View data that returned from API
[2023-06-24 12:51:15] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:51:15] 1.7- get data of each project to select 
[2023-06-24 12:51:15] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:51:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:51:15] 1.10- check project update number [PUN]if not found
[2023-06-24 12:51:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:51:15] 2.2- check if project update number[pun > 0]
[2023-06-24 12:51:15] 2.3- store data into history table
[2023-06-24 12:51:15] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:17] 3.1- start_process
[2023-06-24 12:51:17] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-24 12:51:17] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:18] 3.1- start_process
[2023-06-24 12:51:18] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-24 12:51:18] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:19] 3.1- start_process
[2023-06-24 12:51:19] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-24 12:51:19] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:20] 3.1- start_process
[2023-06-24 12:51:20] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-24 12:51:20] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:21] 3.1- start_process
[2023-06-24 12:51:21] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-24 12:51:21] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:22] 3.1- start_process
[2023-06-24 12:51:22] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-24 12:51:22] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:23] 3.1- start_process
[2023-06-24 12:51:23] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-24 12:51:23] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.1- start_process
[2023-06-24 12:51:24] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-24 12:51:24] 3.3- if aun status > 0 
[2023-06-24 12:51:24] 3.9- Finish cron_job Function
[2023-06-24 12:52:12] 1.1- Start cron_job Function
[2023-06-24 12:52:12] 1.2-request Api_url $api_url
[2023-06-24 12:52:13] 1.3-store events of the jop periodically during process 
[2023-06-24 12:52:13] 1.4- fetch data from Api
[2023-06-24 12:52:13] 1.5- View data that returned from API
[2023-06-24 12:52:13] 1.6- get and View projects & tags that returned from  API
[2023-06-24 12:52:13] 1.7- get data of each project to select 
[2023-06-24 12:52:13] 1.8- The selected project Name:my android. id: 7
[2023-06-24 12:52:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-24 12:52:13] 1.10- check project update number [PUN]if not found
[2023-06-24 12:52:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-24 12:52:13] 3.9- Finish cron_job Function
[2023-06-25 05:43:20] 1.1- Start cron_job Function
[2023-06-25 05:43:20] 1.2-request Api_url $api_url
[2023-06-25 05:43:21] 1.3-store events of the jop periodically during process 
[2023-06-25 05:43:21] 1.4- fetch data from Api
[2023-06-25 05:43:21] 1.5- View data that returned from API
[2023-06-25 05:43:21] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:43:21] 1.7- get data of each project to select 
[2023-06-25 05:43:21] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:43:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:43:21] 1.10- check project update number [PUN]if not found
[2023-06-25 05:43:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:43:21] 2.2- check if project update number[pun > 0]
[2023-06-25 05:43:21] 2.3- store data into history table
[2023-06-25 05:43:21] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-25 05:43:23] 2.7-changed the new pun 227 
[2023-06-25 05:43:23] 2.8- register updated_app in event table
[2023-06-25 05:43:23] 2.9- set status {'updated'}
[2023-06-25 05:43:23] 3.1- start_process
[2023-06-25 05:43:23] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-25 05:43:23] 3.3- if aun status > 0 
[2023-06-25 05:43:23] 3.5 check  the app have key '.rating.' if not found 
[2023-06-25 05:43:23] 3.7 check if the keys exists, update data
[2023-06-25 05:43:23] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:23] 3.5 check  the app have key '.version.' if not found 
[2023-06-25 05:43:23] 3.7 check if the keys exists, update data
[2023-06-25 05:43:23] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:23] 3.5 check  the app have key '..' if not found 
[2023-06-25 05:43:23] 3.6- Insert  all keys 
[2023-06-25 05:43:23] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-25 05:43:23] 3.7 check if the keys exists, update data
[2023-06-25 05:43:23] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:23] 3.5 check  the app have key '.logo.' if not found 
[2023-06-25 05:43:23] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.link.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.author.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.votes.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.5 check  the app have key '.file.' if not found 
[2023-06-25 05:43:24] 3.7 check if the keys exists, update data
[2023-06-25 05:43:24] 3.8- update all keys & logo & thumbnail 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:24] 3.1- start_process
[2023-06-25 05:43:24] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-25 05:43:24] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:25] 3.1- start_process
[2023-06-25 05:43:25] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-25 05:43:25] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:26] 3.1- start_process
[2023-06-25 05:43:26] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-25 05:43:26] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:27] 3.1- start_process
[2023-06-25 05:43:27] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-25 05:43:27] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:28] 3.1- start_process
[2023-06-25 05:43:28] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-25 05:43:28] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:29] 3.1- start_process
[2023-06-25 05:43:29] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-25 05:43:29] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:30] 3.1- start_process
[2023-06-25 05:43:30] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-25 05:43:30] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.1- start_process
[2023-06-25 05:43:31] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-25 05:43:31] 3.3- if aun status > 0 
[2023-06-25 05:43:31] 3.9- Finish cron_job Function
[2023-06-25 05:51:37] 1.1- Start cron_job Function
[2023-06-25 05:51:37] 1.2-request Api_url $api_url
[2023-06-25 05:51:37] 1.3-store events of the jop periodically during process 
[2023-06-25 05:51:37] 1.4- fetch data from Api
[2023-06-25 05:51:37] 1.5- View data that returned from API
[2023-06-25 05:51:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:51:37] 1.7- get data of each project to select 
[2023-06-25 05:51:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:51:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:51:37] 1.10- check project update number [PUN]if not found
[2023-06-25 05:51:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:51:37] 3.9- Finish cron_job Function
[2023-06-25 05:52:53] 1.1- Start cron_job Function
[2023-06-25 05:52:53] 1.2-request Api_url $api_url
[2023-06-25 05:52:54] 1.3-store events of the jop periodically during process 
[2023-06-25 05:52:54] 1.4- fetch data from Api
[2023-06-25 05:52:54] 1.5- View data that returned from API
[2023-06-25 05:52:54] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:52:54] 1.7- get data of each project to select 
[2023-06-25 05:52:54] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:52:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:52:54] 1.10- check project update number [PUN]if not found
[2023-06-25 05:52:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:52:54] 3.9- Finish cron_job Function
[2023-06-25 05:53:57] 1.1- Start cron_job Function
[2023-06-25 05:53:57] 1.2-request Api_url $api_url
[2023-06-25 05:53:57] 1.3-store events of the jop periodically during process 
[2023-06-25 05:53:57] 1.4- fetch data from Api
[2023-06-25 05:53:57] 1.5- View data that returned from API
[2023-06-25 05:53:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:53:57] 1.7- get data of each project to select 
[2023-06-25 05:53:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:53:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:53:57] 1.10- check project update number [PUN]if not found
[2023-06-25 05:53:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:53:57] 3.9- Finish cron_job Function
[2023-06-25 05:54:30] 1.1- Start cron_job Function
[2023-06-25 05:54:30] 1.2-request Api_url $api_url
[2023-06-25 05:54:31] 1.3-store events of the jop periodically during process 
[2023-06-25 05:54:31] 1.4- fetch data from Api
[2023-06-25 05:54:31] 1.5- View data that returned from API
[2023-06-25 05:54:31] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:54:31] 1.7- get data of each project to select 
[2023-06-25 05:54:31] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:54:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:54:31] 1.10- check project update number [PUN]if not found
[2023-06-25 05:54:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:54:31] 3.9- Finish cron_job Function
[2023-06-25 05:58:49] 1.1- Start cron_job Function
[2023-06-25 05:58:49] 1.2-request Api_url $api_url
[2023-06-25 05:58:50] 1.3-store events of the jop periodically during process 
[2023-06-25 05:58:50] 1.4- fetch data from Api
[2023-06-25 05:58:50] 1.5- View data that returned from API
[2023-06-25 05:58:50] 1.6- get and View projects & tags that returned from  API
[2023-06-25 05:58:50] 1.7- get data of each project to select 
[2023-06-25 05:58:50] 1.8- The selected project Name:my android. id: 7
[2023-06-25 05:58:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 05:58:50] 1.10- check project update number [PUN]if not found
[2023-06-25 05:58:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 05:58:50] 3.9- Finish cron_job Function
[2023-06-25 06:00:44] 1.1- Start cron_job Function
[2023-06-25 06:00:44] 1.2-request Api_url $api_url
[2023-06-25 06:00:45] 1.3-store events of the jop periodically during process 
[2023-06-25 06:00:45] 1.4- fetch data from Api
[2023-06-25 06:00:45] 1.5- View data that returned from API
[2023-06-25 06:00:45] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:00:45] 1.7- get data of each project to select 
[2023-06-25 06:00:45] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:00:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:00:45] 1.10- check project update number [PUN]if not found
[2023-06-25 06:00:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:00:45] 3.9- Finish cron_job Function
[2023-06-25 06:01:25] 1.1- Start cron_job Function
[2023-06-25 06:01:25] 1.2-request Api_url $api_url
[2023-06-25 06:01:26] 1.3-store events of the jop periodically during process 
[2023-06-25 06:01:26] 1.4- fetch data from Api
[2023-06-25 06:01:26] 1.5- View data that returned from API
[2023-06-25 06:01:26] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:01:26] 1.7- get data of each project to select 
[2023-06-25 06:01:26] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:01:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:01:26] 1.10- check project update number [PUN]if not found
[2023-06-25 06:01:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:01:26] 3.9- Finish cron_job Function
[2023-06-25 06:04:49] 1.1- Start cron_job Function
[2023-06-25 06:04:49] 1.2-request Api_url $api_url
[2023-06-25 06:04:50] 1.3-store events of the jop periodically during process 
[2023-06-25 06:04:50] 1.4- fetch data from Api
[2023-06-25 06:04:50] 1.5- View data that returned from API
[2023-06-25 06:04:50] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:04:50] 1.7- get data of each project to select 
[2023-06-25 06:04:50] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:04:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:04:50] 1.10- check project update number [PUN]if not found
[2023-06-25 06:04:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:04:50] 3.9- Finish cron_job Function
[2023-06-25 06:06:54] 1.1- Start cron_job Function
[2023-06-25 06:06:54] 1.2-request Api_url $api_url
[2023-06-25 06:06:55] 1.3-store events of the jop periodically during process 
[2023-06-25 06:06:55] 1.4- fetch data from Api
[2023-06-25 06:06:55] 1.5- View data that returned from API
[2023-06-25 06:06:55] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:06:55] 1.7- get data of each project to select 
[2023-06-25 06:06:55] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:06:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:06:55] 1.10- check project update number [PUN]if not found
[2023-06-25 06:06:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:06:55] 3.9- Finish cron_job Function
[2023-06-25 06:09:12] 1.1- Start cron_job Function
[2023-06-25 06:09:12] 1.2-request Api_url $api_url
[2023-06-25 06:09:12] 1.3-store events of the jop periodically during process 
[2023-06-25 06:09:13] 1.4- fetch data from Api
[2023-06-25 06:09:13] 1.5- View data that returned from API
[2023-06-25 06:09:13] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:09:13] 1.7- get data of each project to select 
[2023-06-25 06:09:13] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:09:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:09:13] 1.10- check project update number [PUN]if not found
[2023-06-25 06:09:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:09:13] 3.9- Finish cron_job Function
[2023-06-25 06:10:53] 1.1- Start cron_job Function
[2023-06-25 06:10:53] 1.2-request Api_url $api_url
[2023-06-25 06:10:54] 1.3-store events of the jop periodically during process 
[2023-06-25 06:10:54] 1.4- fetch data from Api
[2023-06-25 06:10:54] 1.5- View data that returned from API
[2023-06-25 06:10:54] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:10:54] 1.7- get data of each project to select 
[2023-06-25 06:10:54] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:10:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:10:54] 1.10- check project update number [PUN]if not found
[2023-06-25 06:10:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:10:54] 3.9- Finish cron_job Function
[2023-06-25 06:12:50] 1.1- Start cron_job Function
[2023-06-25 06:12:50] 1.2-request Api_url $api_url
[2023-06-25 06:12:51] 1.3-store events of the jop periodically during process 
[2023-06-25 06:12:51] 1.4- fetch data from Api
[2023-06-25 06:12:51] 1.5- View data that returned from API
[2023-06-25 06:12:51] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:12:51] 1.7- get data of each project to select 
[2023-06-25 06:12:51] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:12:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:12:51] 1.10- check project update number [PUN]if not found
[2023-06-25 06:12:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:12:51] 3.9- Finish cron_job Function
[2023-06-25 06:13:13] 1.1- Start cron_job Function
[2023-06-25 06:13:13] 1.2-request Api_url $api_url
[2023-06-25 06:13:14] 1.3-store events of the jop periodically during process 
[2023-06-25 06:13:14] 1.4- fetch data from Api
[2023-06-25 06:13:14] 1.5- View data that returned from API
[2023-06-25 06:13:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:13:14] 1.7- get data of each project to select 
[2023-06-25 06:13:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:13:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:13:14] 1.10- check project update number [PUN]if not found
[2023-06-25 06:13:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:13:14] 3.9- Finish cron_job Function
[2023-06-25 06:22:37] 1.1- Start cron_job Function
[2023-06-25 06:22:37] 1.2-request Api_url $api_url
[2023-06-25 06:22:37] 1.3-store events of the jop periodically during process 
[2023-06-25 06:22:37] 1.4- fetch data from Api
[2023-06-25 06:22:37] 1.5- View data that returned from API
[2023-06-25 06:22:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:22:37] 1.7- get data of each project to select 
[2023-06-25 06:22:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:22:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:22:37] 1.10- check project update number [PUN]if not found
[2023-06-25 06:22:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:22:37] 3.9- Finish cron_job Function
[2023-06-25 06:23:35] 1.1- Start cron_job Function
[2023-06-25 06:23:35] 1.2-request Api_url $api_url
[2023-06-25 06:23:35] 1.3-store events of the jop periodically during process 
[2023-06-25 06:23:36] 1.4- fetch data from Api
[2023-06-25 06:23:36] 1.5- View data that returned from API
[2023-06-25 06:23:36] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:23:36] 1.7- get data of each project to select 
[2023-06-25 06:23:36] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:23:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:23:36] 1.10- check project update number [PUN]if not found
[2023-06-25 06:23:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:23:36] 3.9- Finish cron_job Function
[2023-06-25 06:46:32] 1.1- Start cron_job Function
[2023-06-25 06:46:32] 1.2-request Api_url $api_url
[2023-06-25 06:46:33] 1.3-store events of the jop periodically during process 
[2023-06-25 06:46:33] 1.4- fetch data from Api
[2023-06-25 06:46:33] 1.5- View data that returned from API
[2023-06-25 06:46:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:46:33] 1.7- get data of each project to select 
[2023-06-25 06:46:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:46:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:46:33] 1.10- check project update number [PUN]if not found
[2023-06-25 06:46:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:46:33] 3.9- Finish cron_job Function
[2023-06-25 06:50:52] 1.1- Start cron_job Function
[2023-06-25 06:50:52] 1.2-request Api_url $api_url
[2023-06-25 06:50:52] 1.3-store events of the jop periodically during process 
[2023-06-25 06:50:52] 1.4- fetch data from Api
[2023-06-25 06:50:52] 1.5- View data that returned from API
[2023-06-25 06:50:52] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:50:52] 1.7- get data of each project to select 
[2023-06-25 06:50:52] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:50:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:50:52] 1.10- check project update number [PUN]if not found
[2023-06-25 06:50:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:50:52] 3.9- Finish cron_job Function
[2023-06-25 06:52:10] 1.1- Start cron_job Function
[2023-06-25 06:52:10] 1.2-request Api_url $api_url
[2023-06-25 06:52:10] 1.3-store events of the jop periodically during process 
[2023-06-25 06:52:10] 1.4- fetch data from Api
[2023-06-25 06:52:10] 1.5- View data that returned from API
[2023-06-25 06:52:10] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:52:10] 1.7- get data of each project to select 
[2023-06-25 06:52:10] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:52:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:52:10] 1.10- check project update number [PUN]if not found
[2023-06-25 06:52:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:52:10] 3.9- Finish cron_job Function
[2023-06-25 06:53:55] 1.1- Start cron_job Function
[2023-06-25 06:53:55] 1.2-request Api_url $api_url
[2023-06-25 06:53:56] 1.3-store events of the jop periodically during process 
[2023-06-25 06:53:56] 1.4- fetch data from Api
[2023-06-25 06:53:56] 1.5- View data that returned from API
[2023-06-25 06:53:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 06:53:56] 1.7- get data of each project to select 
[2023-06-25 06:53:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 06:53:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 06:53:56] 1.10- check project update number [PUN]if not found
[2023-06-25 06:53:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 06:53:56] 3.9- Finish cron_job Function
[2023-06-25 07:02:45] 1.1- Start cron_job Function
[2023-06-25 07:02:45] 1.2-request Api_url $api_url
[2023-06-25 07:02:46] 1.3-store events of the jop periodically during process 
[2023-06-25 07:02:46] 1.4- fetch data from Api
[2023-06-25 07:02:46] 1.5- View data that returned from API
[2023-06-25 07:02:46] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:02:46] 1.7- get data of each project to select 
[2023-06-25 07:02:46] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:02:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:02:46] 1.10- check project update number [PUN]if not found
[2023-06-25 07:02:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:02:46] 3.9- Finish cron_job Function
[2023-06-25 07:16:01] 1.1- Start cron_job Function
[2023-06-25 07:16:01] 1.2-request Api_url $api_url
[2023-06-25 07:16:02] 1.3-store events of the jop periodically during process 
[2023-06-25 07:16:02] 1.4- fetch data from Api
[2023-06-25 07:16:02] 1.5- View data that returned from API
[2023-06-25 07:16:02] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:16:02] 1.7- get data of each project to select 
[2023-06-25 07:16:02] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:16:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:16:02] 1.10- check project update number [PUN]if not found
[2023-06-25 07:16:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:16:02] 3.9- Finish cron_job Function
[2023-06-25 07:16:11] 1.1- Start cron_job Function
[2023-06-25 07:16:11] 1.2-request Api_url $api_url
[2023-06-25 07:16:12] 1.3-store events of the jop periodically during process 
[2023-06-25 07:16:12] 1.4- fetch data from Api
[2023-06-25 07:16:12] 1.5- View data that returned from API
[2023-06-25 07:16:12] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:16:12] 1.7- get data of each project to select 
[2023-06-25 07:16:12] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:16:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:16:12] 1.10- check project update number [PUN]if not found
[2023-06-25 07:16:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:16:12] 3.9- Finish cron_job Function
[2023-06-25 07:17:12] 1.1- Start cron_job Function
[2023-06-25 07:17:12] 1.2-request Api_url $api_url
[2023-06-25 07:17:12] 1.3-store events of the jop periodically during process 
[2023-06-25 07:17:12] 1.4- fetch data from Api
[2023-06-25 07:17:12] 1.5- View data that returned from API
[2023-06-25 07:17:12] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:17:12] 1.7- get data of each project to select 
[2023-06-25 07:17:12] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:17:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:17:12] 1.10- check project update number [PUN]if not found
[2023-06-25 07:17:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:17:12] 3.9- Finish cron_job Function
[2023-06-25 07:18:12] 1.1- Start cron_job Function
[2023-06-25 07:18:12] 1.2-request Api_url $api_url
[2023-06-25 07:18:13] 1.3-store events of the jop periodically during process 
[2023-06-25 07:18:13] 1.4- fetch data from Api
[2023-06-25 07:18:13] 1.5- View data that returned from API
[2023-06-25 07:18:13] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:18:13] 1.7- get data of each project to select 
[2023-06-25 07:18:13] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:18:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:18:13] 1.10- check project update number [PUN]if not found
[2023-06-25 07:18:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:18:13] 3.9- Finish cron_job Function
[2023-06-25 07:20:13] 1.1- Start cron_job Function
[2023-06-25 07:20:13] 1.2-request Api_url $api_url
[2023-06-25 07:20:14] 1.3-store events of the jop periodically during process 
[2023-06-25 07:20:14] 1.4- fetch data from Api
[2023-06-25 07:20:14] 1.5- View data that returned from API
[2023-06-25 07:20:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:20:14] 1.7- get data of each project to select 
[2023-06-25 07:20:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:20:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:20:14] 1.10- check project update number [PUN]if not found
[2023-06-25 07:20:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:20:14] 3.9- Finish cron_job Function
[2023-06-25 07:22:13] 1.1- Start cron_job Function
[2023-06-25 07:22:13] 1.2-request Api_url $api_url
[2023-06-25 07:22:14] 1.3-store events of the jop periodically during process 
[2023-06-25 07:22:14] 1.4- fetch data from Api
[2023-06-25 07:22:14] 1.5- View data that returned from API
[2023-06-25 07:22:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:22:14] 1.7- get data of each project to select 
[2023-06-25 07:22:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:22:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:22:14] 1.10- check project update number [PUN]if not found
[2023-06-25 07:22:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:22:14] 3.9- Finish cron_job Function
[2023-06-25 07:24:13] 1.1- Start cron_job Function
[2023-06-25 07:24:13] 1.2-request Api_url $api_url
[2023-06-25 07:24:14] 1.3-store events of the jop periodically during process 
[2023-06-25 07:24:14] 1.4- fetch data from Api
[2023-06-25 07:24:14] 1.5- View data that returned from API
[2023-06-25 07:24:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:24:14] 1.7- get data of each project to select 
[2023-06-25 07:24:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:24:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:24:14] 1.10- check project update number [PUN]if not found
[2023-06-25 07:24:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:24:14] 3.9- Finish cron_job Function
[2023-06-25 07:26:13] 1.1- Start cron_job Function
[2023-06-25 07:26:13] 1.2-request Api_url $api_url
[2023-06-25 07:26:14] 1.3-store events of the jop periodically during process 
[2023-06-25 07:26:14] 1.4- fetch data from Api
[2023-06-25 07:26:14] 1.5- View data that returned from API
[2023-06-25 07:26:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:26:14] 1.7- get data of each project to select 
[2023-06-25 07:26:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:26:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:26:14] 1.10- check project update number [PUN]if not found
[2023-06-25 07:26:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:26:14] 3.9- Finish cron_job Function
[2023-06-25 07:29:35] 1.1- Start cron_job Function
[2023-06-25 07:29:35] 1.2-request Api_url $api_url
[2023-06-25 07:29:35] 1.3-store events of the jop periodically during process 
[2023-06-25 07:29:35] 1.4- fetch data from Api
[2023-06-25 07:29:35] 1.5- View data that returned from API
[2023-06-25 07:29:35] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:29:35] 1.7- get data of each project to select 
[2023-06-25 07:29:35] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:29:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:29:35] 1.10- check project update number [PUN]if not found
[2023-06-25 07:29:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:29:35] 3.9- Finish cron_job Function
[2023-06-25 07:30:36] 1.1- Start cron_job Function
[2023-06-25 07:30:36] 1.2-request Api_url $api_url
[2023-06-25 07:30:37] 1.3-store events of the jop periodically during process 
[2023-06-25 07:30:37] 1.4- fetch data from Api
[2023-06-25 07:30:37] 1.5- View data that returned from API
[2023-06-25 07:30:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:30:37] 1.7- get data of each project to select 
[2023-06-25 07:30:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:30:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:30:37] 1.10- check project update number [PUN]if not found
[2023-06-25 07:30:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:30:37] 3.9- Finish cron_job Function
[2023-06-25 07:31:53] 1.1- Start cron_job Function
[2023-06-25 07:31:53] 1.2-request Api_url $api_url
[2023-06-25 07:31:54] 1.3-store events of the jop periodically during process 
[2023-06-25 07:31:54] 1.4- fetch data from Api
[2023-06-25 07:31:54] 1.5- View data that returned from API
[2023-06-25 07:31:54] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:31:54] 1.7- get data of each project to select 
[2023-06-25 07:31:54] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:31:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:31:54] 1.10- check project update number [PUN]if not found
[2023-06-25 07:31:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:31:54] 3.9- Finish cron_job Function
[2023-06-25 07:32:09] 1.1- Start cron_job Function
[2023-06-25 07:32:09] 1.2-request Api_url $api_url
[2023-06-25 07:32:10] 1.3-store events of the jop periodically during process 
[2023-06-25 07:32:10] 1.4- fetch data from Api
[2023-06-25 07:32:10] 1.5- View data that returned from API
[2023-06-25 07:32:10] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:32:10] 1.7- get data of each project to select 
[2023-06-25 07:32:10] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:32:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:32:10] 1.10- check project update number [PUN]if not found
[2023-06-25 07:32:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:32:10] 3.9- Finish cron_job Function
[2023-06-25 07:34:36] 1.1- Start cron_job Function
[2023-06-25 07:34:36] 1.2-request Api_url $api_url
[2023-06-25 07:34:37] 1.3-store events of the jop periodically during process 
[2023-06-25 07:34:37] 1.4- fetch data from Api
[2023-06-25 07:34:37] 1.5- View data that returned from API
[2023-06-25 07:34:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:34:37] 1.7- get data of each project to select 
[2023-06-25 07:34:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:34:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:34:37] 1.10- check project update number [PUN]if not found
[2023-06-25 07:34:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:34:37] 3.9- Finish cron_job Function
[2023-06-25 07:36:37] 1.1- Start cron_job Function
[2023-06-25 07:36:37] 1.2-request Api_url $api_url
[2023-06-25 07:36:38] 1.3-store events of the jop periodically during process 
[2023-06-25 07:36:38] 1.4- fetch data from Api
[2023-06-25 07:36:38] 1.5- View data that returned from API
[2023-06-25 07:36:38] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:36:38] 1.7- get data of each project to select 
[2023-06-25 07:36:38] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:36:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:36:38] 1.10- check project update number [PUN]if not found
[2023-06-25 07:36:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:36:38] 3.9- Finish cron_job Function
[2023-06-25 07:38:24] 1.1- Start cron_job Function
[2023-06-25 07:38:24] 1.2-request Api_url $api_url
[2023-06-25 07:38:24] 1.3-store events of the jop periodically during process 
[2023-06-25 07:38:24] 1.4- fetch data from Api
[2023-06-25 07:38:24] 1.5- View data that returned from API
[2023-06-25 07:38:24] 1.6- get and View projects & tags that returned from  API
[2023-06-25 07:38:24] 1.7- get data of each project to select 
[2023-06-25 07:38:24] 1.8- The selected project Name:my android. id: 7
[2023-06-25 07:38:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 07:38:24] 1.10- check project update number [PUN]if not found
[2023-06-25 07:38:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 07:38:24] 3.9- Finish cron_job Function
[2023-06-25 08:00:02] 1.1- Start cron_job Function
[2023-06-25 08:00:02] 1.2-request Api_url $api_url
[2023-06-25 08:00:02] 1.3-store events of the jop periodically during process 
[2023-06-25 08:00:02] 1.4- fetch data from Api
[2023-06-25 08:00:02] 1.5- View data that returned from API
[2023-06-25 08:00:02] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:00:02] 1.7- get data of each project to select 
[2023-06-25 08:00:02] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:00:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:00:02] 1.10- check project update number [PUN]if not found
[2023-06-25 08:00:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:00:02] 3.9- Finish cron_job Function
[2023-06-25 08:01:55] 1.1- Start cron_job Function
[2023-06-25 08:01:55] 1.2-request Api_url $api_url
[2023-06-25 08:01:55] 1.3-store events of the jop periodically during process 
[2023-06-25 08:01:55] 1.4- fetch data from Api
[2023-06-25 08:01:55] 1.5- View data that returned from API
[2023-06-25 08:01:55] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:01:55] 1.7- get data of each project to select 
[2023-06-25 08:01:55] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:01:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:01:55] 1.10- check project update number [PUN]if not found
[2023-06-25 08:01:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:01:55] 2.2- check if project update number[pun > 0]
[2023-06-25 08:01:55] 2.3- store data into history table
[2023-06-25 08:01:55] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-25 08:01:57] 2.7-changed the new pun 228 
[2023-06-25 08:01:57] 2.8- register updated_app in event table
[2023-06-25 08:01:57] 2.9- set status {'updated'}
[2023-06-25 08:01:57] 3.1- start_process
[2023-06-25 08:01:57] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-25 08:01:57] 3.3- if aun status > 0 
[2023-06-25 08:01:57] 3.5 check  the app have key '.rating.' if not found 
[2023-06-25 08:01:57] 3.7 check if the keys exists, update data
[2023-06-25 08:01:57] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:57] 3.5 check  the app have key '.version.' if not found 
[2023-06-25 08:01:57] 3.7 check if the keys exists, update data
[2023-06-25 08:01:57] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:57] 3.5 check  the app have key '..' if not found 
[2023-06-25 08:01:57] 3.6- Insert  all keys 
[2023-06-25 08:01:57] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-25 08:01:57] 3.7 check if the keys exists, update data
[2023-06-25 08:01:57] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:57] 3.5 check  the app have key '.logo.' if not found 
[2023-06-25 08:01:57] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.link.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.author.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.votes.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.5 check  the app have key '.file.' if not found 
[2023-06-25 08:01:58] 3.7 check if the keys exists, update data
[2023-06-25 08:01:58] 3.8- update all keys & logo & thumbnail 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:58] 3.1- start_process
[2023-06-25 08:01:58] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-25 08:01:58] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:01:59] 3.1- start_process
[2023-06-25 08:01:59] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-25 08:01:59] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:00] 3.1- start_process
[2023-06-25 08:02:00] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-25 08:02:00] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:01] 3.1- start_process
[2023-06-25 08:02:01] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-25 08:02:01] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:02] 3.1- start_process
[2023-06-25 08:02:02] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-25 08:02:02] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:03] 3.1- start_process
[2023-06-25 08:02:03] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-25 08:02:03] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.1- start_process
[2023-06-25 08:02:04] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-25 08:02:04] 3.3- if aun status > 0 
[2023-06-25 08:02:04] 3.9- Finish cron_job Function
[2023-06-25 08:03:17] 1.1- Start cron_job Function
[2023-06-25 08:03:17] 1.2-request Api_url $api_url
[2023-06-25 08:03:18] 1.3-store events of the jop periodically during process 
[2023-06-25 08:03:18] 1.4- fetch data from Api
[2023-06-25 08:03:18] 1.5- View data that returned from API
[2023-06-25 08:03:18] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:03:18] 1.7- get data of each project to select 
[2023-06-25 08:03:18] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:03:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:03:18] 1.10- check project update number [PUN]if not found
[2023-06-25 08:03:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:03:18] 3.9- Finish cron_job Function
[2023-06-25 08:04:32] 1.1- Start cron_job Function
[2023-06-25 08:04:32] 1.2-request Api_url $api_url
[2023-06-25 08:04:33] 1.3-store events of the jop periodically during process 
[2023-06-25 08:04:33] 1.4- fetch data from Api
[2023-06-25 08:04:33] 1.5- View data that returned from API
[2023-06-25 08:04:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:04:33] 1.7- get data of each project to select 
[2023-06-25 08:04:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:04:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:04:33] 1.10- check project update number [PUN]if not found
[2023-06-25 08:04:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:04:33] 3.9- Finish cron_job Function
[2023-06-25 08:05:33] 1.1- Start cron_job Function
[2023-06-25 08:05:33] 1.2-request Api_url $api_url
[2023-06-25 08:05:33] 1.3-store events of the jop periodically during process 
[2023-06-25 08:05:33] 1.4- fetch data from Api
[2023-06-25 08:05:33] 1.5- View data that returned from API
[2023-06-25 08:05:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:05:33] 1.7- get data of each project to select 
[2023-06-25 08:05:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:05:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:05:33] 1.10- check project update number [PUN]if not found
[2023-06-25 08:05:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:05:33] 3.9- Finish cron_job Function
[2023-06-25 08:06:32] 1.1- Start cron_job Function
[2023-06-25 08:06:32] 1.2-request Api_url $api_url
[2023-06-25 08:06:33] 1.3-store events of the jop periodically during process 
[2023-06-25 08:06:33] 1.4- fetch data from Api
[2023-06-25 08:06:33] 1.5- View data that returned from API
[2023-06-25 08:06:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:06:33] 1.7- get data of each project to select 
[2023-06-25 08:06:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:06:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:06:33] 1.10- check project update number [PUN]if not found
[2023-06-25 08:06:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:06:33] 3.9- Finish cron_job Function
[2023-06-25 08:07:15] 1.1- Start cron_job Function
[2023-06-25 08:07:15] 1.2-request Api_url $api_url
[2023-06-25 08:07:15] 1.3-store events of the jop periodically during process 
[2023-06-25 08:07:15] 1.4- fetch data from Api
[2023-06-25 08:07:15] 1.5- View data that returned from API
[2023-06-25 08:07:15] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:07:15] 1.7- get data of each project to select 
[2023-06-25 08:07:15] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:07:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:07:15] 1.10- check project update number [PUN]if not found
[2023-06-25 08:07:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:07:15] 3.9- Finish cron_job Function
[2023-06-25 08:08:13] 1.1- Start cron_job Function
[2023-06-25 08:08:13] 1.2-request Api_url $api_url
[2023-06-25 08:08:14] 1.3-store events of the jop periodically during process 
[2023-06-25 08:08:14] 1.4- fetch data from Api
[2023-06-25 08:08:14] 1.5- View data that returned from API
[2023-06-25 08:08:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:08:14] 1.7- get data of each project to select 
[2023-06-25 08:08:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:08:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:08:14] 1.10- check project update number [PUN]if not found
[2023-06-25 08:08:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:08:14] 3.9- Finish cron_job Function
[2023-06-25 08:09:34] 1.1- Start cron_job Function
[2023-06-25 08:09:34] 1.2-request Api_url $api_url
[2023-06-25 08:09:35] 1.3-store events of the jop periodically during process 
[2023-06-25 08:09:35] 1.4- fetch data from Api
[2023-06-25 08:09:35] 1.5- View data that returned from API
[2023-06-25 08:09:35] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:09:35] 1.7- get data of each project to select 
[2023-06-25 08:09:35] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:09:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:09:35] 1.10- check project update number [PUN]if not found
[2023-06-25 08:09:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:09:35] 3.9- Finish cron_job Function
[2023-06-25 08:11:13] 1.1- Start cron_job Function
[2023-06-25 08:11:13] 1.2-request Api_url $api_url
[2023-06-25 08:11:14] 1.3-store events of the jop periodically during process 
[2023-06-25 08:11:14] 1.4- fetch data from Api
[2023-06-25 08:11:14] 1.5- View data that returned from API
[2023-06-25 08:11:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:11:14] 1.7- get data of each project to select 
[2023-06-25 08:11:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:11:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:11:14] 1.10- check project update number [PUN]if not found
[2023-06-25 08:11:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:11:14] 2.2- check if project update number[pun > 0]
[2023-06-25 08:11:14] 2.3- store data into history table
[2023-06-25 08:11:14] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:16] 3.1- start_process
[2023-06-25 08:11:16] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-25 08:11:16] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:17] 3.1- start_process
[2023-06-25 08:11:17] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-25 08:11:17] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:18] 3.1- start_process
[2023-06-25 08:11:18] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-25 08:11:18] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:19] 3.1- start_process
[2023-06-25 08:11:19] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-25 08:11:19] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:20] 3.1- start_process
[2023-06-25 08:11:20] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-25 08:11:20] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:21] 3.1- start_process
[2023-06-25 08:11:21] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-25 08:11:21] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:22] 3.1- start_process
[2023-06-25 08:11:22] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-25 08:11:22] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.1- start_process
[2023-06-25 08:11:23] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-25 08:11:23] 3.3- if aun status > 0 
[2023-06-25 08:11:23] 3.9- Finish cron_job Function
[2023-06-25 08:13:36] 1.1- Start cron_job Function
[2023-06-25 08:13:36] 1.2-request Api_url $api_url
[2023-06-25 08:13:37] 1.3-store events of the jop periodically during process 
[2023-06-25 08:13:37] 1.4- fetch data from Api
[2023-06-25 08:13:37] 1.5- View data that returned from API
[2023-06-25 08:13:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:13:37] 1.7- get data of each project to select 
[2023-06-25 08:13:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:13:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:13:37] 1.10- check project update number [PUN]if not found
[2023-06-25 08:13:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:13:37] 3.9- Finish cron_job Function
[2023-06-25 08:14:35] 1.1- Start cron_job Function
[2023-06-25 08:14:35] 1.2-request Api_url $api_url
[2023-06-25 08:14:36] 1.3-store events of the jop periodically during process 
[2023-06-25 08:14:36] 1.4- fetch data from Api
[2023-06-25 08:14:36] 1.5- View data that returned from API
[2023-06-25 08:14:36] 1.6- get and View projects & tags that returned from  API
[2023-06-25 08:14:36] 1.7- get data of each project to select 
[2023-06-25 08:14:36] 1.8- The selected project Name:my android. id: 7
[2023-06-25 08:14:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 08:14:36] 1.10- check project update number [PUN]if not found
[2023-06-25 08:14:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 08:14:36] 3.9- Finish cron_job Function
[2023-06-25 10:10:30] 1.1- Start cron_job Function
[2023-06-25 10:10:30] 1.2-request Api_url $api_url
[2023-06-25 10:10:31] 1.3-store events of the jop periodically during process 
[2023-06-25 10:10:31] 1.4- fetch data from Api
[2023-06-25 10:10:31] 1.5- View data that returned from API
[2023-06-25 10:10:31] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:10:31] 1.7- get data of each project to select 
[2023-06-25 10:10:31] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:10:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:10:31] 1.10- check project update number [PUN]if not found
[2023-06-25 10:10:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:10:31] 3.9- Finish cron_job Function
[2023-06-25 10:11:29] 1.1- Start cron_job Function
[2023-06-25 10:11:29] 1.2-request Api_url $api_url
[2023-06-25 10:11:29] 1.3-store events of the jop periodically during process 
[2023-06-25 10:11:29] 1.4- fetch data from Api
[2023-06-25 10:11:29] 1.5- View data that returned from API
[2023-06-25 10:11:29] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:11:29] 1.7- get data of each project to select 
[2023-06-25 10:11:29] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:11:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:11:29] 1.10- check project update number [PUN]if not found
[2023-06-25 10:11:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:11:29] 3.9- Finish cron_job Function
[2023-06-25 10:12:55] 1.1- Start cron_job Function
[2023-06-25 10:12:55] 1.2-request Api_url $api_url
[2023-06-25 10:12:56] 1.3-store events of the jop periodically during process 
[2023-06-25 10:12:56] 1.4- fetch data from Api
[2023-06-25 10:12:56] 1.5- View data that returned from API
[2023-06-25 10:12:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:12:56] 1.7- get data of each project to select 
[2023-06-25 10:12:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:12:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:12:56] 1.10- check project update number [PUN]if not found
[2023-06-25 10:12:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:12:56] 3.9- Finish cron_job Function
[2023-06-25 10:13:44] 1.1- Start cron_job Function
[2023-06-25 10:13:44] 1.2-request Api_url $api_url
[2023-06-25 10:13:45] 1.3-store events of the jop periodically during process 
[2023-06-25 10:13:45] 1.4- fetch data from Api
[2023-06-25 10:13:45] 1.5- View data that returned from API
[2023-06-25 10:13:45] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:13:45] 1.7- get data of each project to select 
[2023-06-25 10:13:45] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:13:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:13:45] 1.10- check project update number [PUN]if not found
[2023-06-25 10:13:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:13:45] 3.9- Finish cron_job Function
[2023-06-25 10:14:54] 1.1- Start cron_job Function
[2023-06-25 10:14:54] 1.2-request Api_url $api_url
[2023-06-25 10:14:55] 1.3-store events of the jop periodically during process 
[2023-06-25 10:14:55] 1.4- fetch data from Api
[2023-06-25 10:14:55] 1.5- View data that returned from API
[2023-06-25 10:14:55] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:14:55] 1.7- get data of each project to select 
[2023-06-25 10:14:55] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:14:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:14:55] 1.10- check project update number [PUN]if not found
[2023-06-25 10:14:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:14:55] 3.9- Finish cron_job Function
[2023-06-25 10:15:45] 1.1- Start cron_job Function
[2023-06-25 10:15:45] 1.2-request Api_url $api_url
[2023-06-25 10:15:46] 1.3-store events of the jop periodically during process 
[2023-06-25 10:15:46] 1.4- fetch data from Api
[2023-06-25 10:15:46] 1.5- View data that returned from API
[2023-06-25 10:15:46] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:15:46] 1.7- get data of each project to select 
[2023-06-25 10:15:46] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:15:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:15:46] 1.10- check project update number [PUN]if not found
[2023-06-25 10:15:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:15:46] 3.9- Finish cron_job Function
[2023-06-25 10:16:55] 1.1- Start cron_job Function
[2023-06-25 10:16:55] 1.2-request Api_url $api_url
[2023-06-25 10:16:56] 1.3-store events of the jop periodically during process 
[2023-06-25 10:16:56] 1.4- fetch data from Api
[2023-06-25 10:16:56] 1.5- View data that returned from API
[2023-06-25 10:16:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:16:56] 1.7- get data of each project to select 
[2023-06-25 10:16:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:16:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:16:56] 1.10- check project update number [PUN]if not found
[2023-06-25 10:16:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:16:56] 3.9- Finish cron_job Function
[2023-06-25 10:17:46] 1.1- Start cron_job Function
[2023-06-25 10:17:46] 1.2-request Api_url $api_url
[2023-06-25 10:17:47] 1.3-store events of the jop periodically during process 
[2023-06-25 10:17:47] 1.4- fetch data from Api
[2023-06-25 10:17:47] 1.5- View data that returned from API
[2023-06-25 10:17:47] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:17:47] 1.7- get data of each project to select 
[2023-06-25 10:17:47] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:17:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:17:47] 1.10- check project update number [PUN]if not found
[2023-06-25 10:17:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:17:47] 3.9- Finish cron_job Function
[2023-06-25 10:19:24] 1.1- Start cron_job Function
[2023-06-25 10:19:24] 1.2-request Api_url $api_url
[2023-06-25 10:19:25] 1.3-store events of the jop periodically during process 
[2023-06-25 10:19:25] 1.4- fetch data from Api
[2023-06-25 10:19:25] 1.5- View data that returned from API
[2023-06-25 10:19:25] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:19:25] 1.7- get data of each project to select 
[2023-06-25 10:19:25] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:19:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:19:25] 1.10- check project update number [PUN]if not found
[2023-06-25 10:19:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:19:25] 3.9- Finish cron_job Function
[2023-06-25 10:19:33] 1.1- Start cron_job Function
[2023-06-25 10:19:33] 1.2-request Api_url $api_url
[2023-06-25 10:19:33] 1.3-store events of the jop periodically during process 
[2023-06-25 10:19:33] 1.4- fetch data from Api
[2023-06-25 10:19:33] 1.5- View data that returned from API
[2023-06-25 10:19:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:19:33] 1.7- get data of each project to select 
[2023-06-25 10:19:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:19:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:19:33] 1.10- check project update number [PUN]if not found
[2023-06-25 10:19:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:19:33] 3.9- Finish cron_job Function
[2023-06-25 10:20:49] 1.1- Start cron_job Function
[2023-06-25 10:20:49] 1.2-request Api_url $api_url
[2023-06-25 10:20:50] 1.3-store events of the jop periodically during process 
[2023-06-25 10:20:50] 1.4- fetch data from Api
[2023-06-25 10:20:50] 1.5- View data that returned from API
[2023-06-25 10:20:50] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:20:50] 1.7- get data of each project to select 
[2023-06-25 10:20:50] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:20:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:20:50] 1.10- check project update number [PUN]if not found
[2023-06-25 10:20:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:20:50] 3.9- Finish cron_job Function
[2023-06-25 10:21:29] 1.1- Start cron_job Function
[2023-06-25 10:21:29] 1.2-request Api_url $api_url
[2023-06-25 10:21:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:21:30] 1.4- fetch data from Api
[2023-06-25 10:21:30] 1.5- View data that returned from API
[2023-06-25 10:21:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:21:30] 1.7- get data of each project to select 
[2023-06-25 10:21:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:21:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:21:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:21:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:21:30] 3.9- Finish cron_job Function
[2023-06-25 10:22:30] 1.1- Start cron_job Function
[2023-06-25 10:22:30] 1.2-request Api_url $api_url
[2023-06-25 10:22:31] 1.3-store events of the jop periodically during process 
[2023-06-25 10:22:31] 1.4- fetch data from Api
[2023-06-25 10:22:31] 1.5- View data that returned from API
[2023-06-25 10:22:31] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:22:31] 1.7- get data of each project to select 
[2023-06-25 10:22:31] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:22:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:22:31] 1.10- check project update number [PUN]if not found
[2023-06-25 10:22:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:22:31] 3.9- Finish cron_job Function
[2023-06-25 10:23:59] 1.1- Start cron_job Function
[2023-06-25 10:23:59] 1.2-request Api_url $api_url
[2023-06-25 10:24:00] 1.3-store events of the jop periodically during process 
[2023-06-25 10:24:00] 1.4- fetch data from Api
[2023-06-25 10:24:00] 1.5- View data that returned from API
[2023-06-25 10:24:00] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:24:00] 1.7- get data of each project to select 
[2023-06-25 10:24:00] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:24:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:24:00] 1.10- check project update number [PUN]if not found
[2023-06-25 10:24:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:24:00] 3.9- Finish cron_job Function
[2023-06-25 10:24:51] 1.1- Start cron_job Function
[2023-06-25 10:24:51] 1.2-request Api_url $api_url
[2023-06-25 10:24:52] 1.3-store events of the jop periodically during process 
[2023-06-25 10:24:52] 1.4- fetch data from Api
[2023-06-25 10:24:52] 1.5- View data that returned from API
[2023-06-25 10:24:52] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:24:52] 1.7- get data of each project to select 
[2023-06-25 10:24:52] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:24:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:24:52] 1.10- check project update number [PUN]if not found
[2023-06-25 10:24:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:24:52] 3.9- Finish cron_job Function
[2023-06-25 10:25:51] 1.1- Start cron_job Function
[2023-06-25 10:25:51] 1.2-request Api_url $api_url
[2023-06-25 10:25:52] 1.3-store events of the jop periodically during process 
[2023-06-25 10:25:52] 1.4- fetch data from Api
[2023-06-25 10:25:52] 1.5- View data that returned from API
[2023-06-25 10:25:52] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:25:52] 1.7- get data of each project to select 
[2023-06-25 10:25:52] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:25:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:25:52] 1.10- check project update number [PUN]if not found
[2023-06-25 10:25:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:25:52] 3.9- Finish cron_job Function
[2023-06-25 10:26:47] 1.1- Start cron_job Function
[2023-06-25 10:26:47] 1.2-request Api_url $api_url
[2023-06-25 10:26:48] 1.3-store events of the jop periodically during process 
[2023-06-25 10:26:48] 1.4- fetch data from Api
[2023-06-25 10:26:48] 1.5- View data that returned from API
[2023-06-25 10:26:48] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:26:48] 1.7- get data of each project to select 
[2023-06-25 10:26:48] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:26:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:26:48] 1.10- check project update number [PUN]if not found
[2023-06-25 10:26:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:26:48] 3.9- Finish cron_job Function
[2023-06-25 10:27:32] 1.1- Start cron_job Function
[2023-06-25 10:27:32] 1.2-request Api_url $api_url
[2023-06-25 10:27:32] 1.3-store events of the jop periodically during process 
[2023-06-25 10:27:32] 1.4- fetch data from Api
[2023-06-25 10:27:32] 1.5- View data that returned from API
[2023-06-25 10:27:32] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:27:32] 1.7- get data of each project to select 
[2023-06-25 10:27:32] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:27:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:27:32] 1.10- check project update number [PUN]if not found
[2023-06-25 10:27:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:27:32] 3.9- Finish cron_job Function
[2023-06-25 10:29:04] 1.1- Start cron_job Function
[2023-06-25 10:29:04] 1.2-request Api_url $api_url
[2023-06-25 10:29:05] 1.3-store events of the jop periodically during process 
[2023-06-25 10:29:05] 1.4- fetch data from Api
[2023-06-25 10:29:05] 1.5- View data that returned from API
[2023-06-25 10:29:05] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:29:05] 1.7- get data of each project to select 
[2023-06-25 10:29:05] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:29:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:29:05] 1.10- check project update number [PUN]if not found
[2023-06-25 10:29:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:29:05] 3.9- Finish cron_job Function
[2023-06-25 10:29:37] 1.1- Start cron_job Function
[2023-06-25 10:29:37] 1.2-request Api_url $api_url
[2023-06-25 10:29:38] 1.3-store events of the jop periodically during process 
[2023-06-25 10:29:38] 1.4- fetch data from Api
[2023-06-25 10:29:38] 1.5- View data that returned from API
[2023-06-25 10:29:38] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:29:38] 1.7- get data of each project to select 
[2023-06-25 10:29:38] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:29:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:29:38] 1.10- check project update number [PUN]if not found
[2023-06-25 10:29:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:29:38] 3.9- Finish cron_job Function
[2023-06-25 10:30:34] 1.1- Start cron_job Function
[2023-06-25 10:30:34] 1.2-request Api_url $api_url
[2023-06-25 10:30:35] 1.3-store events of the jop periodically during process 
[2023-06-25 10:30:35] 1.4- fetch data from Api
[2023-06-25 10:30:35] 1.5- View data that returned from API
[2023-06-25 10:30:35] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:30:35] 1.7- get data of each project to select 
[2023-06-25 10:30:35] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:30:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:30:35] 1.10- check project update number [PUN]if not found
[2023-06-25 10:30:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:30:35] 3.9- Finish cron_job Function
[2023-06-25 10:32:13] 1.1- Start cron_job Function
[2023-06-25 10:32:13] 1.2-request Api_url $api_url
[2023-06-25 10:32:13] 1.3-store events of the jop periodically during process 
[2023-06-25 10:32:13] 1.4- fetch data from Api
[2023-06-25 10:32:13] 1.5- View data that returned from API
[2023-06-25 10:32:13] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:32:13] 1.7- get data of each project to select 
[2023-06-25 10:32:13] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:32:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:32:13] 1.10- check project update number [PUN]if not found
[2023-06-25 10:32:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:32:13] 3.9- Finish cron_job Function
[2023-06-25 10:33:16] 1.1- Start cron_job Function
[2023-06-25 10:33:16] 1.2-request Api_url $api_url
[2023-06-25 10:33:17] 1.3-store events of the jop periodically during process 
[2023-06-25 10:33:17] 1.4- fetch data from Api
[2023-06-25 10:33:17] 1.5- View data that returned from API
[2023-06-25 10:33:17] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:33:17] 1.7- get data of each project to select 
[2023-06-25 10:33:17] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:33:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:33:17] 1.10- check project update number [PUN]if not found
[2023-06-25 10:33:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:33:17] 3.9- Finish cron_job Function
[2023-06-25 10:34:16] 1.1- Start cron_job Function
[2023-06-25 10:34:16] 1.2-request Api_url $api_url
[2023-06-25 10:34:16] 1.3-store events of the jop periodically during process 
[2023-06-25 10:34:16] 1.4- fetch data from Api
[2023-06-25 10:34:16] 1.5- View data that returned from API
[2023-06-25 10:34:16] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:34:16] 1.7- get data of each project to select 
[2023-06-25 10:34:16] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:34:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:34:16] 1.10- check project update number [PUN]if not found
[2023-06-25 10:34:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:34:16] 3.9- Finish cron_job Function
[2023-06-25 10:36:14] 1.1- Start cron_job Function
[2023-06-25 10:36:14] 1.2-request Api_url $api_url
[2023-06-25 10:36:14] 1.3-store events of the jop periodically during process 
[2023-06-25 10:36:14] 1.4- fetch data from Api
[2023-06-25 10:36:14] 1.5- View data that returned from API
[2023-06-25 10:36:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:36:14] 1.7- get data of each project to select 
[2023-06-25 10:36:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:36:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:36:14] 1.10- check project update number [PUN]if not found
[2023-06-25 10:36:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:36:14] 3.9- Finish cron_job Function
[2023-06-25 10:37:35] 1.1- Start cron_job Function
[2023-06-25 10:37:35] 1.2-request Api_url $api_url
[2023-06-25 10:37:35] 1.3-store events of the jop periodically during process 
[2023-06-25 10:37:35] 1.4- fetch data from Api
[2023-06-25 10:37:35] 1.5- View data that returned from API
[2023-06-25 10:37:35] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:37:35] 1.7- get data of each project to select 
[2023-06-25 10:37:35] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:37:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:37:35] 1.10- check project update number [PUN]if not found
[2023-06-25 10:37:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:37:35] 3.9- Finish cron_job Function
[2023-06-25 10:38:32] 1.1- Start cron_job Function
[2023-06-25 10:38:32] 1.2-request Api_url $api_url
[2023-06-25 10:38:33] 1.3-store events of the jop periodically during process 
[2023-06-25 10:38:33] 1.4- fetch data from Api
[2023-06-25 10:38:33] 1.5- View data that returned from API
[2023-06-25 10:38:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:38:33] 1.7- get data of each project to select 
[2023-06-25 10:38:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:38:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:38:33] 1.10- check project update number [PUN]if not found
[2023-06-25 10:38:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:38:33] 3.9- Finish cron_job Function
[2023-06-25 10:38:37] 1.1- Start cron_job Function
[2023-06-25 10:38:37] 1.2-request Api_url $api_url
[2023-06-25 10:38:38] 1.3-store events of the jop periodically during process 
[2023-06-25 10:38:38] 1.4- fetch data from Api
[2023-06-25 10:38:38] 1.5- View data that returned from API
[2023-06-25 10:38:38] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:38:38] 1.7- get data of each project to select 
[2023-06-25 10:38:38] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:38:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:38:38] 1.10- check project update number [PUN]if not found
[2023-06-25 10:38:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:38:38] 3.9- Finish cron_job Function
[2023-06-25 10:39:28] 1.1- Start cron_job Function
[2023-06-25 10:39:28] 1.2-request Api_url $api_url
[2023-06-25 10:39:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:39:30] 1.4- fetch data from Api
[2023-06-25 10:39:30] 1.5- View data that returned from API
[2023-06-25 10:39:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:39:30] 1.7- get data of each project to select 
[2023-06-25 10:39:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:39:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:39:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:39:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:39:30] 3.9- Finish cron_job Function
[2023-06-25 10:40:29] 1.1- Start cron_job Function
[2023-06-25 10:40:29] 1.2-request Api_url $api_url
[2023-06-25 10:40:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:40:30] 1.4- fetch data from Api
[2023-06-25 10:40:30] 1.5- View data that returned from API
[2023-06-25 10:40:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:40:30] 1.7- get data of each project to select 
[2023-06-25 10:40:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:40:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:40:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:40:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:40:30] 3.9- Finish cron_job Function
[2023-06-25 10:41:35] 1.1- Start cron_job Function
[2023-06-25 10:41:35] 1.2-request Api_url $api_url
[2023-06-25 10:41:36] 1.3-store events of the jop periodically during process 
[2023-06-25 10:41:36] 1.4- fetch data from Api
[2023-06-25 10:41:36] 1.5- View data that returned from API
[2023-06-25 10:41:36] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:41:36] 1.7- get data of each project to select 
[2023-06-25 10:41:36] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:41:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:41:36] 1.10- check project update number [PUN]if not found
[2023-06-25 10:41:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:41:36] 3.9- Finish cron_job Function
[2023-06-25 10:43:36] 1.1- Start cron_job Function
[2023-06-25 10:43:36] 1.2-request Api_url $api_url
[2023-06-25 10:43:37] 1.3-store events of the jop periodically during process 
[2023-06-25 10:43:37] 1.4- fetch data from Api
[2023-06-25 10:43:37] 1.5- View data that returned from API
[2023-06-25 10:43:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:43:37] 1.7- get data of each project to select 
[2023-06-25 10:43:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:43:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:43:37] 1.10- check project update number [PUN]if not found
[2023-06-25 10:43:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:43:37] 3.9- Finish cron_job Function
[2023-06-25 10:44:45] 1.1- Start cron_job Function
[2023-06-25 10:44:45] 1.2-request Api_url $api_url
[2023-06-25 10:44:46] 1.3-store events of the jop periodically during process 
[2023-06-25 10:44:46] 1.4- fetch data from Api
[2023-06-25 10:44:46] 1.5- View data that returned from API
[2023-06-25 10:44:46] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:44:46] 1.7- get data of each project to select 
[2023-06-25 10:44:46] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:44:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:44:46] 1.10- check project update number [PUN]if not found
[2023-06-25 10:44:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:44:46] 3.9- Finish cron_job Function
[2023-06-25 10:45:30] 1.1- Start cron_job Function
[2023-06-25 10:45:30] 1.2-request Api_url $api_url
[2023-06-25 10:45:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:45:30] 1.4- fetch data from Api
[2023-06-25 10:45:30] 1.5- View data that returned from API
[2023-06-25 10:45:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:45:30] 1.7- get data of each project to select 
[2023-06-25 10:45:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:45:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:45:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:45:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:45:30] 3.9- Finish cron_job Function
[2023-06-25 10:47:38] 1.1- Start cron_job Function
[2023-06-25 10:47:38] 1.2-request Api_url $api_url
[2023-06-25 10:47:39] 1.3-store events of the jop periodically during process 
[2023-06-25 10:47:39] 1.4- fetch data from Api
[2023-06-25 10:47:39] 1.5- View data that returned from API
[2023-06-25 10:47:39] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:47:39] 1.7- get data of each project to select 
[2023-06-25 10:47:39] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:47:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:47:39] 1.10- check project update number [PUN]if not found
[2023-06-25 10:47:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:47:39] 3.9- Finish cron_job Function
[2023-06-25 10:49:56] 1.1- Start cron_job Function
[2023-06-25 10:49:56] 1.2-request Api_url $api_url
[2023-06-25 10:49:57] 1.3-store events of the jop periodically during process 
[2023-06-25 10:49:57] 1.4- fetch data from Api
[2023-06-25 10:49:57] 1.5- View data that returned from API
[2023-06-25 10:49:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:49:57] 1.7- get data of each project to select 
[2023-06-25 10:49:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:49:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:49:57] 1.10- check project update number [PUN]if not found
[2023-06-25 10:49:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:49:57] 3.9- Finish cron_job Function
[2023-06-25 10:51:55] 1.1- Start cron_job Function
[2023-06-25 10:51:55] 1.2-request Api_url $api_url
[2023-06-25 10:51:56] 1.3-store events of the jop periodically during process 
[2023-06-25 10:51:56] 1.4- fetch data from Api
[2023-06-25 10:51:56] 1.5- View data that returned from API
[2023-06-25 10:51:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:51:56] 1.7- get data of each project to select 
[2023-06-25 10:51:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:51:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:51:56] 1.10- check project update number [PUN]if not found
[2023-06-25 10:51:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:51:56] 2.2- check if project update number[pun > 0]
[2023-06-25 10:51:56] 2.3- store data into history table
[2023-06-25 10:51:56] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:58] 3.1- start_process
[2023-06-25 10:51:58] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-25 10:51:58] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:51:59] 3.1- start_process
[2023-06-25 10:51:59] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-25 10:51:59] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:00] 3.1- start_process
[2023-06-25 10:52:00] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-25 10:52:00] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:01] 3.1- start_process
[2023-06-25 10:52:01] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-25 10:52:01] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:02] 3.1- start_process
[2023-06-25 10:52:02] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-25 10:52:02] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:03] 3.1- start_process
[2023-06-25 10:52:03] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-25 10:52:03] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:04] 3.1- start_process
[2023-06-25 10:52:04] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-25 10:52:04] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:05] 3.1- start_process
[2023-06-25 10:52:05] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-25 10:52:05] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.1- start_process
[2023-06-25 10:52:06] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-25 10:52:06] 3.3- if aun status > 0 
[2023-06-25 10:52:06] 3.9- Finish cron_job Function
[2023-06-25 10:53:56] 1.1- Start cron_job Function
[2023-06-25 10:53:56] 1.2-request Api_url $api_url
[2023-06-25 10:53:56] 1.3-store events of the jop periodically during process 
[2023-06-25 10:53:56] 1.4- fetch data from Api
[2023-06-25 10:53:56] 1.5- View data that returned from API
[2023-06-25 10:53:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:53:56] 1.7- get data of each project to select 
[2023-06-25 10:53:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:53:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:53:56] 1.10- check project update number [PUN]if not found
[2023-06-25 10:53:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:53:56] 3.9- Finish cron_job Function
[2023-06-25 10:54:39] 1.1- Start cron_job Function
[2023-06-25 10:54:39] 1.2-request Api_url $api_url
[2023-06-25 10:54:40] 1.3-store events of the jop periodically during process 
[2023-06-25 10:54:40] 1.4- fetch data from Api
[2023-06-25 10:54:40] 1.5- View data that returned from API
[2023-06-25 10:54:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:54:40] 1.7- get data of each project to select 
[2023-06-25 10:54:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:54:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:54:40] 1.10- check project update number [PUN]if not found
[2023-06-25 10:54:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:54:40] 3.9- Finish cron_job Function
[2023-06-25 10:55:39] 1.1- Start cron_job Function
[2023-06-25 10:55:39] 1.2-request Api_url $api_url
[2023-06-25 10:55:40] 1.3-store events of the jop periodically during process 
[2023-06-25 10:55:40] 1.4- fetch data from Api
[2023-06-25 10:55:40] 1.5- View data that returned from API
[2023-06-25 10:55:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:55:40] 1.7- get data of each project to select 
[2023-06-25 10:55:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:55:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:55:40] 1.10- check project update number [PUN]if not found
[2023-06-25 10:55:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:55:40] 3.9- Finish cron_job Function
[2023-06-25 10:56:39] 1.1- Start cron_job Function
[2023-06-25 10:56:39] 1.2-request Api_url $api_url
[2023-06-25 10:56:40] 1.3-store events of the jop periodically during process 
[2023-06-25 10:56:40] 1.4- fetch data from Api
[2023-06-25 10:56:40] 1.5- View data that returned from API
[2023-06-25 10:56:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:56:40] 1.7- get data of each project to select 
[2023-06-25 10:56:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:56:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:56:40] 1.10- check project update number [PUN]if not found
[2023-06-25 10:56:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:56:40] 3.9- Finish cron_job Function
[2023-06-25 10:57:33] 1.1- Start cron_job Function
[2023-06-25 10:57:33] 1.2-request Api_url $api_url
[2023-06-25 10:57:34] 1.3-store events of the jop periodically during process 
[2023-06-25 10:57:34] 1.4- fetch data from Api
[2023-06-25 10:57:34] 1.5- View data that returned from API
[2023-06-25 10:57:34] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:57:34] 1.7- get data of each project to select 
[2023-06-25 10:57:34] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:57:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:57:34] 1.10- check project update number [PUN]if not found
[2023-06-25 10:57:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:57:34] 3.9- Finish cron_job Function
[2023-06-25 10:58:29] 1.1- Start cron_job Function
[2023-06-25 10:58:29] 1.2-request Api_url $api_url
[2023-06-25 10:58:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:58:30] 1.4- fetch data from Api
[2023-06-25 10:58:30] 1.5- View data that returned from API
[2023-06-25 10:58:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:58:30] 1.7- get data of each project to select 
[2023-06-25 10:58:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:58:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:58:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:58:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:58:30] 3.9- Finish cron_job Function
[2023-06-25 10:59:29] 1.1- Start cron_job Function
[2023-06-25 10:59:29] 1.2-request Api_url $api_url
[2023-06-25 10:59:30] 1.3-store events of the jop periodically during process 
[2023-06-25 10:59:30] 1.4- fetch data from Api
[2023-06-25 10:59:30] 1.5- View data that returned from API
[2023-06-25 10:59:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 10:59:30] 1.7- get data of each project to select 
[2023-06-25 10:59:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 10:59:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 10:59:30] 1.10- check project update number [PUN]if not found
[2023-06-25 10:59:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 10:59:30] 3.9- Finish cron_job Function
[2023-06-25 11:00:31] 1.1- Start cron_job Function
[2023-06-25 11:00:31] 1.2-request Api_url $api_url
[2023-06-25 11:00:32] 1.3-store events of the jop periodically during process 
[2023-06-25 11:00:32] 1.4- fetch data from Api
[2023-06-25 11:00:32] 1.5- View data that returned from API
[2023-06-25 11:00:32] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:00:32] 1.7- get data of each project to select 
[2023-06-25 11:00:32] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:00:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:00:32] 1.10- check project update number [PUN]if not found
[2023-06-25 11:00:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:00:32] 2.2- check if project update number[pun > 0]
[2023-06-25 11:00:32] 2.3- store data into history table
[2023-06-25 11:00:32] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-25 11:00:34] 2.7-changed the new pun 229 
[2023-06-25 11:00:34] 2.8- register updated_app in event table
[2023-06-25 11:00:34] 2.9- set status {'updated'}
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.5 check  the app have key '.rating.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.version.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '..' if not found 
[2023-06-25 11:00:34] 3.6- Insert  all keys 
[2023-06-25 11:00:34] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.logo.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.link.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.author.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.votes.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.5 check  the app have key '.file.' if not found 
[2023-06-25 11:00:34] 3.7 check if the keys exists, update data
[2023-06-25 11:00:34] 3.8- update all keys & logo & thumbnail 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:34] 3.1- start_process
[2023-06-25 11:00:34] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-25 11:00:34] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:35] 3.1- start_process
[2023-06-25 11:00:35] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-25 11:00:35] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:36] 3.1- start_process
[2023-06-25 11:00:36] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-25 11:00:36] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:37] 3.1- start_process
[2023-06-25 11:00:37] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-25 11:00:37] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:38] 3.1- start_process
[2023-06-25 11:00:38] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-25 11:00:38] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:40] 3.1- start_process
[2023-06-25 11:00:40] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-25 11:00:40] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:41] 3.1- start_process
[2023-06-25 11:00:41] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-25 11:00:41] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.1- start_process
[2023-06-25 11:00:42] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-25 11:00:42] 3.3- if aun status > 0 
[2023-06-25 11:00:42] 3.9- Finish cron_job Function
[2023-06-25 11:02:31] 1.1- Start cron_job Function
[2023-06-25 11:02:31] 1.2-request Api_url $api_url
[2023-06-25 11:02:32] 1.3-store events of the jop periodically during process 
[2023-06-25 11:02:32] 1.4- fetch data from Api
[2023-06-25 11:02:32] 1.5- View data that returned from API
[2023-06-25 11:02:32] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:02:32] 1.7- get data of each project to select 
[2023-06-25 11:02:32] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:02:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:02:32] 1.10- check project update number [PUN]if not found
[2023-06-25 11:02:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:02:32] 3.9- Finish cron_job Function
[2023-06-25 11:04:32] 1.1- Start cron_job Function
[2023-06-25 11:04:32] 1.2-request Api_url $api_url
[2023-06-25 11:04:33] 1.3-store events of the jop periodically during process 
[2023-06-25 11:04:33] 1.4- fetch data from Api
[2023-06-25 11:04:33] 1.5- View data that returned from API
[2023-06-25 11:04:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:04:33] 1.7- get data of each project to select 
[2023-06-25 11:04:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:04:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:04:33] 1.10- check project update number [PUN]if not found
[2023-06-25 11:04:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:04:33] 3.9- Finish cron_job Function
[2023-06-25 11:06:33] 1.1- Start cron_job Function
[2023-06-25 11:06:33] 1.2-request Api_url $api_url
[2023-06-25 11:06:34] 1.3-store events of the jop periodically during process 
[2023-06-25 11:06:34] 1.4- fetch data from Api
[2023-06-25 11:06:34] 1.5- View data that returned from API
[2023-06-25 11:06:34] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:06:34] 1.7- get data of each project to select 
[2023-06-25 11:06:34] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:06:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:06:34] 1.10- check project update number [PUN]if not found
[2023-06-25 11:06:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:06:34] 3.9- Finish cron_job Function
[2023-06-25 11:08:33] 1.1- Start cron_job Function
[2023-06-25 11:08:33] 1.2-request Api_url $api_url
[2023-06-25 11:08:34] 1.3-store events of the jop periodically during process 
[2023-06-25 11:08:34] 1.4- fetch data from Api
[2023-06-25 11:08:34] 1.5- View data that returned from API
[2023-06-25 11:08:34] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:08:34] 1.7- get data of each project to select 
[2023-06-25 11:08:34] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:08:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:08:34] 1.10- check project update number [PUN]if not found
[2023-06-25 11:08:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:08:34] 3.9- Finish cron_job Function
[2023-06-25 11:25:24] 1.1- Start cron_job Function
[2023-06-25 11:25:24] 1.2-request Api_url $api_url
[2023-06-25 11:25:24] 1.3-store events of the jop periodically during process 
[2023-06-25 11:25:24] 1.4- fetch data from Api
[2023-06-25 11:25:24] 1.5- View data that returned from API
[2023-06-25 11:25:24] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:25:24] 1.7- get data of each project to select 
[2023-06-25 11:25:24] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:25:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:25:24] 1.10- check project update number [PUN]if not found
[2023-06-25 11:25:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:25:24] 3.9- Finish cron_job Function
[2023-06-25 11:25:29] 1.1- Start cron_job Function
[2023-06-25 11:25:29] 1.2-request Api_url $api_url
[2023-06-25 11:25:30] 1.3-store events of the jop periodically during process 
[2023-06-25 11:25:30] 1.4- fetch data from Api
[2023-06-25 11:25:30] 1.5- View data that returned from API
[2023-06-25 11:25:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:25:30] 1.7- get data of each project to select 
[2023-06-25 11:25:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:25:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:25:30] 1.10- check project update number [PUN]if not found
[2023-06-25 11:25:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:25:30] 3.9- Finish cron_job Function
[2023-06-25 11:26:29] 1.1- Start cron_job Function
[2023-06-25 11:26:29] 1.2-request Api_url $api_url
[2023-06-25 11:26:30] 1.3-store events of the jop periodically during process 
[2023-06-25 11:26:30] 1.4- fetch data from Api
[2023-06-25 11:26:30] 1.5- View data that returned from API
[2023-06-25 11:26:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:26:30] 1.7- get data of each project to select 
[2023-06-25 11:26:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:26:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:26:30] 1.10- check project update number [PUN]if not found
[2023-06-25 11:26:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:26:30] 3.9- Finish cron_job Function
[2023-06-25 11:28:18] 1.1- Start cron_job Function
[2023-06-25 11:28:18] 1.2-request Api_url $api_url
[2023-06-25 11:28:19] 1.3-store events of the jop periodically during process 
[2023-06-25 11:28:19] 1.4- fetch data from Api
[2023-06-25 11:28:19] 1.5- View data that returned from API
[2023-06-25 11:28:19] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:28:19] 1.7- get data of each project to select 
[2023-06-25 11:28:19] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:28:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:28:19] 1.10- check project update number [PUN]if not found
[2023-06-25 11:28:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:28:19] 3.9- Finish cron_job Function
[2023-06-25 11:29:18] 1.1- Start cron_job Function
[2023-06-25 11:29:18] 1.2-request Api_url $api_url
[2023-06-25 11:29:19] 1.3-store events of the jop periodically during process 
[2023-06-25 11:29:19] 1.4- fetch data from Api
[2023-06-25 11:29:19] 1.5- View data that returned from API
[2023-06-25 11:29:19] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:29:19] 1.7- get data of each project to select 
[2023-06-25 11:29:19] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:29:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:29:19] 1.10- check project update number [PUN]if not found
[2023-06-25 11:29:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:29:19] 3.9- Finish cron_job Function
[2023-06-25 11:30:18] 1.1- Start cron_job Function
[2023-06-25 11:30:18] 1.2-request Api_url $api_url
[2023-06-25 11:30:19] 1.3-store events of the jop periodically during process 
[2023-06-25 11:30:19] 1.4- fetch data from Api
[2023-06-25 11:30:19] 1.5- View data that returned from API
[2023-06-25 11:30:19] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:30:19] 1.7- get data of each project to select 
[2023-06-25 11:30:19] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:30:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:30:19] 1.10- check project update number [PUN]if not found
[2023-06-25 11:30:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:30:19] 3.9- Finish cron_job Function
[2023-06-25 11:31:18] 1.1- Start cron_job Function
[2023-06-25 11:31:18] 1.2-request Api_url $api_url
[2023-06-25 11:31:19] 1.3-store events of the jop periodically during process 
[2023-06-25 11:31:19] 1.4- fetch data from Api
[2023-06-25 11:31:19] 1.5- View data that returned from API
[2023-06-25 11:31:19] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:31:19] 1.7- get data of each project to select 
[2023-06-25 11:31:19] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:31:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:31:19] 1.10- check project update number [PUN]if not found
[2023-06-25 11:31:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:31:19] 3.9- Finish cron_job Function
[2023-06-25 11:31:31] 1.1- Start cron_job Function
[2023-06-25 11:31:31] 1.2-request Api_url $api_url
[2023-06-25 11:31:32] 1.3-store events of the jop periodically during process 
[2023-06-25 11:31:32] 1.4- fetch data from Api
[2023-06-25 11:31:32] 1.5- View data that returned from API
[2023-06-25 11:31:32] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:31:32] 1.7- get data of each project to select 
[2023-06-25 11:31:32] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:31:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:31:32] 1.10- check project update number [PUN]if not found
[2023-06-25 11:31:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:31:32] 3.9- Finish cron_job Function
[2023-06-25 11:32:32] 1.1- Start cron_job Function
[2023-06-25 11:32:32] 1.2-request Api_url $api_url
[2023-06-25 11:32:33] 1.3-store events of the jop periodically during process 
[2023-06-25 11:32:33] 1.4- fetch data from Api
[2023-06-25 11:32:33] 1.5- View data that returned from API
[2023-06-25 11:32:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:32:33] 1.7- get data of each project to select 
[2023-06-25 11:32:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:32:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:32:33] 1.10- check project update number [PUN]if not found
[2023-06-25 11:32:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:32:33] 3.9- Finish cron_job Function
[2023-06-25 11:33:28] 1.1- Start cron_job Function
[2023-06-25 11:33:28] 1.2-request Api_url $api_url
[2023-06-25 11:33:29] 1.3-store events of the jop periodically during process 
[2023-06-25 11:33:29] 1.4- fetch data from Api
[2023-06-25 11:33:29] 1.5- View data that returned from API
[2023-06-25 11:33:29] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:33:29] 1.7- get data of each project to select 
[2023-06-25 11:33:29] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:33:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:33:29] 1.10- check project update number [PUN]if not found
[2023-06-25 11:33:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:33:29] 3.9- Finish cron_job Function
[2023-06-25 11:34:36] 1.1- Start cron_job Function
[2023-06-25 11:34:36] 1.2-request Api_url $api_url
[2023-06-25 11:34:37] 1.3-store events of the jop periodically during process 
[2023-06-25 11:34:37] 1.4- fetch data from Api
[2023-06-25 11:34:37] 1.5- View data that returned from API
[2023-06-25 11:34:37] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:34:37] 1.7- get data of each project to select 
[2023-06-25 11:34:37] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:34:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:34:37] 1.10- check project update number [PUN]if not found
[2023-06-25 11:34:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:34:37] 3.9- Finish cron_job Function
[2023-06-25 11:35:30] 1.1- Start cron_job Function
[2023-06-25 11:35:30] 1.2-request Api_url $api_url
[2023-06-25 11:35:30] 1.3-store events of the jop periodically during process 
[2023-06-25 11:35:30] 1.4- fetch data from Api
[2023-06-25 11:35:30] 1.5- View data that returned from API
[2023-06-25 11:35:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:35:30] 1.7- get data of each project to select 
[2023-06-25 11:35:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:35:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:35:30] 1.10- check project update number [PUN]if not found
[2023-06-25 11:35:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:35:30] 3.9- Finish cron_job Function
[2023-06-25 11:36:30] 1.1- Start cron_job Function
[2023-06-25 11:36:30] 1.2-request Api_url $api_url
[2023-06-25 11:36:31] 1.3-store events of the jop periodically during process 
[2023-06-25 11:36:31] 1.4- fetch data from Api
[2023-06-25 11:36:31] 1.5- View data that returned from API
[2023-06-25 11:36:31] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:36:31] 1.7- get data of each project to select 
[2023-06-25 11:36:31] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:36:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:36:31] 1.10- check project update number [PUN]if not found
[2023-06-25 11:36:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:36:31] 3.9- Finish cron_job Function
[2023-06-25 11:37:32] 1.1- Start cron_job Function
[2023-06-25 11:37:32] 1.2-request Api_url $api_url
[2023-06-25 11:37:33] 1.3-store events of the jop periodically during process 
[2023-06-25 11:37:33] 1.4- fetch data from Api
[2023-06-25 11:37:33] 1.5- View data that returned from API
[2023-06-25 11:37:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:37:33] 1.7- get data of each project to select 
[2023-06-25 11:37:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:37:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:37:33] 1.10- check project update number [PUN]if not found
[2023-06-25 11:37:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:37:33] 3.9- Finish cron_job Function
[2023-06-25 11:38:32] 1.1- Start cron_job Function
[2023-06-25 11:38:32] 1.2-request Api_url $api_url
[2023-06-25 11:38:33] 1.3-store events of the jop periodically during process 
[2023-06-25 11:38:33] 1.4- fetch data from Api
[2023-06-25 11:38:33] 1.5- View data that returned from API
[2023-06-25 11:38:33] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:38:33] 1.7- get data of each project to select 
[2023-06-25 11:38:33] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:38:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:38:33] 1.10- check project update number [PUN]if not found
[2023-06-25 11:38:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:38:33] 3.9- Finish cron_job Function
[2023-06-25 11:40:33] 1.1- Start cron_job Function
[2023-06-25 11:40:33] 1.2-request Api_url $api_url
[2023-06-25 11:40:34] 1.3-store events of the jop periodically during process 
[2023-06-25 11:40:34] 1.4- fetch data from Api
[2023-06-25 11:40:34] 1.5- View data that returned from API
[2023-06-25 11:40:34] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:40:34] 1.7- get data of each project to select 
[2023-06-25 11:40:34] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:40:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:40:34] 1.10- check project update number [PUN]if not found
[2023-06-25 11:40:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:40:34] 3.9- Finish cron_job Function
[2023-06-25 11:42:25] 1.1- Start cron_job Function
[2023-06-25 11:42:25] 1.2-request Api_url $api_url
[2023-06-25 11:42:26] 1.3-store events of the jop periodically during process 
[2023-06-25 11:42:26] 1.4- fetch data from Api
[2023-06-25 11:42:26] 1.5- View data that returned from API
[2023-06-25 11:42:26] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:42:26] 1.7- get data of each project to select 
[2023-06-25 11:42:26] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:42:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:42:26] 1.10- check project update number [PUN]if not found
[2023-06-25 11:42:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:42:26] 3.9- Finish cron_job Function
[2023-06-25 11:42:37] 1.1- Start cron_job Function
[2023-06-25 11:42:37] 1.2-request Api_url $api_url
[2023-06-25 11:42:38] 1.3-store events of the jop periodically during process 
[2023-06-25 11:42:38] 1.4- fetch data from Api
[2023-06-25 11:42:38] 1.5- View data that returned from API
[2023-06-25 11:42:38] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:42:38] 1.7- get data of each project to select 
[2023-06-25 11:42:38] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:42:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:42:38] 1.10- check project update number [PUN]if not found
[2023-06-25 11:42:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:42:38] 3.9- Finish cron_job Function
[2023-06-25 11:43:55] 1.1- Start cron_job Function
[2023-06-25 11:43:55] 1.2-request Api_url $api_url
[2023-06-25 11:43:56] 1.3-store events of the jop periodically during process 
[2023-06-25 11:43:56] 1.4- fetch data from Api
[2023-06-25 11:43:56] 1.5- View data that returned from API
[2023-06-25 11:43:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:43:56] 1.7- get data of each project to select 
[2023-06-25 11:43:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:43:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:43:56] 1.10- check project update number [PUN]if not found
[2023-06-25 11:43:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:43:56] 3.9- Finish cron_job Function
[2023-06-25 11:45:55] 1.1- Start cron_job Function
[2023-06-25 11:45:55] 1.2-request Api_url $api_url
[2023-06-25 11:45:56] 1.3-store events of the jop periodically during process 
[2023-06-25 11:45:56] 1.4- fetch data from Api
[2023-06-25 11:45:56] 1.5- View data that returned from API
[2023-06-25 11:45:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:45:56] 1.7- get data of each project to select 
[2023-06-25 11:45:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:45:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:45:56] 1.10- check project update number [PUN]if not found
[2023-06-25 11:45:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:45:56] 3.9- Finish cron_job Function
[2023-06-25 11:47:55] 1.1- Start cron_job Function
[2023-06-25 11:47:55] 1.2-request Api_url $api_url
[2023-06-25 11:47:56] 1.3-store events of the jop periodically during process 
[2023-06-25 11:47:56] 1.4- fetch data from Api
[2023-06-25 11:47:56] 1.5- View data that returned from API
[2023-06-25 11:47:56] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:47:56] 1.7- get data of each project to select 
[2023-06-25 11:47:56] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:47:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:47:56] 1.10- check project update number [PUN]if not found
[2023-06-25 11:47:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:47:56] 3.9- Finish cron_job Function
[2023-06-25 11:49:53] 1.1- Start cron_job Function
[2023-06-25 11:49:53] 1.2-request Api_url $api_url
[2023-06-25 11:49:54] 1.3-store events of the jop periodically during process 
[2023-06-25 11:49:54] 1.4- fetch data from Api
[2023-06-25 11:49:54] 1.5- View data that returned from API
[2023-06-25 11:49:54] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:49:54] 1.7- get data of each project to select 
[2023-06-25 11:49:54] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:49:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:49:54] 1.10- check project update number [PUN]if not found
[2023-06-25 11:49:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:49:54] 3.9- Finish cron_job Function
[2023-06-25 11:50:29] 1.1- Start cron_job Function
[2023-06-25 11:50:29] 1.2-request Api_url $api_url
[2023-06-25 11:50:29] 1.3-store events of the jop periodically during process 
[2023-06-25 11:50:29] 1.4- fetch data from Api
[2023-06-25 11:50:29] 1.5- View data that returned from API
[2023-06-25 11:50:29] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:50:29] 1.7- get data of each project to select 
[2023-06-25 11:50:29] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:50:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:50:29] 1.10- check project update number [PUN]if not found
[2023-06-25 11:50:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:50:29] 3.9- Finish cron_job Function
[2023-06-25 11:51:56] 1.1- Start cron_job Function
[2023-06-25 11:51:56] 1.2-request Api_url $api_url
[2023-06-25 11:51:57] 1.3-store events of the jop periodically during process 
[2023-06-25 11:51:57] 1.4- fetch data from Api
[2023-06-25 11:51:57] 1.5- View data that returned from API
[2023-06-25 11:51:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:51:57] 1.7- get data of each project to select 
[2023-06-25 11:51:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:51:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:51:57] 1.10- check project update number [PUN]if not found
[2023-06-25 11:51:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:51:57] 3.9- Finish cron_job Function
[2023-06-25 11:52:28] 1.1- Start cron_job Function
[2023-06-25 11:52:28] 1.2-request Api_url $api_url
[2023-06-25 11:52:29] 1.3-store events of the jop periodically during process 
[2023-06-25 11:52:29] 1.4- fetch data from Api
[2023-06-25 11:52:29] 1.5- View data that returned from API
[2023-06-25 11:52:29] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:52:29] 1.7- get data of each project to select 
[2023-06-25 11:52:29] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:52:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:52:29] 1.10- check project update number [PUN]if not found
[2023-06-25 11:52:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:52:29] 3.9- Finish cron_job Function
[2023-06-25 11:53:56] 1.1- Start cron_job Function
[2023-06-25 11:53:56] 1.2-request Api_url $api_url
[2023-06-25 11:53:57] 1.3-store events of the jop periodically during process 
[2023-06-25 11:53:57] 1.4- fetch data from Api
[2023-06-25 11:53:57] 1.5- View data that returned from API
[2023-06-25 11:53:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:53:57] 1.7- get data of each project to select 
[2023-06-25 11:53:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:53:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:53:57] 1.10- check project update number [PUN]if not found
[2023-06-25 11:53:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:53:57] 3.9- Finish cron_job Function
[2023-06-25 11:55:56] 1.1- Start cron_job Function
[2023-06-25 11:55:56] 1.2-request Api_url $api_url
[2023-06-25 11:55:57] 1.3-store events of the jop periodically during process 
[2023-06-25 11:55:57] 1.4- fetch data from Api
[2023-06-25 11:55:57] 1.5- View data that returned from API
[2023-06-25 11:55:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:55:57] 1.7- get data of each project to select 
[2023-06-25 11:55:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:55:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:55:57] 1.10- check project update number [PUN]if not found
[2023-06-25 11:55:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:55:57] 3.9- Finish cron_job Function
[2023-06-25 11:57:56] 1.1- Start cron_job Function
[2023-06-25 11:57:56] 1.2-request Api_url $api_url
[2023-06-25 11:57:57] 1.3-store events of the jop periodically during process 
[2023-06-25 11:57:57] 1.4- fetch data from Api
[2023-06-25 11:57:57] 1.5- View data that returned from API
[2023-06-25 11:57:57] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:57:57] 1.7- get data of each project to select 
[2023-06-25 11:57:57] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:57:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:57:57] 1.10- check project update number [PUN]if not found
[2023-06-25 11:57:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:57:57] 3.9- Finish cron_job Function
[2023-06-25 11:59:58] 1.1- Start cron_job Function
[2023-06-25 11:59:58] 1.2-request Api_url $api_url
[2023-06-25 11:59:59] 1.3-store events of the jop periodically during process 
[2023-06-25 11:59:59] 1.4- fetch data from Api
[2023-06-25 11:59:59] 1.5- View data that returned from API
[2023-06-25 11:59:59] 1.6- get and View projects & tags that returned from  API
[2023-06-25 11:59:59] 1.7- get data of each project to select 
[2023-06-25 11:59:59] 1.8- The selected project Name:my android. id: 7
[2023-06-25 11:59:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 11:59:59] 1.10- check project update number [PUN]if not found
[2023-06-25 11:59:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 11:59:59] 3.9- Finish cron_job Function
[2023-06-25 12:01:14] 1.1- Start cron_job Function
[2023-06-25 12:01:14] 1.2-request Api_url $api_url
[2023-06-25 12:01:14] 1.3-store events of the jop periodically during process 
[2023-06-25 12:01:14] 1.4- fetch data from Api
[2023-06-25 12:01:14] 1.5- View data that returned from API
[2023-06-25 12:01:14] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:01:14] 1.7- get data of each project to select 
[2023-06-25 12:01:14] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:01:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:01:14] 1.10- check project update number [PUN]if not found
[2023-06-25 12:01:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:01:14] 3.9- Finish cron_job Function
[2023-06-25 12:01:34] 1.1- Start cron_job Function
[2023-06-25 12:01:34] 1.2-request Api_url $api_url
[2023-06-25 12:01:34] 1.3-store events of the jop periodically during process 
[2023-06-25 12:01:34] 1.4- fetch data from Api
[2023-06-25 12:01:34] 1.5- View data that returned from API
[2023-06-25 12:01:34] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:01:34] 1.7- get data of each project to select 
[2023-06-25 12:01:34] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:01:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:01:34] 1.10- check project update number [PUN]if not found
[2023-06-25 12:01:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:01:34] 3.9- Finish cron_job Function
[2023-06-25 12:02:29] 1.1- Start cron_job Function
[2023-06-25 12:02:29] 1.2-request Api_url $api_url
[2023-06-25 12:02:30] 1.3-store events of the jop periodically during process 
[2023-06-25 12:02:30] 1.4- fetch data from Api
[2023-06-25 12:02:30] 1.5- View data that returned from API
[2023-06-25 12:02:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:02:30] 1.7- get data of each project to select 
[2023-06-25 12:02:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:02:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:02:30] 1.10- check project update number [PUN]if not found
[2023-06-25 12:02:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:02:30] 3.9- Finish cron_job Function
[2023-06-25 12:04:41] 1.1- Start cron_job Function
[2023-06-25 12:04:41] 1.2-request Api_url $api_url
[2023-06-25 12:04:43] 1.3-store events of the jop periodically during process 
[2023-06-25 12:04:43] 1.4- fetch data from Api
[2023-06-25 12:04:43] 1.5- View data that returned from API
[2023-06-25 12:04:43] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:04:43] 1.7- get data of each project to select 
[2023-06-25 12:04:43] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:04:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:04:43] 1.10- check project update number [PUN]if not found
[2023-06-25 12:04:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:04:43] 3.9- Finish cron_job Function
[2023-06-25 12:05:43] 1.1- Start cron_job Function
[2023-06-25 12:05:43] 1.2-request Api_url $api_url
[2023-06-25 12:05:43] 1.3-store events of the jop periodically during process 
[2023-06-25 12:05:43] 1.4- fetch data from Api
[2023-06-25 12:05:43] 1.5- View data that returned from API
[2023-06-25 12:05:43] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:05:43] 1.7- get data of each project to select 
[2023-06-25 12:05:43] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:05:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:05:43] 1.10- check project update number [PUN]if not found
[2023-06-25 12:05:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:05:43] 3.9- Finish cron_job Function
[2023-06-25 12:07:17] 1.1- Start cron_job Function
[2023-06-25 12:07:17] 1.2-request Api_url $api_url
[2023-06-25 12:07:18] 1.3-store events of the jop periodically during process 
[2023-06-25 12:07:18] 1.4- fetch data from Api
[2023-06-25 12:07:18] 1.5- View data that returned from API
[2023-06-25 12:07:18] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:07:18] 1.7- get data of each project to select 
[2023-06-25 12:07:18] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:07:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:07:18] 1.10- check project update number [PUN]if not found
[2023-06-25 12:07:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:07:18] 3.9- Finish cron_job Function
[2023-06-25 12:07:42] 1.1- Start cron_job Function
[2023-06-25 12:07:42] 1.2-request Api_url $api_url
[2023-06-25 12:07:43] 1.3-store events of the jop periodically during process 
[2023-06-25 12:07:43] 1.4- fetch data from Api
[2023-06-25 12:07:43] 1.5- View data that returned from API
[2023-06-25 12:07:43] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:07:43] 1.7- get data of each project to select 
[2023-06-25 12:07:43] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:07:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:07:43] 1.10- check project update number [PUN]if not found
[2023-06-25 12:07:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:07:43] 3.9- Finish cron_job Function
[2023-06-25 12:09:07] 1.1- Start cron_job Function
[2023-06-25 12:09:07] 1.2-request Api_url $api_url
[2023-06-25 12:09:07] 1.3-store events of the jop periodically during process 
[2023-06-25 12:09:07] 1.4- fetch data from Api
[2023-06-25 12:09:07] 1.5- View data that returned from API
[2023-06-25 12:09:07] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:09:07] 1.7- get data of each project to select 
[2023-06-25 12:09:07] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:09:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:09:07] 1.10- check project update number [PUN]if not found
[2023-06-25 12:09:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:09:07] 3.9- Finish cron_job Function
[2023-06-25 12:09:29] 1.1- Start cron_job Function
[2023-06-25 12:09:29] 1.2-request Api_url $api_url
[2023-06-25 12:09:30] 1.3-store events of the jop periodically during process 
[2023-06-25 12:09:30] 1.4- fetch data from Api
[2023-06-25 12:09:30] 1.5- View data that returned from API
[2023-06-25 12:09:30] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:09:30] 1.7- get data of each project to select 
[2023-06-25 12:09:30] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:09:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:09:30] 1.10- check project update number [PUN]if not found
[2023-06-25 12:09:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:09:30] 3.9- Finish cron_job Function
[2023-06-25 12:10:38] 1.1- Start cron_job Function
[2023-06-25 12:10:38] 1.2-request Api_url $api_url
[2023-06-25 12:10:39] 1.3-store events of the jop periodically during process 
[2023-06-25 12:10:39] 1.4- fetch data from Api
[2023-06-25 12:10:39] 1.5- View data that returned from API
[2023-06-25 12:10:39] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:10:39] 1.7- get data of each project to select 
[2023-06-25 12:10:39] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:10:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:10:39] 1.10- check project update number [PUN]if not found
[2023-06-25 12:10:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:10:39] 3.9- Finish cron_job Function
[2023-06-25 12:12:08] 1.1- Start cron_job Function
[2023-06-25 12:12:08] 1.2-request Api_url $api_url
[2023-06-25 12:12:09] 1.3-store events of the jop periodically during process 
[2023-06-25 12:12:09] 1.4- fetch data from Api
[2023-06-25 12:12:09] 1.5- View data that returned from API
[2023-06-25 12:12:09] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:12:09] 1.7- get data of each project to select 
[2023-06-25 12:12:09] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:12:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:12:09] 1.10- check project update number [PUN]if not found
[2023-06-25 12:12:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:12:09] 3.9- Finish cron_job Function
[2023-06-25 12:12:38] 1.1- Start cron_job Function
[2023-06-25 12:12:38] 1.2-request Api_url $api_url
[2023-06-25 12:12:39] 1.3-store events of the jop periodically during process 
[2023-06-25 12:12:39] 1.4- fetch data from Api
[2023-06-25 12:12:39] 1.5- View data that returned from API
[2023-06-25 12:12:39] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:12:39] 1.7- get data of each project to select 
[2023-06-25 12:12:39] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:12:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:12:39] 1.10- check project update number [PUN]if not found
[2023-06-25 12:12:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:12:39] 3.9- Finish cron_job Function
[2023-06-25 12:14:08] 1.1- Start cron_job Function
[2023-06-25 12:14:08] 1.2-request Api_url $api_url
[2023-06-25 12:14:09] 1.3-store events of the jop periodically during process 
[2023-06-25 12:14:09] 1.4- fetch data from Api
[2023-06-25 12:14:09] 1.5- View data that returned from API
[2023-06-25 12:14:09] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:14:09] 1.7- get data of each project to select 
[2023-06-25 12:14:09] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:14:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:14:09] 1.10- check project update number [PUN]if not found
[2023-06-25 12:14:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:14:09] 3.9- Finish cron_job Function
[2023-06-25 12:14:39] 1.1- Start cron_job Function
[2023-06-25 12:14:39] 1.2-request Api_url $api_url
[2023-06-25 12:14:40] 1.3-store events of the jop periodically during process 
[2023-06-25 12:14:40] 1.4- fetch data from Api
[2023-06-25 12:14:40] 1.5- View data that returned from API
[2023-06-25 12:14:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:14:40] 1.7- get data of each project to select 
[2023-06-25 12:14:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:14:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:14:40] 1.10- check project update number [PUN]if not found
[2023-06-25 12:14:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:14:40] 3.9- Finish cron_job Function
[2023-06-25 12:16:10] 1.1- Start cron_job Function
[2023-06-25 12:16:10] 1.2-request Api_url $api_url
[2023-06-25 12:16:11] 1.3-store events of the jop periodically during process 
[2023-06-25 12:16:11] 1.4- fetch data from Api
[2023-06-25 12:16:11] 1.5- View data that returned from API
[2023-06-25 12:16:11] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:16:11] 1.7- get data of each project to select 
[2023-06-25 12:16:11] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:16:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:16:11] 1.10- check project update number [PUN]if not found
[2023-06-25 12:16:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:16:11] 3.9- Finish cron_job Function
[2023-06-25 12:16:39] 1.1- Start cron_job Function
[2023-06-25 12:16:39] 1.2-request Api_url $api_url
[2023-06-25 12:16:40] 1.3-store events of the jop periodically during process 
[2023-06-25 12:16:40] 1.4- fetch data from Api
[2023-06-25 12:16:40] 1.5- View data that returned from API
[2023-06-25 12:16:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:16:40] 1.7- get data of each project to select 
[2023-06-25 12:16:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:16:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:16:40] 1.10- check project update number [PUN]if not found
[2023-06-25 12:16:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:16:40] 3.9- Finish cron_job Function
[2023-06-25 12:18:09] 1.1- Start cron_job Function
[2023-06-25 12:18:09] 1.2-request Api_url $api_url
[2023-06-25 12:18:10] 1.3-store events of the jop periodically during process 
[2023-06-25 12:18:10] 1.4- fetch data from Api
[2023-06-25 12:18:10] 1.5- View data that returned from API
[2023-06-25 12:18:10] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:18:10] 1.7- get data of each project to select 
[2023-06-25 12:18:10] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:18:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:18:10] 1.10- check project update number [PUN]if not found
[2023-06-25 12:18:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:18:10] 3.9- Finish cron_job Function
[2023-06-25 12:18:39] 1.1- Start cron_job Function
[2023-06-25 12:18:39] 1.2-request Api_url $api_url
[2023-06-25 12:18:40] 1.3-store events of the jop periodically during process 
[2023-06-25 12:18:40] 1.4- fetch data from Api
[2023-06-25 12:18:40] 1.5- View data that returned from API
[2023-06-25 12:18:40] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:18:40] 1.7- get data of each project to select 
[2023-06-25 12:18:40] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:18:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:18:40] 1.10- check project update number [PUN]if not found
[2023-06-25 12:18:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:18:40] 3.9- Finish cron_job Function
[2023-06-25 12:20:40] 1.1- Start cron_job Function
[2023-06-25 12:20:40] 1.2-request Api_url $api_url
[2023-06-25 12:20:41] 1.3-store events of the jop periodically during process 
[2023-06-25 12:20:41] 1.4- fetch data from Api
[2023-06-25 12:20:41] 1.5- View data that returned from API
[2023-06-25 12:20:41] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:20:41] 1.7- get data of each project to select 
[2023-06-25 12:20:41] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:20:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:20:41] 1.10- check project update number [PUN]if not found
[2023-06-25 12:20:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:20:41] 3.9- Finish cron_job Function
[2023-06-25 12:38:11] 1.1- Start cron_job Function
[2023-06-25 12:38:11] 1.2-request Api_url $api_url
[2023-06-25 12:38:12] 1.3-store events of the jop periodically during process 
[2023-06-25 12:38:12] 1.4- fetch data from Api
[2023-06-25 12:38:12] 1.5- View data that returned from API
[2023-06-25 12:38:12] 1.6- get and View projects & tags that returned from  API
[2023-06-25 12:38:12] 1.7- get data of each project to select 
[2023-06-25 12:38:12] 1.8- The selected project Name:my android. id: 7
[2023-06-25 12:38:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-25 12:38:12] 1.10- check project update number [PUN]if not found
[2023-06-25 12:38:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-25 12:38:12] 3.9- Finish cron_job Function
[2023-06-26 05:47:40] 1.1- Start cron_job Function
[2023-06-26 05:47:40] 1.2-request Api_url $api_url
[2023-06-26 05:47:41] 1.3-store events of the jop periodically during process 
[2023-06-26 05:47:41] 1.4- fetch data from Api
[2023-06-26 05:47:41] 1.5- View data that returned from API
[2023-06-26 05:47:41] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:47:41] 1.7- get data of each project to select 
[2023-06-26 05:47:41] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:47:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:47:41] 1.10- check project update number [PUN]if not found
[2023-06-26 05:47:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:47:41] 2.2- check if project update number[pun > 0]
[2023-06-26 05:47:41] 2.3- store data into history table
[2023-06-26 05:47:41] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 05:47:43] 2.7-changed the new pun 235 
[2023-06-26 05:47:43] 2.8- register updated_app in event table
[2023-06-26 05:47:43] 2.9- set status {'updated'}
[2023-06-26 05:47:43] 3.1- start_process
[2023-06-26 05:47:43] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 05:47:43] 3.3- if aun status > 0 
[2023-06-26 05:47:43] 3.5 check  the app have key '.rating.' if not found 
[2023-06-26 05:47:43] 3.7 check if the keys exists, update data
[2023-06-26 05:47:43] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:43] 3.5 check  the app have key '.version.' if not found 
[2023-06-26 05:47:43] 3.7 check if the keys exists, update data
[2023-06-26 05:47:43] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:43] 3.5 check  the app have key '..' if not found 
[2023-06-26 05:47:43] 3.6- Insert  all keys 
[2023-06-26 05:47:43] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-26 05:47:43] 3.7 check if the keys exists, update data
[2023-06-26 05:47:43] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:43] 3.5 check  the app have key '.logo.' if not found 
[2023-06-26 05:47:43] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.link.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.author.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.votes.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.5 check  the app have key '.file.' if not found 
[2023-06-26 05:47:44] 3.7 check if the keys exists, update data
[2023-06-26 05:47:44] 3.8- update all keys & logo & thumbnail 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:44] 3.1- start_process
[2023-06-26 05:47:44] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 05:47:44] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:45] 3.1- start_process
[2023-06-26 05:47:45] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 05:47:45] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:46] 3.1- start_process
[2023-06-26 05:47:46] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 05:47:46] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:47] 3.1- start_process
[2023-06-26 05:47:47] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 05:47:47] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:48] 3.1- start_process
[2023-06-26 05:47:48] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 05:47:48] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:49] 3.1- start_process
[2023-06-26 05:47:49] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 05:47:49] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:50] 3.1- start_process
[2023-06-26 05:47:50] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 05:47:50] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.1- start_process
[2023-06-26 05:47:51] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 05:47:51] 3.3- if aun status > 0 
[2023-06-26 05:47:51] 3.9- Finish cron_job Function
[2023-06-26 05:48:40] 1.1- Start cron_job Function
[2023-06-26 05:48:40] 1.2-request Api_url $api_url
[2023-06-26 05:48:40] 1.3-store events of the jop periodically during process 
[2023-06-26 05:48:40] 1.4- fetch data from Api
[2023-06-26 05:48:40] 1.5- View data that returned from API
[2023-06-26 05:48:40] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:48:40] 1.7- get data of each project to select 
[2023-06-26 05:48:40] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:48:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:48:40] 1.10- check project update number [PUN]if not found
[2023-06-26 05:48:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:48:40] 3.9- Finish cron_job Function
[2023-06-26 05:49:52] 1.1- Start cron_job Function
[2023-06-26 05:49:52] 1.2-request Api_url $api_url
[2023-06-26 05:49:52] 1.3-store events of the jop periodically during process 
[2023-06-26 05:49:52] 1.4- fetch data from Api
[2023-06-26 05:49:52] 1.5- View data that returned from API
[2023-06-26 05:49:52] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:49:52] 1.7- get data of each project to select 
[2023-06-26 05:49:52] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:49:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:49:52] 1.10- check project update number [PUN]if not found
[2023-06-26 05:49:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:49:52] 3.9- Finish cron_job Function
[2023-06-26 05:50:32] 1.1- Start cron_job Function
[2023-06-26 05:50:32] 1.2-request Api_url $api_url
[2023-06-26 05:50:33] 1.3-store events of the jop periodically during process 
[2023-06-26 05:50:33] 1.4- fetch data from Api
[2023-06-26 05:50:33] 1.5- View data that returned from API
[2023-06-26 05:50:33] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:50:33] 1.7- get data of each project to select 
[2023-06-26 05:50:33] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:50:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:50:33] 1.10- check project update number [PUN]if not found
[2023-06-26 05:50:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:50:33] 3.9- Finish cron_job Function
[2023-06-26 05:52:53] 1.1- Start cron_job Function
[2023-06-26 05:52:53] 1.2-request Api_url $api_url
[2023-06-26 05:52:54] 1.3-store events of the jop periodically during process 
[2023-06-26 05:52:54] 1.4- fetch data from Api
[2023-06-26 05:52:54] 1.5- View data that returned from API
[2023-06-26 05:52:54] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:52:54] 1.7- get data of each project to select 
[2023-06-26 05:52:54] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:52:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:52:54] 1.10- check project update number [PUN]if not found
[2023-06-26 05:52:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:52:54] 3.9- Finish cron_job Function
[2023-06-26 05:53:52] 1.1- Start cron_job Function
[2023-06-26 05:53:52] 1.2-request Api_url $api_url
[2023-06-26 05:53:53] 1.3-store events of the jop periodically during process 
[2023-06-26 05:53:53] 1.4- fetch data from Api
[2023-06-26 05:53:53] 1.5- View data that returned from API
[2023-06-26 05:53:53] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:53:53] 1.7- get data of each project to select 
[2023-06-26 05:53:53] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:53:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:53:53] 1.10- check project update number [PUN]if not found
[2023-06-26 05:53:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:53:53] 3.9- Finish cron_job Function
[2023-06-26 05:54:56] 1.1- Start cron_job Function
[2023-06-26 05:54:56] 1.2-request Api_url $api_url
[2023-06-26 05:54:57] 1.3-store events of the jop periodically during process 
[2023-06-26 05:54:57] 1.4- fetch data from Api
[2023-06-26 05:54:57] 1.5- View data that returned from API
[2023-06-26 05:54:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:54:57] 1.7- get data of each project to select 
[2023-06-26 05:54:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:54:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:54:57] 1.10- check project update number [PUN]if not found
[2023-06-26 05:54:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:54:57] 3.9- Finish cron_job Function
[2023-06-26 05:55:53] 1.1- Start cron_job Function
[2023-06-26 05:55:53] 1.2-request Api_url $api_url
[2023-06-26 05:55:54] 1.3-store events of the jop periodically during process 
[2023-06-26 05:55:54] 1.4- fetch data from Api
[2023-06-26 05:55:54] 1.5- View data that returned from API
[2023-06-26 05:55:54] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:55:54] 1.7- get data of each project to select 
[2023-06-26 05:55:54] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:55:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:55:54] 1.10- check project update number [PUN]if not found
[2023-06-26 05:55:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:55:54] 3.9- Finish cron_job Function
[2023-06-26 05:56:56] 1.1- Start cron_job Function
[2023-06-26 05:56:56] 1.2-request Api_url $api_url
[2023-06-26 05:56:57] 1.3-store events of the jop periodically during process 
[2023-06-26 05:56:57] 1.4- fetch data from Api
[2023-06-26 05:56:57] 1.5- View data that returned from API
[2023-06-26 05:56:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:56:57] 1.7- get data of each project to select 
[2023-06-26 05:56:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:56:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:56:57] 1.10- check project update number [PUN]if not found
[2023-06-26 05:56:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:56:57] 3.9- Finish cron_job Function
[2023-06-26 05:57:54] 1.1- Start cron_job Function
[2023-06-26 05:57:54] 1.2-request Api_url $api_url
[2023-06-26 05:57:55] 1.3-store events of the jop periodically during process 
[2023-06-26 05:57:55] 1.4- fetch data from Api
[2023-06-26 05:57:55] 1.5- View data that returned from API
[2023-06-26 05:57:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:57:55] 1.7- get data of each project to select 
[2023-06-26 05:57:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:57:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:57:55] 1.10- check project update number [PUN]if not found
[2023-06-26 05:57:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:57:55] 3.9- Finish cron_job Function
[2023-06-26 05:58:56] 1.1- Start cron_job Function
[2023-06-26 05:58:56] 1.2-request Api_url $api_url
[2023-06-26 05:58:57] 1.3-store events of the jop periodically during process 
[2023-06-26 05:58:57] 1.4- fetch data from Api
[2023-06-26 05:58:57] 1.5- View data that returned from API
[2023-06-26 05:58:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 05:58:57] 1.7- get data of each project to select 
[2023-06-26 05:58:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 05:58:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 05:58:57] 1.10- check project update number [PUN]if not found
[2023-06-26 05:58:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 05:58:57] 3.9- Finish cron_job Function
[2023-06-26 06:12:48] 1.1- Start cron_job Function
[2023-06-26 06:12:48] 1.2-request Api_url $api_url
[2023-06-26 06:12:49] 1.3-store events of the jop periodically during process 
[2023-06-26 06:12:49] 1.4- fetch data from Api
[2023-06-26 06:12:49] 1.5- View data that returned from API
[2023-06-26 06:12:49] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:12:49] 1.7- get data of each project to select 
[2023-06-26 06:12:49] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:12:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:12:49] 1.10- check project update number [PUN]if not found
[2023-06-26 06:12:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:12:49] 3.9- Finish cron_job Function
[2023-06-26 06:30:35] 1.1- Start cron_job Function
[2023-06-26 06:30:35] 1.2-request Api_url $api_url
[2023-06-26 06:30:35] 1.3-store events of the jop periodically during process 
[2023-06-26 06:30:35] 1.4- fetch data from Api
[2023-06-26 06:30:35] 1.5- View data that returned from API
[2023-06-26 06:30:35] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:30:35] 1.7- get data of each project to select 
[2023-06-26 06:30:35] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:30:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:30:35] 1.10- check project update number [PUN]if not found
[2023-06-26 06:30:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:30:35] 2.2- check if project update number[pun > 0]
[2023-06-26 06:30:35] 2.3- store data into history table
[2023-06-26 06:30:35] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 06:30:38] 2.7-changed the new pun 236 
[2023-06-26 06:30:38] 2.8- register updated_app in event table
[2023-06-26 06:30:38] 2.9- set status {'updated'}
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.5 check  the app have key '.rating.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.version.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '..' if not found 
[2023-06-26 06:30:38] 3.6- Insert  all keys 
[2023-06-26 06:30:38] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.logo.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.link.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.author.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.votes.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.5 check  the app have key '.file.' if not found 
[2023-06-26 06:30:38] 3.7 check if the keys exists, update data
[2023-06-26 06:30:38] 3.8- update all keys & logo & thumbnail 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:38] 3.1- start_process
[2023-06-26 06:30:38] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 06:30:38] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:39] 3.1- start_process
[2023-06-26 06:30:39] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 06:30:39] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:40] 3.1- start_process
[2023-06-26 06:30:40] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 06:30:40] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:41] 3.1- start_process
[2023-06-26 06:30:41] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 06:30:41] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:42] 3.1- start_process
[2023-06-26 06:30:42] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 06:30:42] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:43] 3.1- start_process
[2023-06-26 06:30:43] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 06:30:43] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:44] 3.1- start_process
[2023-06-26 06:30:44] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 06:30:44] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.1- start_process
[2023-06-26 06:30:45] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 06:30:45] 3.3- if aun status > 0 
[2023-06-26 06:30:45] 3.9- Finish cron_job Function
[2023-06-26 06:32:35] 1.1- Start cron_job Function
[2023-06-26 06:32:35] 1.2-request Api_url $api_url
[2023-06-26 06:32:36] 1.3-store events of the jop periodically during process 
[2023-06-26 06:32:36] 1.4- fetch data from Api
[2023-06-26 06:32:36] 1.5- View data that returned from API
[2023-06-26 06:32:36] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:32:36] 1.7- get data of each project to select 
[2023-06-26 06:32:36] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:32:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:32:36] 1.10- check project update number [PUN]if not found
[2023-06-26 06:32:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:32:36] 3.9- Finish cron_job Function
[2023-06-26 06:34:36] 1.1- Start cron_job Function
[2023-06-26 06:34:36] 1.2-request Api_url $api_url
[2023-06-26 06:34:36] 1.3-store events of the jop periodically during process 
[2023-06-26 06:34:36] 1.4- fetch data from Api
[2023-06-26 06:34:36] 1.5- View data that returned from API
[2023-06-26 06:34:36] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:34:36] 1.7- get data of each project to select 
[2023-06-26 06:34:36] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:34:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:34:36] 1.10- check project update number [PUN]if not found
[2023-06-26 06:34:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:34:36] 3.9- Finish cron_job Function
[2023-06-26 06:36:35] 1.1- Start cron_job Function
[2023-06-26 06:36:35] 1.2-request Api_url $api_url
[2023-06-26 06:36:36] 1.3-store events of the jop periodically during process 
[2023-06-26 06:36:36] 1.4- fetch data from Api
[2023-06-26 06:36:36] 1.5- View data that returned from API
[2023-06-26 06:36:36] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:36:36] 1.7- get data of each project to select 
[2023-06-26 06:36:36] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:36:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:36:36] 1.10- check project update number [PUN]if not found
[2023-06-26 06:36:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:36:36] 3.9- Finish cron_job Function
[2023-06-26 06:38:35] 1.1- Start cron_job Function
[2023-06-26 06:38:35] 1.2-request Api_url $api_url
[2023-06-26 06:38:36] 1.3-store events of the jop periodically during process 
[2023-06-26 06:38:36] 1.4- fetch data from Api
[2023-06-26 06:38:36] 1.5- View data that returned from API
[2023-06-26 06:38:36] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:38:36] 1.7- get data of each project to select 
[2023-06-26 06:38:36] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:38:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:38:36] 1.10- check project update number [PUN]if not found
[2023-06-26 06:38:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:38:36] 3.9- Finish cron_job Function
[2023-06-26 06:40:36] 1.1- Start cron_job Function
[2023-06-26 06:40:36] 1.2-request Api_url $api_url
[2023-06-26 06:40:37] 1.3-store events of the jop periodically during process 
[2023-06-26 06:40:37] 1.4- fetch data from Api
[2023-06-26 06:40:37] 1.5- View data that returned from API
[2023-06-26 06:40:37] 1.6- get and View projects & tags that returned from  API
[2023-06-26 06:40:37] 1.7- get data of each project to select 
[2023-06-26 06:40:37] 1.8- The selected project Name:my android. id: 7
[2023-06-26 06:40:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 06:40:37] 1.10- check project update number [PUN]if not found
[2023-06-26 06:40:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 06:40:37] 3.9- Finish cron_job Function
[2023-06-26 07:08:57] 1.1- Start cron_job Function
[2023-06-26 07:08:57] 1.2-request Api_url $api_url
[2023-06-26 07:08:58] 1.3-store events of the jop periodically during process 
[2023-06-26 07:08:58] 1.4- fetch data from Api
[2023-06-26 07:08:58] 1.5- View data that returned from API
[2023-06-26 07:08:58] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:08:58] 1.7- get data of each project to select 
[2023-06-26 07:08:58] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:08:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:08:58] 1.10- check project update number [PUN]if not found
[2023-06-26 07:08:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:08:58] 3.9- Finish cron_job Function
[2023-06-26 07:15:07] 1.1- Start cron_job Function
[2023-06-26 07:15:07] 1.2-request Api_url $api_url
[2023-06-26 07:15:07] 1.3-store events of the jop periodically during process 
[2023-06-26 07:15:07] 1.4- fetch data from Api
[2023-06-26 07:15:07] 1.5- View data that returned from API
[2023-06-26 07:15:07] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:15:07] 1.7- get data of each project to select 
[2023-06-26 07:15:07] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:15:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:15:07] 1.10- check project update number [PUN]if not found
[2023-06-26 07:15:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:15:07] 3.9- Finish cron_job Function
[2023-06-26 07:15:52] 1.1- Start cron_job Function
[2023-06-26 07:15:52] 1.2-request Api_url $api_url
[2023-06-26 07:15:53] 1.3-store events of the jop periodically during process 
[2023-06-26 07:15:53] 1.4- fetch data from Api
[2023-06-26 07:15:53] 1.5- View data that returned from API
[2023-06-26 07:15:53] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:15:53] 1.7- get data of each project to select 
[2023-06-26 07:15:53] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:15:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:15:53] 1.10- check project update number [PUN]if not found
[2023-06-26 07:15:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:15:53] 3.9- Finish cron_job Function
[2023-06-26 07:16:54] 1.1- Start cron_job Function
[2023-06-26 07:16:54] 1.2-request Api_url $api_url
[2023-06-26 07:16:54] 1.3-store events of the jop periodically during process 
[2023-06-26 07:16:54] 1.4- fetch data from Api
[2023-06-26 07:16:54] 1.5- View data that returned from API
[2023-06-26 07:16:54] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:16:54] 1.7- get data of each project to select 
[2023-06-26 07:16:54] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:16:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:16:54] 1.10- check project update number [PUN]if not found
[2023-06-26 07:16:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:16:54] 3.9- Finish cron_job Function
[2023-06-26 07:18:00] 1.1- Start cron_job Function
[2023-06-26 07:18:00] 1.2-request Api_url $api_url
[2023-06-26 07:18:00] 1.3-store events of the jop periodically during process 
[2023-06-26 07:18:00] 1.4- fetch data from Api
[2023-06-26 07:18:00] 1.5- View data that returned from API
[2023-06-26 07:18:00] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:18:00] 1.7- get data of each project to select 
[2023-06-26 07:18:00] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:18:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:18:00] 1.10- check project update number [PUN]if not found
[2023-06-26 07:18:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:18:00] 3.9- Finish cron_job Function
[2023-06-26 07:19:05] 1.1- Start cron_job Function
[2023-06-26 07:19:05] 1.2-request Api_url $api_url
[2023-06-26 07:19:05] 1.3-store events of the jop periodically during process 
[2023-06-26 07:19:05] 1.4- fetch data from Api
[2023-06-26 07:19:05] 1.5- View data that returned from API
[2023-06-26 07:19:05] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:19:05] 1.7- get data of each project to select 
[2023-06-26 07:19:05] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:19:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:19:05] 1.10- check project update number [PUN]if not found
[2023-06-26 07:19:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:19:05] 3.9- Finish cron_job Function
[2023-06-26 07:19:37] 1.1- Start cron_job Function
[2023-06-26 07:19:37] 1.2-request Api_url $api_url
[2023-06-26 07:19:37] 1.3-store events of the jop periodically during process 
[2023-06-26 07:19:37] 1.4- fetch data from Api
[2023-06-26 07:19:37] 1.5- View data that returned from API
[2023-06-26 07:19:37] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:19:37] 1.7- get data of each project to select 
[2023-06-26 07:19:37] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:19:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:19:37] 1.10- check project update number [PUN]if not found
[2023-06-26 07:19:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:19:37] 3.9- Finish cron_job Function
[2023-06-26 07:20:38] 1.1- Start cron_job Function
[2023-06-26 07:20:38] 1.2-request Api_url $api_url
[2023-06-26 07:20:39] 1.3-store events of the jop periodically during process 
[2023-06-26 07:20:39] 1.4- fetch data from Api
[2023-06-26 07:20:39] 1.5- View data that returned from API
[2023-06-26 07:20:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:20:39] 1.7- get data of each project to select 
[2023-06-26 07:20:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:20:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:20:39] 1.10- check project update number [PUN]if not found
[2023-06-26 07:20:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:20:39] 3.9- Finish cron_job Function
[2023-06-26 07:24:05] 1.1- Start cron_job Function
[2023-06-26 07:24:05] 1.2-request Api_url $api_url
[2023-06-26 07:24:05] 1.3-store events of the jop periodically during process 
[2023-06-26 07:24:05] 1.4- fetch data from Api
[2023-06-26 07:24:05] 1.5- View data that returned from API
[2023-06-26 07:24:05] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:24:05] 1.7- get data of each project to select 
[2023-06-26 07:24:05] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:24:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:24:05] 1.10- check project update number [PUN]if not found
[2023-06-26 07:24:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:24:05] 3.9- Finish cron_job Function
[2023-06-26 07:25:05] 1.1- Start cron_job Function
[2023-06-26 07:25:05] 1.2-request Api_url $api_url
[2023-06-26 07:25:06] 1.3-store events of the jop periodically during process 
[2023-06-26 07:25:06] 1.4- fetch data from Api
[2023-06-26 07:25:06] 1.5- View data that returned from API
[2023-06-26 07:25:06] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:25:06] 1.7- get data of each project to select 
[2023-06-26 07:25:06] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:25:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:25:06] 1.10- check project update number [PUN]if not found
[2023-06-26 07:25:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:25:06] 3.9- Finish cron_job Function
[2023-06-26 07:26:05] 1.1- Start cron_job Function
[2023-06-26 07:26:05] 1.2-request Api_url $api_url
[2023-06-26 07:26:06] 1.3-store events of the jop periodically during process 
[2023-06-26 07:26:06] 1.4- fetch data from Api
[2023-06-26 07:26:06] 1.5- View data that returned from API
[2023-06-26 07:26:06] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:26:06] 1.7- get data of each project to select 
[2023-06-26 07:26:06] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:26:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:26:06] 1.10- check project update number [PUN]if not found
[2023-06-26 07:26:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:26:06] 3.9- Finish cron_job Function
[2023-06-26 07:27:43] 1.1- Start cron_job Function
[2023-06-26 07:27:43] 1.2-request Api_url $api_url
[2023-06-26 07:27:44] 1.3-store events of the jop periodically during process 
[2023-06-26 07:27:44] 1.4- fetch data from Api
[2023-06-26 07:27:44] 1.5- View data that returned from API
[2023-06-26 07:27:44] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:27:44] 1.7- get data of each project to select 
[2023-06-26 07:27:44] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:27:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:27:44] 1.10- check project update number [PUN]if not found
[2023-06-26 07:27:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:27:44] 3.9- Finish cron_job Function
[2023-06-26 07:28:56] 1.1- Start cron_job Function
[2023-06-26 07:28:56] 1.2-request Api_url $api_url
[2023-06-26 07:28:57] 1.3-store events of the jop periodically during process 
[2023-06-26 07:28:57] 1.4- fetch data from Api
[2023-06-26 07:28:57] 1.5- View data that returned from API
[2023-06-26 07:28:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:28:57] 1.7- get data of each project to select 
[2023-06-26 07:28:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:28:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:28:57] 1.10- check project update number [PUN]if not found
[2023-06-26 07:28:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:28:57] 3.9- Finish cron_job Function
[2023-06-26 07:29:37] 1.1- Start cron_job Function
[2023-06-26 07:29:37] 1.2-request Api_url $api_url
[2023-06-26 07:29:38] 1.3-store events of the jop periodically during process 
[2023-06-26 07:29:38] 1.4- fetch data from Api
[2023-06-26 07:29:38] 1.5- View data that returned from API
[2023-06-26 07:29:38] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:29:38] 1.7- get data of each project to select 
[2023-06-26 07:29:38] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:29:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:29:38] 1.10- check project update number [PUN]if not found
[2023-06-26 07:29:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:29:38] 3.9- Finish cron_job Function
[2023-06-26 07:30:49] 1.1- Start cron_job Function
[2023-06-26 07:30:49] 1.2-request Api_url $api_url
[2023-06-26 07:30:50] 1.3-store events of the jop periodically during process 
[2023-06-26 07:30:50] 1.4- fetch data from Api
[2023-06-26 07:30:50] 1.5- View data that returned from API
[2023-06-26 07:30:50] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:30:50] 1.7- get data of each project to select 
[2023-06-26 07:30:50] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:30:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:30:50] 1.10- check project update number [PUN]if not found
[2023-06-26 07:30:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:30:50] 3.9- Finish cron_job Function
[2023-06-26 07:32:08] 1.1- Start cron_job Function
[2023-06-26 07:32:08] 1.2-request Api_url $api_url
[2023-06-26 07:32:08] 1.3-store events of the jop periodically during process 
[2023-06-26 07:32:08] 1.4- fetch data from Api
[2023-06-26 07:32:08] 1.5- View data that returned from API
[2023-06-26 07:32:08] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:32:08] 1.7- get data of each project to select 
[2023-06-26 07:32:08] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:32:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:32:08] 1.10- check project update number [PUN]if not found
[2023-06-26 07:32:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:32:08] 3.9- Finish cron_job Function
[2023-06-26 07:32:31] 1.1- Start cron_job Function
[2023-06-26 07:32:31] 1.2-request Api_url $api_url
[2023-06-26 07:32:32] 1.3-store events of the jop periodically during process 
[2023-06-26 07:32:32] 1.4- fetch data from Api
[2023-06-26 07:32:32] 1.5- View data that returned from API
[2023-06-26 07:32:32] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:32:32] 1.7- get data of each project to select 
[2023-06-26 07:32:32] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:32:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:32:32] 1.10- check project update number [PUN]if not found
[2023-06-26 07:32:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:32:32] 3.9- Finish cron_job Function
[2023-06-26 07:34:07] 1.1- Start cron_job Function
[2023-06-26 07:34:07] 1.2-request Api_url $api_url
[2023-06-26 07:34:08] 1.3-store events of the jop periodically during process 
[2023-06-26 07:34:08] 1.4- fetch data from Api
[2023-06-26 07:34:08] 1.5- View data that returned from API
[2023-06-26 07:34:08] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:34:08] 1.7- get data of each project to select 
[2023-06-26 07:34:08] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:34:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:34:08] 1.10- check project update number [PUN]if not found
[2023-06-26 07:34:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:34:08] 3.9- Finish cron_job Function
[2023-06-26 07:34:28] 1.1- Start cron_job Function
[2023-06-26 07:34:28] 1.2-request Api_url $api_url
[2023-06-26 07:34:29] 1.3-store events of the jop periodically during process 
[2023-06-26 07:34:29] 1.4- fetch data from Api
[2023-06-26 07:34:29] 1.5- View data that returned from API
[2023-06-26 07:34:29] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:34:29] 1.7- get data of each project to select 
[2023-06-26 07:34:29] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:34:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:34:29] 1.10- check project update number [PUN]if not found
[2023-06-26 07:34:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:34:29] 3.9- Finish cron_job Function
[2023-06-26 07:37:50] 1.1- Start cron_job Function
[2023-06-26 07:37:50] 1.2-request Api_url $api_url
[2023-06-26 07:37:51] 1.3-store events of the jop periodically during process 
[2023-06-26 07:37:51] 1.4- fetch data from Api
[2023-06-26 07:37:51] 1.5- View data that returned from API
[2023-06-26 07:37:51] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:37:51] 1.7- get data of each project to select 
[2023-06-26 07:37:51] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:37:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:37:51] 1.10- check project update number [PUN]if not found
[2023-06-26 07:37:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:37:51] 3.9- Finish cron_job Function
[2023-06-26 07:40:20] 1.1- Start cron_job Function
[2023-06-26 07:40:20] 1.2-request Api_url $api_url
[2023-06-26 07:40:21] 1.3-store events of the jop periodically during process 
[2023-06-26 07:40:21] 1.4- fetch data from Api
[2023-06-26 07:40:21] 1.5- View data that returned from API
[2023-06-26 07:40:21] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:40:21] 1.7- get data of each project to select 
[2023-06-26 07:40:21] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:40:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:40:21] 1.10- check project update number [PUN]if not found
[2023-06-26 07:40:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:40:21] 3.9- Finish cron_job Function
[2023-06-26 07:40:36] 1.1- Start cron_job Function
[2023-06-26 07:40:36] 1.2-request Api_url $api_url
[2023-06-26 07:40:37] 1.3-store events of the jop periodically during process 
[2023-06-26 07:40:37] 1.4- fetch data from Api
[2023-06-26 07:40:37] 1.5- View data that returned from API
[2023-06-26 07:40:37] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:40:37] 1.7- get data of each project to select 
[2023-06-26 07:40:37] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:40:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:40:37] 1.10- check project update number [PUN]if not found
[2023-06-26 07:40:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:40:37] 3.9- Finish cron_job Function
[2023-06-26 07:41:33] 1.1- Start cron_job Function
[2023-06-26 07:41:33] 1.2-request Api_url $api_url
[2023-06-26 07:41:34] 1.3-store events of the jop periodically during process 
[2023-06-26 07:41:34] 1.4- fetch data from Api
[2023-06-26 07:41:34] 1.5- View data that returned from API
[2023-06-26 07:41:34] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:41:34] 1.7- get data of each project to select 
[2023-06-26 07:41:34] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:41:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:41:34] 1.10- check project update number [PUN]if not found
[2023-06-26 07:41:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:41:34] 3.9- Finish cron_job Function
[2023-06-26 07:42:53] 1.1- Start cron_job Function
[2023-06-26 07:42:53] 1.2-request Api_url $api_url
[2023-06-26 07:42:54] 1.3-store events of the jop periodically during process 
[2023-06-26 07:42:54] 1.4- fetch data from Api
[2023-06-26 07:42:54] 1.5- View data that returned from API
[2023-06-26 07:42:54] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:42:54] 1.7- get data of each project to select 
[2023-06-26 07:42:54] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:42:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:42:54] 1.10- check project update number [PUN]if not found
[2023-06-26 07:42:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:42:54] 3.9- Finish cron_job Function
[2023-06-26 07:53:23] 1.1- Start cron_job Function
[2023-06-26 07:53:23] 1.2-request Api_url $api_url
[2023-06-26 07:53:24] 1.3-store events of the jop periodically during process 
[2023-06-26 07:53:24] 1.4- fetch data from Api
[2023-06-26 07:53:24] 1.5- View data that returned from API
[2023-06-26 07:53:24] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:53:24] 1.7- get data of each project to select 
[2023-06-26 07:53:24] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:53:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:53:24] 1.10- check project update number [PUN]if not found
[2023-06-26 07:53:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:53:24] 3.9- Finish cron_job Function
[2023-06-26 07:53:38] 1.1- Start cron_job Function
[2023-06-26 07:53:38] 1.2-request Api_url $api_url
[2023-06-26 07:53:39] 1.3-store events of the jop periodically during process 
[2023-06-26 07:53:39] 1.4- fetch data from Api
[2023-06-26 07:53:39] 1.5- View data that returned from API
[2023-06-26 07:53:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:53:39] 1.7- get data of each project to select 
[2023-06-26 07:53:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:53:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:53:39] 1.10- check project update number [PUN]if not found
[2023-06-26 07:53:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:53:39] 3.9- Finish cron_job Function
[2023-06-26 07:55:42] 1.1- Start cron_job Function
[2023-06-26 07:55:42] 1.2-request Api_url $api_url
[2023-06-26 07:55:43] 1.3-store events of the jop periodically during process 
[2023-06-26 07:55:43] 1.4- fetch data from Api
[2023-06-26 07:55:43] 1.5- View data that returned from API
[2023-06-26 07:55:43] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:55:43] 1.7- get data of each project to select 
[2023-06-26 07:55:43] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:55:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:55:43] 1.10- check project update number [PUN]if not found
[2023-06-26 07:55:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:55:43] 3.9- Finish cron_job Function
[2023-06-26 07:57:11] 1.1- Start cron_job Function
[2023-06-26 07:57:11] 1.2-request Api_url $api_url
[2023-06-26 07:57:12] 1.3-store events of the jop periodically during process 
[2023-06-26 07:57:12] 1.4- fetch data from Api
[2023-06-26 07:57:12] 1.5- View data that returned from API
[2023-06-26 07:57:12] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:57:12] 1.7- get data of each project to select 
[2023-06-26 07:57:12] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:57:12] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:57:12] 1.10- check project update number [PUN]if not found
[2023-06-26 07:57:12] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:57:12] 3.9- Finish cron_job Function
[2023-06-26 07:57:42] 1.1- Start cron_job Function
[2023-06-26 07:57:42] 1.2-request Api_url $api_url
[2023-06-26 07:57:43] 1.3-store events of the jop periodically during process 
[2023-06-26 07:57:43] 1.4- fetch data from Api
[2023-06-26 07:57:43] 1.5- View data that returned from API
[2023-06-26 07:57:43] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:57:43] 1.7- get data of each project to select 
[2023-06-26 07:57:43] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:57:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:57:43] 1.10- check project update number [PUN]if not found
[2023-06-26 07:57:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:57:43] 3.9- Finish cron_job Function
[2023-06-26 07:59:15] 1.1- Start cron_job Function
[2023-06-26 07:59:15] 1.2-request Api_url $api_url
[2023-06-26 07:59:15] 1.3-store events of the jop periodically during process 
[2023-06-26 07:59:15] 1.4- fetch data from Api
[2023-06-26 07:59:15] 1.5- View data that returned from API
[2023-06-26 07:59:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:59:15] 1.7- get data of each project to select 
[2023-06-26 07:59:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:59:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:59:15] 1.10- check project update number [PUN]if not found
[2023-06-26 07:59:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:59:15] 3.9- Finish cron_job Function
[2023-06-26 07:59:42] 1.1- Start cron_job Function
[2023-06-26 07:59:42] 1.2-request Api_url $api_url
[2023-06-26 07:59:43] 1.3-store events of the jop periodically during process 
[2023-06-26 07:59:43] 1.4- fetch data from Api
[2023-06-26 07:59:43] 1.5- View data that returned from API
[2023-06-26 07:59:43] 1.6- get and View projects & tags that returned from  API
[2023-06-26 07:59:43] 1.7- get data of each project to select 
[2023-06-26 07:59:43] 1.8- The selected project Name:my android. id: 7
[2023-06-26 07:59:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 07:59:43] 1.10- check project update number [PUN]if not found
[2023-06-26 07:59:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 07:59:43] 3.9- Finish cron_job Function
[2023-06-26 08:01:43] 1.1- Start cron_job Function
[2023-06-26 08:01:43] 1.2-request Api_url $api_url
[2023-06-26 08:01:44] 1.3-store events of the jop periodically during process 
[2023-06-26 08:01:44] 1.4- fetch data from Api
[2023-06-26 08:01:44] 1.5- View data that returned from API
[2023-06-26 08:01:44] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:01:44] 1.7- get data of each project to select 
[2023-06-26 08:01:44] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:01:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:01:44] 1.10- check project update number [PUN]if not found
[2023-06-26 08:01:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:01:44] 3.9- Finish cron_job Function
[2023-06-26 08:03:42] 1.1- Start cron_job Function
[2023-06-26 08:03:42] 1.2-request Api_url $api_url
[2023-06-26 08:03:43] 1.3-store events of the jop periodically during process 
[2023-06-26 08:03:43] 1.4- fetch data from Api
[2023-06-26 08:03:43] 1.5- View data that returned from API
[2023-06-26 08:03:43] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:03:43] 1.7- get data of each project to select 
[2023-06-26 08:03:43] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:03:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:03:43] 1.10- check project update number [PUN]if not found
[2023-06-26 08:03:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:03:43] 3.9- Finish cron_job Function
[2023-06-26 08:04:55] 1.1- Start cron_job Function
[2023-06-26 08:04:55] 1.2-request Api_url $api_url
[2023-06-26 08:04:56] 1.3-store events of the jop periodically during process 
[2023-06-26 08:04:56] 1.4- fetch data from Api
[2023-06-26 08:04:56] 1.5- View data that returned from API
[2023-06-26 08:04:56] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:04:56] 1.7- get data of each project to select 
[2023-06-26 08:04:56] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:04:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:04:56] 1.10- check project update number [PUN]if not found
[2023-06-26 08:04:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:04:56] 3.9- Finish cron_job Function
[2023-06-26 08:05:29] 1.1- Start cron_job Function
[2023-06-26 08:05:29] 1.2-request Api_url $api_url
[2023-06-26 08:05:29] 1.3-store events of the jop periodically during process 
[2023-06-26 08:05:29] 1.4- fetch data from Api
[2023-06-26 08:05:29] 1.5- View data that returned from API
[2023-06-26 08:05:29] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:05:29] 1.7- get data of each project to select 
[2023-06-26 08:05:29] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:05:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:05:29] 1.10- check project update number [PUN]if not found
[2023-06-26 08:05:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:05:29] 3.9- Finish cron_job Function
[2023-06-26 08:07:27] 1.1- Start cron_job Function
[2023-06-26 08:07:27] 1.2-request Api_url $api_url
[2023-06-26 08:07:28] 1.3-store events of the jop periodically during process 
[2023-06-26 08:07:28] 1.4- fetch data from Api
[2023-06-26 08:07:28] 1.5- View data that returned from API
[2023-06-26 08:07:28] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:07:28] 1.7- get data of each project to select 
[2023-06-26 08:07:28] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:07:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:07:28] 1.10- check project update number [PUN]if not found
[2023-06-26 08:07:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:07:28] 3.9- Finish cron_job Function
[2023-06-26 08:08:18] 1.1- Start cron_job Function
[2023-06-26 08:08:18] 1.2-request Api_url $api_url
[2023-06-26 08:08:19] 1.3-store events of the jop periodically during process 
[2023-06-26 08:08:19] 1.4- fetch data from Api
[2023-06-26 08:08:19] 1.5- View data that returned from API
[2023-06-26 08:08:19] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:08:19] 1.7- get data of each project to select 
[2023-06-26 08:08:19] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:08:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:08:19] 1.10- check project update number [PUN]if not found
[2023-06-26 08:08:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:08:19] 3.9- Finish cron_job Function
[2023-06-26 08:10:17] 1.1- Start cron_job Function
[2023-06-26 08:10:17] 1.2-request Api_url $api_url
[2023-06-26 08:10:18] 1.3-store events of the jop periodically during process 
[2023-06-26 08:10:18] 1.4- fetch data from Api
[2023-06-26 08:10:18] 1.5- View data that returned from API
[2023-06-26 08:10:18] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:10:18] 1.7- get data of each project to select 
[2023-06-26 08:10:18] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:10:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:10:18] 1.10- check project update number [PUN]if not found
[2023-06-26 08:10:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:10:18] 3.9- Finish cron_job Function
[2023-06-26 08:12:17] 1.1- Start cron_job Function
[2023-06-26 08:12:17] 1.2-request Api_url $api_url
[2023-06-26 08:12:18] 1.3-store events of the jop periodically during process 
[2023-06-26 08:12:18] 1.4- fetch data from Api
[2023-06-26 08:12:18] 1.5- View data that returned from API
[2023-06-26 08:12:18] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:12:18] 1.7- get data of each project to select 
[2023-06-26 08:12:18] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:12:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:12:18] 1.10- check project update number [PUN]if not found
[2023-06-26 08:12:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:12:18] 3.9- Finish cron_job Function
[2023-06-26 08:14:18] 1.1- Start cron_job Function
[2023-06-26 08:14:18] 1.2-request Api_url $api_url
[2023-06-26 08:14:19] 1.3-store events of the jop periodically during process 
[2023-06-26 08:14:19] 1.4- fetch data from Api
[2023-06-26 08:14:19] 1.5- View data that returned from API
[2023-06-26 08:14:19] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:14:19] 1.7- get data of each project to select 
[2023-06-26 08:14:19] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:14:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:14:19] 1.10- check project update number [PUN]if not found
[2023-06-26 08:14:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:14:19] 3.9- Finish cron_job Function
[2023-06-26 08:14:29] 1.1- Start cron_job Function
[2023-06-26 08:14:29] 1.2-request Api_url $api_url
[2023-06-26 08:14:30] 1.3-store events of the jop periodically during process 
[2023-06-26 08:14:30] 1.4- fetch data from Api
[2023-06-26 08:14:30] 1.5- View data that returned from API
[2023-06-26 08:14:30] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:14:30] 1.7- get data of each project to select 
[2023-06-26 08:14:30] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:14:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:14:30] 1.10- check project update number [PUN]if not found
[2023-06-26 08:14:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:14:30] 3.9- Finish cron_job Function
[2023-06-26 08:16:32] 1.1- Start cron_job Function
[2023-06-26 08:16:32] 1.2-request Api_url $api_url
[2023-06-26 08:16:33] 1.3-store events of the jop periodically during process 
[2023-06-26 08:16:33] 1.4- fetch data from Api
[2023-06-26 08:16:33] 1.5- View data that returned from API
[2023-06-26 08:16:33] 1.6- get and View projects & tags that returned from  API
[2023-06-26 08:16:33] 1.7- get data of each project to select 
[2023-06-26 08:16:33] 1.8- The selected project Name:my android. id: 7
[2023-06-26 08:16:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 08:16:33] 1.10- check project update number [PUN]if not found
[2023-06-26 08:16:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 08:16:33] 3.9- Finish cron_job Function
[2023-06-26 09:03:21] 1.1- Start cron_job Function
[2023-06-26 09:03:21] 1.2-request Api_url $api_url
[2023-06-26 09:03:22] 1.3-store events of the jop periodically during process 
[2023-06-26 09:03:22] 1.4- fetch data from Api
[2023-06-26 09:03:22] 1.5- View data that returned from API
[2023-06-26 09:03:22] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:03:22] 1.7- get data of each project to select 
[2023-06-26 09:03:22] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:03:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:03:22] 1.10- check project update number [PUN]if not found
[2023-06-26 09:03:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:03:22] 2.2- check if project update number[pun > 0]
[2023-06-26 09:03:22] 2.3- store data into history table
[2023-06-26 09:03:22] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:24] 3.1- start_process
[2023-06-26 09:03:24] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 09:03:24] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:25] 3.1- start_process
[2023-06-26 09:03:25] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 09:03:25] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:26] 3.1- start_process
[2023-06-26 09:03:26] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 09:03:26] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:27] 3.1- start_process
[2023-06-26 09:03:27] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 09:03:27] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:28] 3.1- start_process
[2023-06-26 09:03:28] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 09:03:28] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:29] 3.1- start_process
[2023-06-26 09:03:29] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 09:03:29] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:30] 3.1- start_process
[2023-06-26 09:03:30] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 09:03:30] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.1- start_process
[2023-06-26 09:03:31] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 09:03:31] 3.3- if aun status > 0 
[2023-06-26 09:03:31] 3.9- Finish cron_job Function
[2023-06-26 09:03:42] 1.1- Start cron_job Function
[2023-06-26 09:03:42] 1.2-request Api_url $api_url
[2023-06-26 09:03:42] 1.3-store events of the jop periodically during process 
[2023-06-26 09:03:42] 1.4- fetch data from Api
[2023-06-26 09:03:42] 1.5- View data that returned from API
[2023-06-26 09:03:42] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:03:42] 1.7- get data of each project to select 
[2023-06-26 09:03:42] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:03:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:03:42] 1.10- check project update number [PUN]if not found
[2023-06-26 09:03:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:03:42] 3.9- Finish cron_job Function
[2023-06-26 09:16:39] 1.1- Start cron_job Function
[2023-06-26 09:16:39] 1.2-request Api_url $api_url
[2023-06-26 09:16:39] 1.3-store events of the jop periodically during process 
[2023-06-26 09:16:39] 1.4- fetch data from Api
[2023-06-26 09:16:39] 1.5- View data that returned from API
[2023-06-26 09:16:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:16:39] 1.7- get data of each project to select 
[2023-06-26 09:16:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:16:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:16:39] 1.10- check project update number [PUN]if not found
[2023-06-26 09:16:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:16:39] 2.2- check if project update number[pun > 0]
[2023-06-26 09:16:39] 2.3- store data into history table
[2023-06-26 09:16:39] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 09:16:42] 2.7-changed the new pun 237 
[2023-06-26 09:16:42] 2.8- register updated_app in event table
[2023-06-26 09:16:42] 2.9- set status {'updated'}
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.5 check  the app have key '.rating.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.version.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '..' if not found 
[2023-06-26 09:16:42] 3.6- Insert  all keys 
[2023-06-26 09:16:42] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.logo.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.link.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.author.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.votes.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.5 check  the app have key '.file.' if not found 
[2023-06-26 09:16:42] 3.7 check if the keys exists, update data
[2023-06-26 09:16:42] 3.8- update all keys & logo & thumbnail 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:42] 3.1- start_process
[2023-06-26 09:16:42] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 09:16:42] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:43] 3.1- start_process
[2023-06-26 09:16:43] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 09:16:43] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:44] 3.1- start_process
[2023-06-26 09:16:44] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 09:16:44] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:45] 3.1- start_process
[2023-06-26 09:16:45] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 09:16:45] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:46] 3.1- start_process
[2023-06-26 09:16:46] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 09:16:46] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:47] 3.1- start_process
[2023-06-26 09:16:47] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 09:16:47] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:48] 3.1- start_process
[2023-06-26 09:16:48] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 09:16:48] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:49] 3.1- start_process
[2023-06-26 09:16:49] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 09:16:49] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.1- start_process
[2023-06-26 09:16:50] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 09:16:50] 3.3- if aun status > 0 
[2023-06-26 09:16:50] 3.9- Finish cron_job Function
[2023-06-26 09:37:33] 1.1- Start cron_job Function
[2023-06-26 09:37:33] 1.2-request Api_url $api_url
[2023-06-26 09:37:33] 1.3-store events of the jop periodically during process 
[2023-06-26 09:37:33] 1.4- fetch data from Api
[2023-06-26 09:37:33] 1.5- View data that returned from API
[2023-06-26 09:37:33] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:37:33] 1.7- get data of each project to select 
[2023-06-26 09:37:33] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:37:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:37:33] 1.10- check project update number [PUN]if not found
[2023-06-26 09:37:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:37:33] 3.9- Finish cron_job Function
[2023-06-26 09:40:14] 1.1- Start cron_job Function
[2023-06-26 09:40:14] 1.2-request Api_url $api_url
[2023-06-26 09:40:15] 1.3-store events of the jop periodically during process 
[2023-06-26 09:40:15] 1.4- fetch data from Api
[2023-06-26 09:40:15] 1.5- View data that returned from API
[2023-06-26 09:40:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:40:15] 1.7- get data of each project to select 
[2023-06-26 09:40:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:40:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:40:15] 1.10- check project update number [PUN]if not found
[2023-06-26 09:40:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:40:15] 3.9- Finish cron_job Function
[2023-06-26 09:40:55] 1.1- Start cron_job Function
[2023-06-26 09:40:55] 1.2-request Api_url $api_url
[2023-06-26 09:40:55] 1.3-store events of the jop periodically during process 
[2023-06-26 09:40:55] 1.4- fetch data from Api
[2023-06-26 09:40:55] 1.5- View data that returned from API
[2023-06-26 09:40:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:40:55] 1.7- get data of each project to select 
[2023-06-26 09:40:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:40:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:40:55] 1.10- check project update number [PUN]if not found
[2023-06-26 09:40:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:40:55] 3.9- Finish cron_job Function
[2023-06-26 09:42:00] 1.1- Start cron_job Function
[2023-06-26 09:42:00] 1.2-request Api_url $api_url
[2023-06-26 09:42:01] 1.3-store events of the jop periodically during process 
[2023-06-26 09:42:01] 1.4- fetch data from Api
[2023-06-26 09:42:01] 1.5- View data that returned from API
[2023-06-26 09:42:01] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:42:01] 1.7- get data of each project to select 
[2023-06-26 09:42:01] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:42:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:42:01] 1.10- check project update number [PUN]if not found
[2023-06-26 09:42:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:42:01] 3.9- Finish cron_job Function
[2023-06-26 09:43:00] 1.1- Start cron_job Function
[2023-06-26 09:43:00] 1.2-request Api_url $api_url
[2023-06-26 09:43:01] 1.3-store events of the jop periodically during process 
[2023-06-26 09:43:01] 1.4- fetch data from Api
[2023-06-26 09:43:01] 1.5- View data that returned from API
[2023-06-26 09:43:01] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:43:01] 1.7- get data of each project to select 
[2023-06-26 09:43:01] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:43:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:43:01] 1.10- check project update number [PUN]if not found
[2023-06-26 09:43:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:43:01] 3.9- Finish cron_job Function
[2023-06-26 09:44:21] 1.1- Start cron_job Function
[2023-06-26 09:44:21] 1.2-request Api_url $api_url
[2023-06-26 09:44:22] 1.3-store events of the jop periodically during process 
[2023-06-26 09:44:22] 1.4- fetch data from Api
[2023-06-26 09:44:22] 1.5- View data that returned from API
[2023-06-26 09:44:22] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:44:22] 1.7- get data of each project to select 
[2023-06-26 09:44:22] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:44:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:44:22] 1.10- check project update number [PUN]if not found
[2023-06-26 09:44:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:44:22] 3.9- Finish cron_job Function
[2023-06-26 09:45:16] 1.1- Start cron_job Function
[2023-06-26 09:45:16] 1.2-request Api_url $api_url
[2023-06-26 09:45:17] 1.3-store events of the jop periodically during process 
[2023-06-26 09:45:17] 1.4- fetch data from Api
[2023-06-26 09:45:17] 1.5- View data that returned from API
[2023-06-26 09:45:17] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:45:17] 1.7- get data of each project to select 
[2023-06-26 09:45:17] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:45:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:45:17] 1.10- check project update number [PUN]if not found
[2023-06-26 09:45:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:45:17] 3.9- Finish cron_job Function
[2023-06-26 09:46:08] 1.1- Start cron_job Function
[2023-06-26 09:46:08] 1.2-request Api_url $api_url
[2023-06-26 09:46:08] 1.3-store events of the jop periodically during process 
[2023-06-26 09:46:08] 1.4- fetch data from Api
[2023-06-26 09:46:08] 1.5- View data that returned from API
[2023-06-26 09:46:08] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:46:08] 1.7- get data of each project to select 
[2023-06-26 09:46:08] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:46:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:46:08] 1.10- check project update number [PUN]if not found
[2023-06-26 09:46:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:46:08] 3.9- Finish cron_job Function
[2023-06-26 09:47:12] 1.1- Start cron_job Function
[2023-06-26 09:47:12] 1.2-request Api_url $api_url
[2023-06-26 09:47:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:47:13] 1.4- fetch data from Api
[2023-06-26 09:47:13] 1.5- View data that returned from API
[2023-06-26 09:47:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:47:13] 1.7- get data of each project to select 
[2023-06-26 09:47:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:47:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:47:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:47:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:47:13] 3.9- Finish cron_job Function
[2023-06-26 09:48:12] 1.1- Start cron_job Function
[2023-06-26 09:48:12] 1.2-request Api_url $api_url
[2023-06-26 09:48:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:48:13] 1.4- fetch data from Api
[2023-06-26 09:48:13] 1.5- View data that returned from API
[2023-06-26 09:48:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:48:13] 1.7- get data of each project to select 
[2023-06-26 09:48:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:48:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:48:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:48:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:48:13] 3.9- Finish cron_job Function
[2023-06-26 09:49:12] 1.1- Start cron_job Function
[2023-06-26 09:49:12] 1.2-request Api_url $api_url
[2023-06-26 09:49:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:49:13] 1.4- fetch data from Api
[2023-06-26 09:49:13] 1.5- View data that returned from API
[2023-06-26 09:49:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:49:13] 1.7- get data of each project to select 
[2023-06-26 09:49:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:49:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:49:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:49:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:49:13] 3.9- Finish cron_job Function
[2023-06-26 09:50:13] 1.1- Start cron_job Function
[2023-06-26 09:50:13] 1.2-request Api_url $api_url
[2023-06-26 09:50:14] 1.3-store events of the jop periodically during process 
[2023-06-26 09:50:14] 1.4- fetch data from Api
[2023-06-26 09:50:14] 1.5- View data that returned from API
[2023-06-26 09:50:14] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:50:14] 1.7- get data of each project to select 
[2023-06-26 09:50:14] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:50:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:50:14] 1.10- check project update number [PUN]if not found
[2023-06-26 09:50:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:50:14] 3.9- Finish cron_job Function
[2023-06-26 09:51:12] 1.1- Start cron_job Function
[2023-06-26 09:51:12] 1.2-request Api_url $api_url
[2023-06-26 09:51:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:51:13] 1.4- fetch data from Api
[2023-06-26 09:51:13] 1.5- View data that returned from API
[2023-06-26 09:51:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:51:13] 1.7- get data of each project to select 
[2023-06-26 09:51:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:51:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:51:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:51:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:51:13] 3.9- Finish cron_job Function
[2023-06-26 09:52:12] 1.1- Start cron_job Function
[2023-06-26 09:52:12] 1.2-request Api_url $api_url
[2023-06-26 09:52:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:52:13] 1.4- fetch data from Api
[2023-06-26 09:52:13] 1.5- View data that returned from API
[2023-06-26 09:52:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:52:13] 1.7- get data of each project to select 
[2023-06-26 09:52:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:52:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:52:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:52:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:52:13] 3.9- Finish cron_job Function
[2023-06-26 09:53:12] 1.1- Start cron_job Function
[2023-06-26 09:53:12] 1.2-request Api_url $api_url
[2023-06-26 09:53:14] 1.3-store events of the jop periodically during process 
[2023-06-26 09:53:14] 1.4- fetch data from Api
[2023-06-26 09:53:14] 1.5- View data that returned from API
[2023-06-26 09:53:14] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:53:14] 1.7- get data of each project to select 
[2023-06-26 09:53:14] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:53:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:53:14] 1.10- check project update number [PUN]if not found
[2023-06-26 09:53:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:53:14] 3.9- Finish cron_job Function
[2023-06-26 09:54:12] 1.1- Start cron_job Function
[2023-06-26 09:54:12] 1.2-request Api_url $api_url
[2023-06-26 09:54:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:54:13] 1.4- fetch data from Api
[2023-06-26 09:54:13] 1.5- View data that returned from API
[2023-06-26 09:54:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:54:13] 1.7- get data of each project to select 
[2023-06-26 09:54:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:54:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:54:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:54:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:54:13] 3.9- Finish cron_job Function
[2023-06-26 09:55:13] 1.1- Start cron_job Function
[2023-06-26 09:55:13] 1.2-request Api_url $api_url
[2023-06-26 09:55:14] 1.3-store events of the jop periodically during process 
[2023-06-26 09:55:14] 1.4- fetch data from Api
[2023-06-26 09:55:14] 1.5- View data that returned from API
[2023-06-26 09:55:14] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:55:14] 1.7- get data of each project to select 
[2023-06-26 09:55:14] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:55:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:55:14] 1.10- check project update number [PUN]if not found
[2023-06-26 09:55:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:55:14] 3.9- Finish cron_job Function
[2023-06-26 09:56:12] 1.1- Start cron_job Function
[2023-06-26 09:56:12] 1.2-request Api_url $api_url
[2023-06-26 09:56:13] 1.3-store events of the jop periodically during process 
[2023-06-26 09:56:13] 1.4- fetch data from Api
[2023-06-26 09:56:13] 1.5- View data that returned from API
[2023-06-26 09:56:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:56:13] 1.7- get data of each project to select 
[2023-06-26 09:56:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:56:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:56:13] 1.10- check project update number [PUN]if not found
[2023-06-26 09:56:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:56:13] 3.9- Finish cron_job Function
[2023-06-26 09:57:13] 1.1- Start cron_job Function
[2023-06-26 09:57:13] 1.2-request Api_url $api_url
[2023-06-26 09:57:14] 1.3-store events of the jop periodically during process 
[2023-06-26 09:57:14] 1.4- fetch data from Api
[2023-06-26 09:57:14] 1.5- View data that returned from API
[2023-06-26 09:57:14] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:57:14] 1.7- get data of each project to select 
[2023-06-26 09:57:14] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:57:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:57:14] 1.10- check project update number [PUN]if not found
[2023-06-26 09:57:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:57:14] 3.9- Finish cron_job Function
[2023-06-26 09:59:14] 1.1- Start cron_job Function
[2023-06-26 09:59:14] 1.2-request Api_url $api_url
[2023-06-26 09:59:15] 1.3-store events of the jop periodically during process 
[2023-06-26 09:59:15] 1.4- fetch data from Api
[2023-06-26 09:59:15] 1.5- View data that returned from API
[2023-06-26 09:59:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 09:59:15] 1.7- get data of each project to select 
[2023-06-26 09:59:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 09:59:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 09:59:15] 1.10- check project update number [PUN]if not found
[2023-06-26 09:59:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 09:59:15] 3.9- Finish cron_job Function
[2023-06-26 10:01:14] 1.1- Start cron_job Function
[2023-06-26 10:01:14] 1.2-request Api_url $api_url
[2023-06-26 10:01:15] 1.3-store events of the jop periodically during process 
[2023-06-26 10:01:15] 1.4- fetch data from Api
[2023-06-26 10:01:15] 1.5- View data that returned from API
[2023-06-26 10:01:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:01:15] 1.7- get data of each project to select 
[2023-06-26 10:01:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:01:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:01:15] 1.10- check project update number [PUN]if not found
[2023-06-26 10:01:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:01:15] 3.9- Finish cron_job Function
[2023-06-26 10:03:15] 1.1- Start cron_job Function
[2023-06-26 10:03:15] 1.2-request Api_url $api_url
[2023-06-26 10:03:16] 1.3-store events of the jop periodically during process 
[2023-06-26 10:03:16] 1.4- fetch data from Api
[2023-06-26 10:03:16] 1.5- View data that returned from API
[2023-06-26 10:03:16] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:03:16] 1.7- get data of each project to select 
[2023-06-26 10:03:16] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:03:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:03:16] 1.10- check project update number [PUN]if not found
[2023-06-26 10:03:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:03:16] 3.9- Finish cron_job Function
[2023-06-26 10:05:14] 1.1- Start cron_job Function
[2023-06-26 10:05:14] 1.2-request Api_url $api_url
[2023-06-26 10:05:14] 1.3-store events of the jop periodically during process 
[2023-06-26 10:05:15] 1.4- fetch data from Api
[2023-06-26 10:05:15] 1.5- View data that returned from API
[2023-06-26 10:05:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:05:15] 1.7- get data of each project to select 
[2023-06-26 10:05:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:05:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:05:15] 1.10- check project update number [PUN]if not found
[2023-06-26 10:05:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:05:15] 3.9- Finish cron_job Function
[2023-06-26 10:07:15] 1.1- Start cron_job Function
[2023-06-26 10:07:15] 1.2-request Api_url $api_url
[2023-06-26 10:07:16] 1.3-store events of the jop periodically during process 
[2023-06-26 10:07:16] 1.4- fetch data from Api
[2023-06-26 10:07:16] 1.5- View data that returned from API
[2023-06-26 10:07:16] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:07:16] 1.7- get data of each project to select 
[2023-06-26 10:07:16] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:07:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:07:16] 1.10- check project update number [PUN]if not found
[2023-06-26 10:07:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:07:16] 3.9- Finish cron_job Function
[2023-06-26 10:09:15] 1.1- Start cron_job Function
[2023-06-26 10:09:15] 1.2-request Api_url $api_url
[2023-06-26 10:09:16] 1.3-store events of the jop periodically during process 
[2023-06-26 10:09:16] 1.4- fetch data from Api
[2023-06-26 10:09:16] 1.5- View data that returned from API
[2023-06-26 10:09:16] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:09:16] 1.7- get data of each project to select 
[2023-06-26 10:09:16] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:09:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:09:16] 1.10- check project update number [PUN]if not found
[2023-06-26 10:09:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:09:16] 3.9- Finish cron_job Function
[2023-06-26 10:11:15] 1.1- Start cron_job Function
[2023-06-26 10:11:15] 1.2-request Api_url $api_url
[2023-06-26 10:11:16] 1.3-store events of the jop periodically during process 
[2023-06-26 10:11:16] 1.4- fetch data from Api
[2023-06-26 10:11:16] 1.5- View data that returned from API
[2023-06-26 10:11:16] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:11:16] 1.7- get data of each project to select 
[2023-06-26 10:11:16] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:11:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:11:16] 1.10- check project update number [PUN]if not found
[2023-06-26 10:11:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:11:16] 3.9- Finish cron_job Function
[2023-06-26 10:12:38] 1.1- Start cron_job Function
[2023-06-26 10:12:38] 1.2-request Api_url $api_url
[2023-06-26 10:12:38] 1.3-store events of the jop periodically during process 
[2023-06-26 10:12:38] 1.4- fetch data from Api
[2023-06-26 10:12:38] 1.5- View data that returned from API
[2023-06-26 10:12:38] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:12:38] 1.7- get data of each project to select 
[2023-06-26 10:12:38] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:12:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:12:38] 1.10- check project update number [PUN]if not found
[2023-06-26 10:12:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:12:38] 3.9- Finish cron_job Function
[2023-06-26 10:13:37] 1.1- Start cron_job Function
[2023-06-26 10:13:37] 1.2-request Api_url $api_url
[2023-06-26 10:13:38] 1.3-store events of the jop periodically during process 
[2023-06-26 10:13:38] 1.4- fetch data from Api
[2023-06-26 10:13:38] 1.5- View data that returned from API
[2023-06-26 10:13:38] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:13:38] 1.7- get data of each project to select 
[2023-06-26 10:13:38] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:13:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:13:38] 1.10- check project update number [PUN]if not found
[2023-06-26 10:13:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:13:38] 3.9- Finish cron_job Function
[2023-06-26 10:15:38] 1.1- Start cron_job Function
[2023-06-26 10:15:38] 1.2-request Api_url $api_url
[2023-06-26 10:15:39] 1.3-store events of the jop periodically during process 
[2023-06-26 10:15:39] 1.4- fetch data from Api
[2023-06-26 10:15:39] 1.5- View data that returned from API
[2023-06-26 10:15:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:15:39] 1.7- get data of each project to select 
[2023-06-26 10:15:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:15:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:15:39] 1.10- check project update number [PUN]if not found
[2023-06-26 10:15:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:15:39] 3.9- Finish cron_job Function
[2023-06-26 10:17:38] 1.1- Start cron_job Function
[2023-06-26 10:17:38] 1.2-request Api_url $api_url
[2023-06-26 10:17:39] 1.3-store events of the jop periodically during process 
[2023-06-26 10:17:39] 1.4- fetch data from Api
[2023-06-26 10:17:39] 1.5- View data that returned from API
[2023-06-26 10:17:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:17:39] 1.7- get data of each project to select 
[2023-06-26 10:17:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:17:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:17:39] 1.10- check project update number [PUN]if not found
[2023-06-26 10:17:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:17:39] 3.9- Finish cron_job Function
[2023-06-26 10:19:38] 1.1- Start cron_job Function
[2023-06-26 10:19:38] 1.2-request Api_url $api_url
[2023-06-26 10:19:39] 1.3-store events of the jop periodically during process 
[2023-06-26 10:19:39] 1.4- fetch data from Api
[2023-06-26 10:19:39] 1.5- View data that returned from API
[2023-06-26 10:19:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:19:39] 1.7- get data of each project to select 
[2023-06-26 10:19:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:19:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:19:39] 1.10- check project update number [PUN]if not found
[2023-06-26 10:19:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:19:39] 3.9- Finish cron_job Function
[2023-06-26 10:21:39] 1.1- Start cron_job Function
[2023-06-26 10:21:39] 1.2-request Api_url $api_url
[2023-06-26 10:21:40] 1.3-store events of the jop periodically during process 
[2023-06-26 10:21:40] 1.4- fetch data from Api
[2023-06-26 10:21:40] 1.5- View data that returned from API
[2023-06-26 10:21:40] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:21:40] 1.7- get data of each project to select 
[2023-06-26 10:21:40] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:21:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:21:40] 1.10- check project update number [PUN]if not found
[2023-06-26 10:21:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:21:40] 3.9- Finish cron_job Function
[2023-06-26 10:23:38] 1.1- Start cron_job Function
[2023-06-26 10:23:38] 1.2-request Api_url $api_url
[2023-06-26 10:23:39] 1.3-store events of the jop periodically during process 
[2023-06-26 10:23:39] 1.4- fetch data from Api
[2023-06-26 10:23:39] 1.5- View data that returned from API
[2023-06-26 10:23:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:23:39] 1.7- get data of each project to select 
[2023-06-26 10:23:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:23:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:23:39] 1.10- check project update number [PUN]if not found
[2023-06-26 10:23:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:23:39] 3.9- Finish cron_job Function
[2023-06-26 10:26:15] 1.1- Start cron_job Function
[2023-06-26 10:26:15] 1.2-request Api_url $api_url
[2023-06-26 10:26:16] 1.3-store events of the jop periodically during process 
[2023-06-26 10:26:16] 1.4- fetch data from Api
[2023-06-26 10:26:16] 1.5- View data that returned from API
[2023-06-26 10:26:16] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:26:16] 1.7- get data of each project to select 
[2023-06-26 10:26:16] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:26:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:26:16] 1.10- check project update number [PUN]if not found
[2023-06-26 10:26:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:26:16] 3.9- Finish cron_job Function
[2023-06-26 10:28:52] 1.1- Start cron_job Function
[2023-06-26 10:28:52] 1.2-request Api_url $api_url
[2023-06-26 10:28:52] 1.3-store events of the jop periodically during process 
[2023-06-26 10:28:52] 1.4- fetch data from Api
[2023-06-26 10:28:52] 1.5- View data that returned from API
[2023-06-26 10:28:52] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:28:52] 1.7- get data of each project to select 
[2023-06-26 10:28:52] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:28:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:28:52] 1.10- check project update number [PUN]if not found
[2023-06-26 10:28:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:28:52] 3.9- Finish cron_job Function
[2023-06-26 10:29:40] 1.1- Start cron_job Function
[2023-06-26 10:29:40] 1.2-request Api_url $api_url
[2023-06-26 10:29:41] 1.3-store events of the jop periodically during process 
[2023-06-26 10:29:41] 1.4- fetch data from Api
[2023-06-26 10:29:41] 1.5- View data that returned from API
[2023-06-26 10:29:41] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:29:41] 1.7- get data of each project to select 
[2023-06-26 10:29:41] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:29:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:29:41] 1.10- check project update number [PUN]if not found
[2023-06-26 10:29:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:29:41] 3.9- Finish cron_job Function
[2023-06-26 10:31:26] 1.1- Start cron_job Function
[2023-06-26 10:31:26] 1.2-request Api_url $api_url
[2023-06-26 10:31:27] 1.3-store events of the jop periodically during process 
[2023-06-26 10:31:27] 1.4- fetch data from Api
[2023-06-26 10:31:27] 1.5- View data that returned from API
[2023-06-26 10:31:27] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:31:27] 1.7- get data of each project to select 
[2023-06-26 10:31:27] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:31:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:31:27] 1.10- check project update number [PUN]if not found
[2023-06-26 10:31:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:31:27] 3.9- Finish cron_job Function
[2023-06-26 10:31:54] 1.1- Start cron_job Function
[2023-06-26 10:31:54] 1.2-request Api_url $api_url
[2023-06-26 10:31:55] 1.3-store events of the jop periodically during process 
[2023-06-26 10:31:55] 1.4- fetch data from Api
[2023-06-26 10:31:55] 1.5- View data that returned from API
[2023-06-26 10:31:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:31:55] 1.7- get data of each project to select 
[2023-06-26 10:31:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:31:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:31:55] 1.10- check project update number [PUN]if not found
[2023-06-26 10:31:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:31:55] 3.9- Finish cron_job Function
[2023-06-26 10:33:54] 1.1- Start cron_job Function
[2023-06-26 10:33:54] 1.2-request Api_url $api_url
[2023-06-26 10:33:55] 1.3-store events of the jop periodically during process 
[2023-06-26 10:33:55] 1.4- fetch data from Api
[2023-06-26 10:33:55] 1.5- View data that returned from API
[2023-06-26 10:33:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:33:55] 1.7- get data of each project to select 
[2023-06-26 10:33:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:33:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:33:55] 1.10- check project update number [PUN]if not found
[2023-06-26 10:33:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:33:55] 3.9- Finish cron_job Function
[2023-06-26 10:35:54] 1.1- Start cron_job Function
[2023-06-26 10:35:54] 1.2-request Api_url $api_url
[2023-06-26 10:35:54] 1.3-store events of the jop periodically during process 
[2023-06-26 10:35:54] 1.4- fetch data from Api
[2023-06-26 10:35:54] 1.5- View data that returned from API
[2023-06-26 10:35:54] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:35:54] 1.7- get data of each project to select 
[2023-06-26 10:35:54] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:35:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:35:54] 1.10- check project update number [PUN]if not found
[2023-06-26 10:35:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:35:54] 3.9- Finish cron_job Function
[2023-06-26 10:36:35] 1.1- Start cron_job Function
[2023-06-26 10:36:35] 1.2-request Api_url $api_url
[2023-06-26 10:36:36] 1.3-store events of the jop periodically during process 
[2023-06-26 10:36:36] 1.4- fetch data from Api
[2023-06-26 10:36:36] 1.5- View data that returned from API
[2023-06-26 10:36:36] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:36:36] 1.7- get data of each project to select 
[2023-06-26 10:36:36] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:36:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:36:36] 1.10- check project update number [PUN]if not found
[2023-06-26 10:36:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:36:36] 3.9- Finish cron_job Function
[2023-06-26 10:37:56] 1.1- Start cron_job Function
[2023-06-26 10:37:56] 1.2-request Api_url $api_url
[2023-06-26 10:37:56] 1.3-store events of the jop periodically during process 
[2023-06-26 10:37:56] 1.4- fetch data from Api
[2023-06-26 10:37:56] 1.5- View data that returned from API
[2023-06-26 10:37:56] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:37:56] 1.7- get data of each project to select 
[2023-06-26 10:37:56] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:37:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:37:56] 1.10- check project update number [PUN]if not found
[2023-06-26 10:37:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:37:56] 3.9- Finish cron_job Function
[2023-06-26 10:38:28] 1.1- Start cron_job Function
[2023-06-26 10:38:28] 1.2-request Api_url $api_url
[2023-06-26 10:38:29] 1.3-store events of the jop periodically during process 
[2023-06-26 10:38:29] 1.4- fetch data from Api
[2023-06-26 10:38:29] 1.5- View data that returned from API
[2023-06-26 10:38:29] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:38:29] 1.7- get data of each project to select 
[2023-06-26 10:38:29] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:38:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:38:29] 1.10- check project update number [PUN]if not found
[2023-06-26 10:38:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:38:29] 3.9- Finish cron_job Function
[2023-06-26 10:42:50] 1.1- Start cron_job Function
[2023-06-26 10:42:50] 1.2-request Api_url $api_url
[2023-06-26 10:42:51] 1.3-store events of the jop periodically during process 
[2023-06-26 10:42:51] 1.4- fetch data from Api
[2023-06-26 10:42:51] 1.5- View data that returned from API
[2023-06-26 10:42:51] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:42:51] 1.7- get data of each project to select 
[2023-06-26 10:42:51] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:42:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:42:51] 1.10- check project update number [PUN]if not found
[2023-06-26 10:42:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:42:51] 3.9- Finish cron_job Function
[2023-06-26 10:44:49] 1.1- Start cron_job Function
[2023-06-26 10:44:49] 1.2-request Api_url $api_url
[2023-06-26 10:44:50] 1.3-store events of the jop periodically during process 
[2023-06-26 10:44:50] 1.4- fetch data from Api
[2023-06-26 10:44:50] 1.5- View data that returned from API
[2023-06-26 10:44:50] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:44:50] 1.7- get data of each project to select 
[2023-06-26 10:44:50] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:44:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:44:50] 1.10- check project update number [PUN]if not found
[2023-06-26 10:44:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:44:50] 3.9- Finish cron_job Function
[2023-06-26 10:45:42] 1.1- Start cron_job Function
[2023-06-26 10:45:42] 1.2-request Api_url $api_url
[2023-06-26 10:45:42] 1.3-store events of the jop periodically during process 
[2023-06-26 10:45:42] 1.4- fetch data from Api
[2023-06-26 10:45:42] 1.5- View data that returned from API
[2023-06-26 10:45:42] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:45:42] 1.7- get data of each project to select 
[2023-06-26 10:45:42] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:45:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:45:42] 1.10- check project update number [PUN]if not found
[2023-06-26 10:45:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:45:42] 3.9- Finish cron_job Function
[2023-06-26 10:46:50] 1.1- Start cron_job Function
[2023-06-26 10:46:50] 1.2-request Api_url $api_url
[2023-06-26 10:46:51] 1.3-store events of the jop periodically during process 
[2023-06-26 10:46:51] 1.4- fetch data from Api
[2023-06-26 10:46:51] 1.5- View data that returned from API
[2023-06-26 10:46:51] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:46:51] 1.7- get data of each project to select 
[2023-06-26 10:46:51] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:46:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:46:51] 1.10- check project update number [PUN]if not found
[2023-06-26 10:46:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:46:51] 3.9- Finish cron_job Function
[2023-06-26 10:48:46] 1.1- Start cron_job Function
[2023-06-26 10:48:46] 1.2-request Api_url $api_url
[2023-06-26 10:48:47] 1.3-store events of the jop periodically during process 
[2023-06-26 10:48:47] 1.4- fetch data from Api
[2023-06-26 10:48:47] 1.5- View data that returned from API
[2023-06-26 10:48:47] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:48:47] 1.7- get data of each project to select 
[2023-06-26 10:48:47] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:48:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:48:47] 1.10- check project update number [PUN]if not found
[2023-06-26 10:48:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:48:47] 3.9- Finish cron_job Function
[2023-06-26 10:49:50] 1.1- Start cron_job Function
[2023-06-26 10:49:50] 1.2-request Api_url $api_url
[2023-06-26 10:49:50] 1.3-store events of the jop periodically during process 
[2023-06-26 10:49:50] 1.4- fetch data from Api
[2023-06-26 10:49:50] 1.5- View data that returned from API
[2023-06-26 10:49:50] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:49:50] 1.7- get data of each project to select 
[2023-06-26 10:49:50] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:49:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:49:50] 1.10- check project update number [PUN]if not found
[2023-06-26 10:49:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:49:50] 3.9- Finish cron_job Function
[2023-06-26 10:51:07] 1.1- Start cron_job Function
[2023-06-26 10:51:07] 1.2-request Api_url $api_url
[2023-06-26 10:51:08] 1.3-store events of the jop periodically during process 
[2023-06-26 10:51:08] 1.4- fetch data from Api
[2023-06-26 10:51:08] 1.5- View data that returned from API
[2023-06-26 10:51:08] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:51:08] 1.7- get data of each project to select 
[2023-06-26 10:51:08] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:51:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:51:08] 1.10- check project update number [PUN]if not found
[2023-06-26 10:51:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:51:08] 3.9- Finish cron_job Function
[2023-06-26 10:52:14] 1.1- Start cron_job Function
[2023-06-26 10:52:14] 1.2-request Api_url $api_url
[2023-06-26 10:52:15] 1.3-store events of the jop periodically during process 
[2023-06-26 10:52:15] 1.4- fetch data from Api
[2023-06-26 10:52:15] 1.5- View data that returned from API
[2023-06-26 10:52:15] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:52:15] 1.7- get data of each project to select 
[2023-06-26 10:52:15] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:52:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:52:15] 1.10- check project update number [PUN]if not found
[2023-06-26 10:52:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:52:15] 3.9- Finish cron_job Function
[2023-06-26 10:53:13] 1.1- Start cron_job Function
[2023-06-26 10:53:13] 1.2-request Api_url $api_url
[2023-06-26 10:53:14] 1.3-store events of the jop periodically during process 
[2023-06-26 10:53:14] 1.4- fetch data from Api
[2023-06-26 10:53:14] 1.5- View data that returned from API
[2023-06-26 10:53:14] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:53:14] 1.7- get data of each project to select 
[2023-06-26 10:53:14] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:53:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:53:14] 1.10- check project update number [PUN]if not found
[2023-06-26 10:53:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:53:14] 3.9- Finish cron_job Function
[2023-06-26 10:54:11] 1.1- Start cron_job Function
[2023-06-26 10:54:11] 1.2-request Api_url $api_url
[2023-06-26 10:54:11] 1.3-store events of the jop periodically during process 
[2023-06-26 10:54:11] 1.4- fetch data from Api
[2023-06-26 10:54:11] 1.5- View data that returned from API
[2023-06-26 10:54:11] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:54:11] 1.7- get data of each project to select 
[2023-06-26 10:54:11] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:54:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:54:11] 1.10- check project update number [PUN]if not found
[2023-06-26 10:54:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:54:11] 3.9- Finish cron_job Function
[2023-06-26 10:55:12] 1.1- Start cron_job Function
[2023-06-26 10:55:12] 1.2-request Api_url $api_url
[2023-06-26 10:55:13] 1.3-store events of the jop periodically during process 
[2023-06-26 10:55:13] 1.4- fetch data from Api
[2023-06-26 10:55:13] 1.5- View data that returned from API
[2023-06-26 10:55:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:55:13] 1.7- get data of each project to select 
[2023-06-26 10:55:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:55:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:55:13] 1.10- check project update number [PUN]if not found
[2023-06-26 10:55:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:55:13] 3.9- Finish cron_job Function
[2023-06-26 10:55:46] 1.1- Start cron_job Function
[2023-06-26 10:55:46] 1.2-request Api_url $api_url
[2023-06-26 10:55:47] 1.3-store events of the jop periodically during process 
[2023-06-26 10:55:47] 1.4- fetch data from Api
[2023-06-26 10:55:47] 1.5- View data that returned from API
[2023-06-26 10:55:47] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:55:47] 1.7- get data of each project to select 
[2023-06-26 10:55:47] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:55:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:55:47] 1.10- check project update number [PUN]if not found
[2023-06-26 10:55:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:55:47] 3.9- Finish cron_job Function
[2023-06-26 10:57:12] 1.1- Start cron_job Function
[2023-06-26 10:57:12] 1.2-request Api_url $api_url
[2023-06-26 10:57:13] 1.3-store events of the jop periodically during process 
[2023-06-26 10:57:13] 1.4- fetch data from Api
[2023-06-26 10:57:13] 1.5- View data that returned from API
[2023-06-26 10:57:13] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:57:13] 1.7- get data of each project to select 
[2023-06-26 10:57:13] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:57:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:57:13] 1.10- check project update number [PUN]if not found
[2023-06-26 10:57:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:57:13] 3.9- Finish cron_job Function
[2023-06-26 10:58:27] 1.1- Start cron_job Function
[2023-06-26 10:58:27] 1.2-request Api_url $api_url
[2023-06-26 10:58:28] 1.3-store events of the jop periodically during process 
[2023-06-26 10:58:28] 1.4- fetch data from Api
[2023-06-26 10:58:28] 1.5- View data that returned from API
[2023-06-26 10:58:28] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:58:28] 1.7- get data of each project to select 
[2023-06-26 10:58:28] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:58:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:58:28] 1.10- check project update number [PUN]if not found
[2023-06-26 10:58:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:58:28] 3.9- Finish cron_job Function
[2023-06-26 10:58:29] 1.1- Start cron_job Function
[2023-06-26 10:58:29] 1.2-request Api_url $api_url
[2023-06-26 10:58:30] 1.3-store events of the jop periodically during process 
[2023-06-26 10:58:30] 1.4- fetch data from Api
[2023-06-26 10:58:30] 1.5- View data that returned from API
[2023-06-26 10:58:30] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:58:30] 1.7- get data of each project to select 
[2023-06-26 10:58:30] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:58:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:58:30] 1.10- check project update number [PUN]if not found
[2023-06-26 10:58:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:58:30] 3.9- Finish cron_job Function
[2023-06-26 10:59:40] 1.1- Start cron_job Function
[2023-06-26 10:59:40] 1.2-request Api_url $api_url
[2023-06-26 10:59:41] 1.3-store events of the jop periodically during process 
[2023-06-26 10:59:41] 1.4- fetch data from Api
[2023-06-26 10:59:41] 1.5- View data that returned from API
[2023-06-26 10:59:41] 1.6- get and View projects & tags that returned from  API
[2023-06-26 10:59:41] 1.7- get data of each project to select 
[2023-06-26 10:59:41] 1.8- The selected project Name:my android. id: 7
[2023-06-26 10:59:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 10:59:41] 1.10- check project update number [PUN]if not found
[2023-06-26 10:59:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 10:59:41] 3.9- Finish cron_job Function
[2023-06-26 11:00:37] 1.1- Start cron_job Function
[2023-06-26 11:00:37] 1.2-request Api_url $api_url
[2023-06-26 11:00:38] 1.3-store events of the jop periodically during process 
[2023-06-26 11:00:38] 1.4- fetch data from Api
[2023-06-26 11:00:38] 1.5- View data that returned from API
[2023-06-26 11:00:38] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:00:38] 1.7- get data of each project to select 
[2023-06-26 11:00:38] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:00:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:00:38] 1.10- check project update number [PUN]if not found
[2023-06-26 11:00:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:00:38] 3.9- Finish cron_job Function
[2023-06-26 11:01:46] 1.1- Start cron_job Function
[2023-06-26 11:01:46] 1.2-request Api_url $api_url
[2023-06-26 11:01:47] 1.3-store events of the jop periodically during process 
[2023-06-26 11:01:47] 1.4- fetch data from Api
[2023-06-26 11:01:47] 1.5- View data that returned from API
[2023-06-26 11:01:47] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:01:47] 1.7- get data of each project to select 
[2023-06-26 11:01:47] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:01:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:01:47] 1.10- check project update number [PUN]if not found
[2023-06-26 11:01:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:01:47] 3.9- Finish cron_job Function
[2023-06-26 11:07:02] 1.1- Start cron_job Function
[2023-06-26 11:07:02] 1.2-request Api_url $api_url
[2023-06-26 11:07:02] 1.3-store events of the jop periodically during process 
[2023-06-26 11:07:02] 1.4- fetch data from Api
[2023-06-26 11:07:02] 1.5- View data that returned from API
[2023-06-26 11:07:02] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:07:02] 1.7- get data of each project to select 
[2023-06-26 11:07:02] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:07:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:07:02] 1.10- check project update number [PUN]if not found
[2023-06-26 11:07:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:07:02] 3.9- Finish cron_job Function
[2023-06-26 11:11:22] 1.1- Start cron_job Function
[2023-06-26 11:11:22] 1.2-request Api_url $api_url
[2023-06-26 11:11:23] 1.3-store events of the jop periodically during process 
[2023-06-26 11:11:23] 1.4- fetch data from Api
[2023-06-26 11:11:23] 1.5- View data that returned from API
[2023-06-26 11:11:23] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:11:23] 1.7- get data of each project to select 
[2023-06-26 11:11:23] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:11:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:11:23] 1.10- check project update number [PUN]if not found
[2023-06-26 11:11:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:11:23] 3.9- Finish cron_job Function
[2023-06-26 11:11:30] 1.1- Start cron_job Function
[2023-06-26 11:11:30] 1.2-request Api_url $api_url
[2023-06-26 11:11:31] 1.3-store events of the jop periodically during process 
[2023-06-26 11:11:31] 1.4- fetch data from Api
[2023-06-26 11:11:31] 1.5- View data that returned from API
[2023-06-26 11:11:31] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:11:31] 1.7- get data of each project to select 
[2023-06-26 11:11:31] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:11:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:11:31] 1.10- check project update number [PUN]if not found
[2023-06-26 11:11:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:11:31] 3.9- Finish cron_job Function
[2023-06-26 11:12:42] 1.1- Start cron_job Function
[2023-06-26 11:12:42] 1.2-request Api_url $api_url
[2023-06-26 11:12:43] 1.3-store events of the jop periodically during process 
[2023-06-26 11:12:43] 1.4- fetch data from Api
[2023-06-26 11:12:43] 1.5- View data that returned from API
[2023-06-26 11:12:43] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:12:43] 1.7- get data of each project to select 
[2023-06-26 11:12:43] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:12:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:12:43] 1.10- check project update number [PUN]if not found
[2023-06-26 11:12:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:12:43] 3.9- Finish cron_job Function
[2023-06-26 11:13:38] 1.1- Start cron_job Function
[2023-06-26 11:13:38] 1.2-request Api_url $api_url
[2023-06-26 11:13:39] 1.3-store events of the jop periodically during process 
[2023-06-26 11:13:39] 1.4- fetch data from Api
[2023-06-26 11:13:39] 1.5- View data that returned from API
[2023-06-26 11:13:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:13:39] 1.7- get data of each project to select 
[2023-06-26 11:13:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:13:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:13:39] 1.10- check project update number [PUN]if not found
[2023-06-26 11:13:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:13:39] 3.9- Finish cron_job Function
[2023-06-26 11:14:54] 1.1- Start cron_job Function
[2023-06-26 11:14:54] 1.2-request Api_url $api_url
[2023-06-26 11:14:55] 1.3-store events of the jop periodically during process 
[2023-06-26 11:14:55] 1.4- fetch data from Api
[2023-06-26 11:14:55] 1.5- View data that returned from API
[2023-06-26 11:14:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:14:55] 1.7- get data of each project to select 
[2023-06-26 11:14:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:14:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:14:55] 1.10- check project update number [PUN]if not found
[2023-06-26 11:14:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:14:55] 3.9- Finish cron_job Function
[2023-06-26 11:16:22] 1.1- Start cron_job Function
[2023-06-26 11:16:22] 1.2-request Api_url $api_url
[2023-06-26 11:16:23] 1.3-store events of the jop periodically during process 
[2023-06-26 11:16:23] 1.4- fetch data from Api
[2023-06-26 11:16:23] 1.5- View data that returned from API
[2023-06-26 11:16:23] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:16:23] 1.7- get data of each project to select 
[2023-06-26 11:16:23] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:16:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:16:23] 1.10- check project update number [PUN]if not found
[2023-06-26 11:16:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:16:23] 3.9- Finish cron_job Function
[2023-06-26 11:18:22] 1.1- Start cron_job Function
[2023-06-26 11:18:22] 1.2-request Api_url $api_url
[2023-06-26 11:18:23] 1.3-store events of the jop periodically during process 
[2023-06-26 11:18:23] 1.4- fetch data from Api
[2023-06-26 11:18:23] 1.5- View data that returned from API
[2023-06-26 11:18:23] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:18:23] 1.7- get data of each project to select 
[2023-06-26 11:18:23] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:18:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:18:23] 1.10- check project update number [PUN]if not found
[2023-06-26 11:18:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:18:23] 3.9- Finish cron_job Function
[2023-06-26 11:20:22] 1.1- Start cron_job Function
[2023-06-26 11:20:22] 1.2-request Api_url $api_url
[2023-06-26 11:20:23] 1.3-store events of the jop periodically during process 
[2023-06-26 11:20:23] 1.4- fetch data from Api
[2023-06-26 11:20:23] 1.5- View data that returned from API
[2023-06-26 11:20:23] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:20:23] 1.7- get data of each project to select 
[2023-06-26 11:20:23] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:20:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:20:23] 1.10- check project update number [PUN]if not found
[2023-06-26 11:20:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:20:23] 3.9- Finish cron_job Function
[2023-06-26 11:20:47] 1.1- Start cron_job Function
[2023-06-26 11:20:47] 1.2-request Api_url $api_url
[2023-06-26 11:20:48] 1.3-store events of the jop periodically during process 
[2023-06-26 11:20:48] 1.4- fetch data from Api
[2023-06-26 11:20:48] 1.5- View data that returned from API
[2023-06-26 11:20:48] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:20:48] 1.7- get data of each project to select 
[2023-06-26 11:20:48] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:20:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:20:48] 1.10- check project update number [PUN]if not found
[2023-06-26 11:20:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:20:48] 3.9- Finish cron_job Function
[2023-06-26 11:22:23] 1.1- Start cron_job Function
[2023-06-26 11:22:23] 1.2-request Api_url $api_url
[2023-06-26 11:22:23] 1.3-store events of the jop periodically during process 
[2023-06-26 11:22:23] 1.4- fetch data from Api
[2023-06-26 11:22:23] 1.5- View data that returned from API
[2023-06-26 11:22:23] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:22:23] 1.7- get data of each project to select 
[2023-06-26 11:22:23] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:22:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:22:23] 1.10- check project update number [PUN]if not found
[2023-06-26 11:22:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:22:23] 3.9- Finish cron_job Function
[2023-06-26 11:24:38] 1.1- Start cron_job Function
[2023-06-26 11:24:38] 1.2-request Api_url $api_url
[2023-06-26 11:24:39] 1.3-store events of the jop periodically during process 
[2023-06-26 11:24:39] 1.4- fetch data from Api
[2023-06-26 11:24:39] 1.5- View data that returned from API
[2023-06-26 11:24:39] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:24:39] 1.7- get data of each project to select 
[2023-06-26 11:24:39] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:24:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:24:39] 1.10- check project update number [PUN]if not found
[2023-06-26 11:24:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:24:39] 3.9- Finish cron_job Function
[2023-06-26 11:25:29] 1.1- Start cron_job Function
[2023-06-26 11:25:29] 1.2-request Api_url $api_url
[2023-06-26 11:25:30] 1.3-store events of the jop periodically during process 
[2023-06-26 11:25:30] 1.4- fetch data from Api
[2023-06-26 11:25:30] 1.5- View data that returned from API
[2023-06-26 11:25:30] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:25:30] 1.7- get data of each project to select 
[2023-06-26 11:25:30] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:25:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:25:30] 1.10- check project update number [PUN]if not found
[2023-06-26 11:25:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:25:30] 3.9- Finish cron_job Function
[2023-06-26 11:26:32] 1.1- Start cron_job Function
[2023-06-26 11:26:32] 1.2-request Api_url $api_url
[2023-06-26 11:26:32] 1.3-store events of the jop periodically during process 
[2023-06-26 11:26:32] 1.4- fetch data from Api
[2023-06-26 11:26:32] 1.5- View data that returned from API
[2023-06-26 11:26:32] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:26:32] 1.7- get data of each project to select 
[2023-06-26 11:26:32] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:26:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:26:32] 1.10- check project update number [PUN]if not found
[2023-06-26 11:26:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:26:32] 3.9- Finish cron_job Function
[2023-06-26 11:28:51] 1.1- Start cron_job Function
[2023-06-26 11:28:51] 1.2-request Api_url $api_url
[2023-06-26 11:28:52] 1.3-store events of the jop periodically during process 
[2023-06-26 11:28:52] 1.4- fetch data from Api
[2023-06-26 11:28:52] 1.5- View data that returned from API
[2023-06-26 11:28:52] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:28:52] 1.7- get data of each project to select 
[2023-06-26 11:28:52] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:28:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:28:52] 1.10- check project update number [PUN]if not found
[2023-06-26 11:28:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:28:52] 3.9- Finish cron_job Function
[2023-06-26 11:30:52] 1.1- Start cron_job Function
[2023-06-26 11:30:52] 1.2-request Api_url $api_url
[2023-06-26 11:30:53] 1.3-store events of the jop periodically during process 
[2023-06-26 11:30:53] 1.4- fetch data from Api
[2023-06-26 11:30:53] 1.5- View data that returned from API
[2023-06-26 11:30:53] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:30:53] 1.7- get data of each project to select 
[2023-06-26 11:30:53] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:30:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:30:53] 1.10- check project update number [PUN]if not found
[2023-06-26 11:30:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:30:53] 3.9- Finish cron_job Function
[2023-06-26 11:32:52] 1.1- Start cron_job Function
[2023-06-26 11:32:52] 1.2-request Api_url $api_url
[2023-06-26 11:32:53] 1.3-store events of the jop periodically during process 
[2023-06-26 11:32:53] 1.4- fetch data from Api
[2023-06-26 11:32:53] 1.5- View data that returned from API
[2023-06-26 11:32:53] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:32:53] 1.7- get data of each project to select 
[2023-06-26 11:32:53] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:32:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:32:53] 1.10- check project update number [PUN]if not found
[2023-06-26 11:32:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:32:53] 3.9- Finish cron_job Function
[2023-06-26 11:34:53] 1.1- Start cron_job Function
[2023-06-26 11:34:53] 1.2-request Api_url $api_url
[2023-06-26 11:34:53] 1.3-store events of the jop periodically during process 
[2023-06-26 11:34:53] 1.4- fetch data from Api
[2023-06-26 11:34:53] 1.5- View data that returned from API
[2023-06-26 11:34:53] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:34:53] 1.7- get data of each project to select 
[2023-06-26 11:34:53] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:34:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:34:53] 1.10- check project update number [PUN]if not found
[2023-06-26 11:34:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:34:53] 3.9- Finish cron_job Function
[2023-06-26 11:36:54] 1.1- Start cron_job Function
[2023-06-26 11:36:54] 1.2-request Api_url $api_url
[2023-06-26 11:36:55] 1.3-store events of the jop periodically during process 
[2023-06-26 11:36:55] 1.4- fetch data from Api
[2023-06-26 11:36:55] 1.5- View data that returned from API
[2023-06-26 11:36:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:36:55] 1.7- get data of each project to select 
[2023-06-26 11:36:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:36:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:36:55] 1.10- check project update number [PUN]if not found
[2023-06-26 11:36:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:36:55] 3.9- Finish cron_job Function
[2023-06-26 11:38:54] 1.1- Start cron_job Function
[2023-06-26 11:38:54] 1.2-request Api_url $api_url
[2023-06-26 11:38:55] 1.3-store events of the jop periodically during process 
[2023-06-26 11:38:55] 1.4- fetch data from Api
[2023-06-26 11:38:55] 1.5- View data that returned from API
[2023-06-26 11:38:55] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:38:55] 1.7- get data of each project to select 
[2023-06-26 11:38:55] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:38:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:38:55] 1.10- check project update number [PUN]if not found
[2023-06-26 11:38:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:38:55] 3.9- Finish cron_job Function
[2023-06-26 11:40:56] 1.1- Start cron_job Function
[2023-06-26 11:40:56] 1.2-request Api_url $api_url
[2023-06-26 11:40:57] 1.3-store events of the jop periodically during process 
[2023-06-26 11:40:57] 1.4- fetch data from Api
[2023-06-26 11:40:57] 1.5- View data that returned from API
[2023-06-26 11:40:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:40:57] 1.7- get data of each project to select 
[2023-06-26 11:40:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:40:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:40:57] 1.10- check project update number [PUN]if not found
[2023-06-26 11:40:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:40:57] 3.9- Finish cron_job Function
[2023-06-26 11:42:56] 1.1- Start cron_job Function
[2023-06-26 11:42:56] 1.2-request Api_url $api_url
[2023-06-26 11:42:56] 1.3-store events of the jop periodically during process 
[2023-06-26 11:42:56] 1.4- fetch data from Api
[2023-06-26 11:42:56] 1.5- View data that returned from API
[2023-06-26 11:42:56] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:42:56] 1.7- get data of each project to select 
[2023-06-26 11:42:56] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:42:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:42:56] 1.10- check project update number [PUN]if not found
[2023-06-26 11:42:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:42:56] 3.9- Finish cron_job Function
[2023-06-26 11:44:55] 1.1- Start cron_job Function
[2023-06-26 11:44:55] 1.2-request Api_url $api_url
[2023-06-26 11:44:56] 1.3-store events of the jop periodically during process 
[2023-06-26 11:44:56] 1.4- fetch data from Api
[2023-06-26 11:44:56] 1.5- View data that returned from API
[2023-06-26 11:44:56] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:44:56] 1.7- get data of each project to select 
[2023-06-26 11:44:56] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:44:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:44:56] 1.10- check project update number [PUN]if not found
[2023-06-26 11:44:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:44:56] 3.9- Finish cron_job Function
[2023-06-26 11:46:55] 1.1- Start cron_job Function
[2023-06-26 11:46:55] 1.2-request Api_url $api_url
[2023-06-26 11:46:57] 1.3-store events of the jop periodically during process 
[2023-06-26 11:46:57] 1.4- fetch data from Api
[2023-06-26 11:46:57] 1.5- View data that returned from API
[2023-06-26 11:46:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:46:57] 1.7- get data of each project to select 
[2023-06-26 11:46:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:46:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:46:57] 1.10- check project update number [PUN]if not found
[2023-06-26 11:46:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:46:57] 3.9- Finish cron_job Function
[2023-06-26 11:48:55] 1.1- Start cron_job Function
[2023-06-26 11:48:55] 1.2-request Api_url $api_url
[2023-06-26 11:48:56] 1.3-store events of the jop periodically during process 
[2023-06-26 11:48:56] 1.4- fetch data from Api
[2023-06-26 11:48:56] 1.5- View data that returned from API
[2023-06-26 11:48:56] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:48:56] 1.7- get data of each project to select 
[2023-06-26 11:48:56] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:48:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:48:56] 1.10- check project update number [PUN]if not found
[2023-06-26 11:48:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:48:56] 3.9- Finish cron_job Function
[2023-06-26 11:49:34] 1.1- Start cron_job Function
[2023-06-26 11:49:34] 1.2-request Api_url $api_url
[2023-06-26 11:49:34] 1.3-store events of the jop periodically during process 
[2023-06-26 11:49:34] 1.4- fetch data from Api
[2023-06-26 11:49:34] 1.5- View data that returned from API
[2023-06-26 11:49:34] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:49:34] 1.7- get data of each project to select 
[2023-06-26 11:49:34] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:49:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:49:34] 1.10- check project update number [PUN]if not found
[2023-06-26 11:49:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:49:34] 3.9- Finish cron_job Function
[2023-06-26 11:50:56] 1.1- Start cron_job Function
[2023-06-26 11:50:56] 1.2-request Api_url $api_url
[2023-06-26 11:50:57] 1.3-store events of the jop periodically during process 
[2023-06-26 11:50:57] 1.4- fetch data from Api
[2023-06-26 11:50:57] 1.5- View data that returned from API
[2023-06-26 11:50:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:50:57] 1.7- get data of each project to select 
[2023-06-26 11:50:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:50:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:50:57] 1.10- check project update number [PUN]if not found
[2023-06-26 11:50:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:50:57] 2.2- check if project update number[pun > 0]
[2023-06-26 11:50:57] 2.3- store data into history table
[2023-06-26 11:50:57] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 11:50:59] 2.7-changed the new pun 238 
[2023-06-26 11:50:59] 2.8- register updated_app in event table
[2023-06-26 11:50:59] 2.9- set status {'updated'}
[2023-06-26 11:50:59] 3.1- start_process
[2023-06-26 11:50:59] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 11:50:59] 3.3- if aun status > 0 
[2023-06-26 11:50:59] 3.5 check  the app have key '.rating.' if not found 
[2023-06-26 11:50:59] 3.7 check if the keys exists, update data
[2023-06-26 11:50:59] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:50:59] 3.5 check  the app have key '.version.' if not found 
[2023-06-26 11:50:59] 3.7 check if the keys exists, update data
[2023-06-26 11:50:59] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:50:59] 3.5 check  the app have key '..' if not found 
[2023-06-26 11:50:59] 3.6- Insert  all keys 
[2023-06-26 11:50:59] 3.5 check  the app have key '.app_name.' if not found 
[2023-06-26 11:50:59] 3.7 check if the keys exists, update data
[2023-06-26 11:50:59] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:50:59] 3.5 check  the app have key '.logo.' if not found 
[2023-06-26 11:50:59] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.link.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.author.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.author_link.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.screenshots.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.votes.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.5 check  the app have key '.file.' if not found 
[2023-06-26 11:51:00] 3.7 check if the keys exists, update data
[2023-06-26 11:51:00] 3.8- update all keys & logo & thumbnail 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:00] 3.1- start_process
[2023-06-26 11:51:00] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 11:51:00] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:01] 3.1- start_process
[2023-06-26 11:51:01] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 11:51:01] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:02] 3.1- start_process
[2023-06-26 11:51:02] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 11:51:02] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:03] 3.1- start_process
[2023-06-26 11:51:03] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 11:51:03] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:04] 3.1- start_process
[2023-06-26 11:51:04] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 11:51:04] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:05] 3.1- start_process
[2023-06-26 11:51:05] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 11:51:05] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:06] 3.1- start_process
[2023-06-26 11:51:06] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 11:51:06] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:07] 3.1- start_process
[2023-06-26 11:51:07] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 11:51:07] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.1- start_process
[2023-06-26 11:51:08] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 11:51:08] 3.3- if aun status > 0 
[2023-06-26 11:51:08] 3.9- Finish cron_job Function
[2023-06-26 11:51:56] 1.1- Start cron_job Function
[2023-06-26 11:51:56] 1.2-request Api_url $api_url
[2023-06-26 11:51:57] 1.3-store events of the jop periodically during process 
[2023-06-26 11:51:57] 1.4- fetch data from Api
[2023-06-26 11:51:57] 1.5- View data that returned from API
[2023-06-26 11:51:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:51:57] 1.7- get data of each project to select 
[2023-06-26 11:51:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:51:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:51:57] 1.10- check project update number [PUN]if not found
[2023-06-26 11:51:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:51:57] 3.9- Finish cron_job Function
[2023-06-26 11:52:56] 1.1- Start cron_job Function
[2023-06-26 11:52:56] 1.2-request Api_url $api_url
[2023-06-26 11:52:57] 1.3-store events of the jop periodically during process 
[2023-06-26 11:52:57] 1.4- fetch data from Api
[2023-06-26 11:52:57] 1.5- View data that returned from API
[2023-06-26 11:52:57] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:52:57] 1.7- get data of each project to select 
[2023-06-26 11:52:57] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:52:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:52:57] 1.10- check project update number [PUN]if not found
[2023-06-26 11:52:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:52:57] 3.9- Finish cron_job Function
[2023-06-26 11:53:46] 1.1- Start cron_job Function
[2023-06-26 11:53:46] 1.2-request Api_url $api_url
[2023-06-26 11:53:47] 1.3-store events of the jop periodically during process 
[2023-06-26 11:53:47] 1.4- fetch data from Api
[2023-06-26 11:53:47] 1.5- View data that returned from API
[2023-06-26 11:53:47] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:53:47] 1.7- get data of each project to select 
[2023-06-26 11:53:47] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:53:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:53:47] 1.10- check project update number [PUN]if not found
[2023-06-26 11:53:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:53:47] 3.9- Finish cron_job Function
[2023-06-26 11:54:51] 1.1- Start cron_job Function
[2023-06-26 11:54:51] 1.2-request Api_url $api_url
[2023-06-26 11:54:52] 1.3-store events of the jop periodically during process 
[2023-06-26 11:54:52] 1.4- fetch data from Api
[2023-06-26 11:54:52] 1.5- View data that returned from API
[2023-06-26 11:54:52] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:54:52] 1.7- get data of each project to select 
[2023-06-26 11:54:52] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:54:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:54:52] 1.10- check project update number [PUN]if not found
[2023-06-26 11:54:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:54:52] 3.9- Finish cron_job Function
[2023-06-26 11:55:58] 1.1- Start cron_job Function
[2023-06-26 11:55:58] 1.2-request Api_url $api_url
[2023-06-26 11:55:59] 1.3-store events of the jop periodically during process 
[2023-06-26 11:55:59] 1.4- fetch data from Api
[2023-06-26 11:55:59] 1.5- View data that returned from API
[2023-06-26 11:55:59] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:55:59] 1.7- get data of each project to select 
[2023-06-26 11:55:59] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:55:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:55:59] 1.10- check project update number [PUN]if not found
[2023-06-26 11:55:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:55:59] 3.9- Finish cron_job Function
[2023-06-26 11:56:49] 1.1- Start cron_job Function
[2023-06-26 11:56:49] 1.2-request Api_url $api_url
[2023-06-26 11:56:50] 1.3-store events of the jop periodically during process 
[2023-06-26 11:56:50] 1.4- fetch data from Api
[2023-06-26 11:56:50] 1.5- View data that returned from API
[2023-06-26 11:56:50] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:56:50] 1.7- get data of each project to select 
[2023-06-26 11:56:50] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:56:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:56:50] 1.10- check project update number [PUN]if not found
[2023-06-26 11:56:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:56:50] 3.9- Finish cron_job Function
[2023-06-26 11:57:29] 1.1- Start cron_job Function
[2023-06-26 11:57:29] 1.2-request Api_url $api_url
[2023-06-26 11:57:30] 1.3-store events of the jop periodically during process 
[2023-06-26 11:57:30] 1.4- fetch data from Api
[2023-06-26 11:57:30] 1.5- View data that returned from API
[2023-06-26 11:57:30] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:57:30] 1.7- get data of each project to select 
[2023-06-26 11:57:30] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:57:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:57:30] 1.10- check project update number [PUN]if not found
[2023-06-26 11:57:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:57:30] 3.9- Finish cron_job Function
[2023-06-26 11:58:29] 1.1- Start cron_job Function
[2023-06-26 11:58:29] 1.2-request Api_url $api_url
[2023-06-26 11:58:29] 1.3-store events of the jop periodically during process 
[2023-06-26 11:58:29] 1.4- fetch data from Api
[2023-06-26 11:58:29] 1.5- View data that returned from API
[2023-06-26 11:58:29] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:58:29] 1.7- get data of each project to select 
[2023-06-26 11:58:29] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:58:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:58:29] 1.10- check project update number [PUN]if not found
[2023-06-26 11:58:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:58:29] 3.9- Finish cron_job Function
[2023-06-26 11:59:30] 1.1- Start cron_job Function
[2023-06-26 11:59:30] 1.2-request Api_url $api_url
[2023-06-26 11:59:31] 1.3-store events of the jop periodically during process 
[2023-06-26 11:59:31] 1.4- fetch data from Api
[2023-06-26 11:59:31] 1.5- View data that returned from API
[2023-06-26 11:59:31] 1.6- get and View projects & tags that returned from  API
[2023-06-26 11:59:31] 1.7- get data of each project to select 
[2023-06-26 11:59:31] 1.8- The selected project Name:my android. id: 7
[2023-06-26 11:59:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 11:59:31] 1.10- check project update number [PUN]if not found
[2023-06-26 11:59:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 11:59:31] 3.9- Finish cron_job Function
[2023-06-26 12:02:10] 1.1- Start cron_job Function
[2023-06-26 12:02:10] 1.2-request Api_url $api_url
[2023-06-26 12:02:11] 1.3-store events of the jop periodically during process 
[2023-06-26 12:02:11] 1.4- fetch data from Api
[2023-06-26 12:02:11] 1.5- View data that returned from API
[2023-06-26 12:02:11] 1.6- get and View projects & tags that returned from  API
[2023-06-26 12:02:11] 1.7- get data of each project to select 
[2023-06-26 12:02:11] 1.8- The selected project Name:my android. id: 7
[2023-06-26 12:02:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 12:02:11] 1.10- check project update number [PUN]if not found
[2023-06-26 12:02:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 12:02:11] 2.2- check if project update number[pun > 0]
[2023-06-26 12:02:11] 2.3- store data into history table
[2023-06-26 12:02:11] 2.4- get all project name: 7 & all tag : 0 from table
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [1]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [2]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [3]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [4]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [5]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [6]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [7]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [8]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [9]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:12] 3.1- start_process
[2023-06-26 12:02:12] 3.2- get last aun and last meta_app_post for app [10]
[2023-06-26 12:02:12] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [11]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [12]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [13]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [14]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [15]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [16]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [17]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [18]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [19]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:13] 3.1- start_process
[2023-06-26 12:02:13] 3.2- get last aun and last meta_app_post for app [20]
[2023-06-26 12:02:13] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [21]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [22]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [23]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [24]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [25]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [26]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [27]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [28]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [29]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:14] 3.1- start_process
[2023-06-26 12:02:14] 3.2- get last aun and last meta_app_post for app [30]
[2023-06-26 12:02:14] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [31]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [32]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [33]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [34]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [35]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [36]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [37]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [38]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [39]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:15] 3.1- start_process
[2023-06-26 12:02:15] 3.2- get last aun and last meta_app_post for app [40]
[2023-06-26 12:02:15] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [41]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [42]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [43]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [44]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [45]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [46]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [47]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [48]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [49]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:16] 3.1- start_process
[2023-06-26 12:02:16] 3.2- get last aun and last meta_app_post for app [50]
[2023-06-26 12:02:16] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [51]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [52]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [53]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [54]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [55]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [56]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [57]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [58]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [59]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:17] 3.1- start_process
[2023-06-26 12:02:17] 3.2- get last aun and last meta_app_post for app [60]
[2023-06-26 12:02:17] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [61]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [62]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [63]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [64]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [65]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [66]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [67]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [68]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [69]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [70]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [71]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [72]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [73]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [74]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [75]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [76]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [77]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [78]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [79]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:18] 3.1- start_process
[2023-06-26 12:02:18] 3.2- get last aun and last meta_app_post for app [80]
[2023-06-26 12:02:18] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [81]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [82]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [83]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [84]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [85]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [86]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [87]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [88]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [89]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.1- start_process
[2023-06-26 12:02:19] 3.2- get last aun and last meta_app_post for app [90]
[2023-06-26 12:02:19] 3.3- if aun status > 0 
[2023-06-26 12:02:19] 3.9- Finish cron_job Function
[2023-06-26 12:03:58] 1.1- Start cron_job Function
[2023-06-26 12:03:58] 1.2-request Api_url $api_url
[2023-06-26 12:03:58] 1.3-store events of the jop periodically during process 
[2023-06-26 12:03:58] 1.4- fetch data from Api
[2023-06-26 12:03:58] 1.5- View data that returned from API
[2023-06-26 12:03:58] 1.6- get and View projects & tags that returned from  API
[2023-06-26 12:03:58] 1.7- get data of each project to select 
[2023-06-26 12:03:58] 1.8- The selected project Name:my android. id: 7
[2023-06-26 12:03:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 12:03:58] 1.10- check project update number [PUN]if not found
[2023-06-26 12:03:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 12:03:58] 3.9- Finish cron_job Function
[2023-06-26 12:42:59] 1.1- Start cron_job Function
[2023-06-26 12:42:59] 1.2-request Api_url $api_url
[2023-06-26 12:43:00] 1.3-store events of the jop periodically during process 
[2023-06-26 12:43:00] 1.4- fetch data from Api
[2023-06-26 12:43:00] 1.5- View data that returned from API
[2023-06-26 12:43:00] 1.6- get and View projects & tags that returned from  API
[2023-06-26 12:43:00] 1.7- get data of each project to select 
[2023-06-26 12:43:00] 1.8- The selected project Name:my android. id: 7
[2023-06-26 12:43:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-06-26 12:43:00] 1.10- check project update number [PUN]if not found
[2023-06-26 12:43:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-06-26 12:43:00] 3.9- Finish cron_job Function
[2023-07-02 05:10:18] 1.1- Start cron_job Function
[2023-07-02 05:10:18] 1.2-request Api_url $api_url
[2023-07-02 05:10:18] 1.3-store events of the jop periodically during process 
[2023-07-02 05:10:19] 1.4- fetch data from Api
[2023-07-02 05:10:19] 1.5- View data that returned from API
[2023-07-02 05:10:19] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:10:19] 1.7- get data of each project to select 
[2023-07-02 05:10:19] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:10:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:10:19] 1.10- check project update number [PUN]if not found
[2023-07-02 05:10:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:10:19] 2.2- check if project update number[pun > 0]
[2023-07-02 05:10:19] 2.3- store data into history table
[2023-07-02 05:10:19] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 05:10:21] 2.7-changed the new pun 289 
[2023-07-02 05:10:21] 2.8- register updated_app in event table
[2023-07-02 05:10:21] 2.9- set status {'updated'}
[2023-07-02 05:10:21] 3.1- start_process
[2023-07-02 05:10:21] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 05:10:21] 3.3- if aun status > 0 
[2023-07-02 05:10:21] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 05:10:21] 3.7 check if the keys exists, update data
[2023-07-02 05:10:21] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:21] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 05:10:21] 3.7 check if the keys exists, update data
[2023-07-02 05:10:21] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:21] 3.5 check  the app have key '..' if not found 
[2023-07-02 05:10:21] 3.6- Insert  all keys 
[2023-07-02 05:10:21] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 05:10:21] 3.7 check if the keys exists, update data
[2023-07-02 05:10:21] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:21] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 05:10:21] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.5 check  the app have key '.file.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:22] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 2.7-changed the new pun 26 
[2023-07-02 05:10:22] 2.8- register updated_app in event table
[2023-07-02 05:10:22] 2.9- set status {'updated'}
[2023-07-02 05:10:22] 3.1- start_process
[2023-07-02 05:10:22] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 05:10:22] 3.3- if aun status > 0 
[2023-07-02 05:10:22] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 05:10:22] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.price.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.5 check  the app have key '..' if not found 
[2023-07-02 05:10:23] 3.6- Insert  all keys 
[2023-07-02 05:10:23] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 05:10:23] 3.7 check if the keys exists, update data
[2023-07-02 05:10:23] 3.8- update all keys & logo & thumbnail 
[2023-07-02 05:10:23] 3.1- start_process
[2023-07-02 05:10:23] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 05:10:23] 3.3- if aun status > 0 
[2023-07-02 05:10:23] 3.1- start_process
[2023-07-02 05:10:23] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 05:10:23] 3.3- if aun status > 0 
[2023-07-02 05:10:23] 3.1- start_process
[2023-07-02 05:10:23] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 05:10:23] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:24] 3.1- start_process
[2023-07-02 05:10:24] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 05:10:24] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:25] 3.1- start_process
[2023-07-02 05:10:25] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 05:10:25] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:26] 3.1- start_process
[2023-07-02 05:10:26] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 05:10:26] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:27] 3.1- start_process
[2023-07-02 05:10:27] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 05:10:27] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:28] 3.1- start_process
[2023-07-02 05:10:28] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 05:10:28] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:29] 3.1- start_process
[2023-07-02 05:10:29] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 05:10:29] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.1- start_process
[2023-07-02 05:10:30] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 05:10:30] 3.3- if aun status > 0 
[2023-07-02 05:10:30] 3.9- Finish cron_job Function
[2023-07-02 05:35:43] 1.1- Start cron_job Function
[2023-07-02 05:35:43] 1.2-request Api_url $api_url
[2023-07-02 05:35:43] 1.3-store events of the jop periodically during process 
[2023-07-02 05:35:43] 1.4- fetch data from Api
[2023-07-02 05:35:43] 1.5- View data that returned from API
[2023-07-02 05:35:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:35:43] 1.7- get data of each project to select 
[2023-07-02 05:35:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:35:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:35:43] 1.10- check project update number [PUN]if not found
[2023-07-02 05:35:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:35:43] 3.9- Finish cron_job Function
[2023-07-02 05:36:57] 1.1- Start cron_job Function
[2023-07-02 05:36:57] 1.2-request Api_url $api_url
[2023-07-02 05:36:58] 1.3-store events of the jop periodically during process 
[2023-07-02 05:36:58] 1.4- fetch data from Api
[2023-07-02 05:36:58] 1.5- View data that returned from API
[2023-07-02 05:36:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:36:58] 1.7- get data of each project to select 
[2023-07-02 05:36:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:36:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:36:58] 1.10- check project update number [PUN]if not found
[2023-07-02 05:36:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:36:58] 3.9- Finish cron_job Function
[2023-07-02 05:37:41] 1.1- Start cron_job Function
[2023-07-02 05:37:41] 1.2-request Api_url $api_url
[2023-07-02 05:37:42] 1.3-store events of the jop periodically during process 
[2023-07-02 05:37:42] 1.4- fetch data from Api
[2023-07-02 05:37:42] 1.5- View data that returned from API
[2023-07-02 05:37:42] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:37:42] 1.7- get data of each project to select 
[2023-07-02 05:37:42] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:37:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:37:42] 1.10- check project update number [PUN]if not found
[2023-07-02 05:37:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:37:42] 3.9- Finish cron_job Function
[2023-07-02 05:38:30] 1.1- Start cron_job Function
[2023-07-02 05:38:30] 1.2-request Api_url $api_url
[2023-07-02 05:38:31] 1.3-store events of the jop periodically during process 
[2023-07-02 05:38:31] 1.4- fetch data from Api
[2023-07-02 05:38:31] 1.5- View data that returned from API
[2023-07-02 05:38:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:38:31] 1.7- get data of each project to select 
[2023-07-02 05:38:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:38:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:38:31] 1.10- check project update number [PUN]if not found
[2023-07-02 05:38:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:38:31] 3.9- Finish cron_job Function
[2023-07-02 05:39:32] 1.1- Start cron_job Function
[2023-07-02 05:39:32] 1.2-request Api_url $api_url
[2023-07-02 05:39:33] 1.3-store events of the jop periodically during process 
[2023-07-02 05:39:33] 1.4- fetch data from Api
[2023-07-02 05:39:33] 1.5- View data that returned from API
[2023-07-02 05:39:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:39:33] 1.7- get data of each project to select 
[2023-07-02 05:39:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:39:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:39:33] 1.10- check project update number [PUN]if not found
[2023-07-02 05:39:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:39:33] 3.9- Finish cron_job Function
[2023-07-02 05:42:12] 1.1- Start cron_job Function
[2023-07-02 05:42:12] 1.2-request Api_url $api_url
[2023-07-02 05:42:13] 1.3-store events of the jop periodically during process 
[2023-07-02 05:42:13] 1.4- fetch data from Api
[2023-07-02 05:42:13] 1.5- View data that returned from API
[2023-07-02 05:42:13] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:42:13] 1.7- get data of each project to select 
[2023-07-02 05:42:13] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:42:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:42:13] 1.10- check project update number [PUN]if not found
[2023-07-02 05:42:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:42:13] 3.9- Finish cron_job Function
[2023-07-02 05:44:13] 1.1- Start cron_job Function
[2023-07-02 05:44:13] 1.2-request Api_url $api_url
[2023-07-02 05:44:13] 1.3-store events of the jop periodically during process 
[2023-07-02 05:44:13] 1.4- fetch data from Api
[2023-07-02 05:44:13] 1.5- View data that returned from API
[2023-07-02 05:44:13] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:44:13] 1.7- get data of each project to select 
[2023-07-02 05:44:13] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:44:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:44:13] 1.10- check project update number [PUN]if not found
[2023-07-02 05:44:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:44:13] 3.9- Finish cron_job Function
[2023-07-02 05:46:08] 1.1- Start cron_job Function
[2023-07-02 05:46:08] 1.2-request Api_url $api_url
[2023-07-02 05:46:09] 1.3-store events of the jop periodically during process 
[2023-07-02 05:46:09] 1.4- fetch data from Api
[2023-07-02 05:46:09] 1.5- View data that returned from API
[2023-07-02 05:46:09] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:46:09] 1.7- get data of each project to select 
[2023-07-02 05:46:09] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:46:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:46:09] 1.10- check project update number [PUN]if not found
[2023-07-02 05:46:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:46:09] 3.9- Finish cron_job Function
[2023-07-02 05:48:12] 1.1- Start cron_job Function
[2023-07-02 05:48:12] 1.2-request Api_url $api_url
[2023-07-02 05:48:13] 1.3-store events of the jop periodically during process 
[2023-07-02 05:48:13] 1.4- fetch data from Api
[2023-07-02 05:48:13] 1.5- View data that returned from API
[2023-07-02 05:48:13] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:48:13] 1.7- get data of each project to select 
[2023-07-02 05:48:13] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:48:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:48:13] 1.10- check project update number [PUN]if not found
[2023-07-02 05:48:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:48:13] 3.9- Finish cron_job Function
[2023-07-02 05:50:13] 1.1- Start cron_job Function
[2023-07-02 05:50:13] 1.2-request Api_url $api_url
[2023-07-02 05:50:13] 1.3-store events of the jop periodically during process 
[2023-07-02 05:50:13] 1.4- fetch data from Api
[2023-07-02 05:50:13] 1.5- View data that returned from API
[2023-07-02 05:50:13] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:50:13] 1.7- get data of each project to select 
[2023-07-02 05:50:13] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:50:13] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:50:13] 1.10- check project update number [PUN]if not found
[2023-07-02 05:50:13] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:50:13] 3.9- Finish cron_job Function
[2023-07-02 05:52:14] 1.1- Start cron_job Function
[2023-07-02 05:52:14] 1.2-request Api_url $api_url
[2023-07-02 05:52:15] 1.3-store events of the jop periodically during process 
[2023-07-02 05:52:15] 1.4- fetch data from Api
[2023-07-02 05:52:15] 1.5- View data that returned from API
[2023-07-02 05:52:15] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:52:15] 1.7- get data of each project to select 
[2023-07-02 05:52:15] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:52:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:52:15] 1.10- check project update number [PUN]if not found
[2023-07-02 05:52:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:52:15] 3.9- Finish cron_job Function
[2023-07-02 05:53:13] 1.1- Start cron_job Function
[2023-07-02 05:53:13] 1.2-request Api_url $api_url
[2023-07-02 05:53:19] 1.3-store events of the jop periodically during process 
[2023-07-02 05:53:19] 1.4- fetch data from Api
[2023-07-02 05:53:19] 1.5- View data that returned from API
[2023-07-02 05:53:19] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:53:19] 1.7- get data of each project to select 
[2023-07-02 05:53:19] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:53:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:53:19] 1.10- check project update number [PUN]if not found
[2023-07-02 05:53:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:53:19] 3.9- Finish cron_job Function
[2023-07-02 05:53:32] 1.1- Start cron_job Function
[2023-07-02 05:53:32] 1.2-request Api_url $api_url
[2023-07-02 05:53:33] 1.3-store events of the jop periodically during process 
[2023-07-02 05:53:33] 1.4- fetch data from Api
[2023-07-02 05:53:33] 1.5- View data that returned from API
[2023-07-02 05:53:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:53:33] 1.7- get data of each project to select 
[2023-07-02 05:53:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:53:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:53:33] 1.10- check project update number [PUN]if not found
[2023-07-02 05:53:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:53:33] 3.9- Finish cron_job Function
[2023-07-02 05:54:45] 1.1- Start cron_job Function
[2023-07-02 05:54:45] 1.2-request Api_url $api_url
[2023-07-02 05:54:46] 1.3-store events of the jop periodically during process 
[2023-07-02 05:54:46] 1.4- fetch data from Api
[2023-07-02 05:54:46] 1.5- View data that returned from API
[2023-07-02 05:54:46] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:54:46] 1.7- get data of each project to select 
[2023-07-02 05:54:46] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:54:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:54:46] 1.10- check project update number [PUN]if not found
[2023-07-02 05:54:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:54:46] 3.9- Finish cron_job Function
[2023-07-02 05:56:45] 1.1- Start cron_job Function
[2023-07-02 05:56:45] 1.2-request Api_url $api_url
[2023-07-02 05:56:45] 1.3-store events of the jop periodically during process 
[2023-07-02 05:56:45] 1.4- fetch data from Api
[2023-07-02 05:56:45] 1.5- View data that returned from API
[2023-07-02 05:56:45] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:56:45] 1.7- get data of each project to select 
[2023-07-02 05:56:45] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:56:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:56:45] 1.10- check project update number [PUN]if not found
[2023-07-02 05:56:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:56:45] 3.9- Finish cron_job Function
[2023-07-02 05:58:47] 1.1- Start cron_job Function
[2023-07-02 05:58:47] 1.2-request Api_url $api_url
[2023-07-02 05:58:47] 1.3-store events of the jop periodically during process 
[2023-07-02 05:58:47] 1.4- fetch data from Api
[2023-07-02 05:58:47] 1.5- View data that returned from API
[2023-07-02 05:58:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 05:58:47] 1.7- get data of each project to select 
[2023-07-02 05:58:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 05:58:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 05:58:47] 1.10- check project update number [PUN]if not found
[2023-07-02 05:58:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 05:58:47] 3.9- Finish cron_job Function
[2023-07-02 06:00:46] 1.1- Start cron_job Function
[2023-07-02 06:00:46] 1.2-request Api_url $api_url
[2023-07-02 06:00:47] 1.3-store events of the jop periodically during process 
[2023-07-02 06:00:47] 1.4- fetch data from Api
[2023-07-02 06:00:47] 1.5- View data that returned from API
[2023-07-02 06:00:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:00:47] 1.7- get data of each project to select 
[2023-07-02 06:00:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:00:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:00:47] 1.10- check project update number [PUN]if not found
[2023-07-02 06:00:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:00:47] 3.9- Finish cron_job Function
[2023-07-02 06:02:46] 1.1- Start cron_job Function
[2023-07-02 06:02:46] 1.2-request Api_url $api_url
[2023-07-02 06:02:47] 1.3-store events of the jop periodically during process 
[2023-07-02 06:02:47] 1.4- fetch data from Api
[2023-07-02 06:02:47] 1.5- View data that returned from API
[2023-07-02 06:02:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:02:47] 1.7- get data of each project to select 
[2023-07-02 06:02:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:02:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:02:47] 1.10- check project update number [PUN]if not found
[2023-07-02 06:02:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:02:47] 3.9- Finish cron_job Function
[2023-07-02 06:04:46] 1.1- Start cron_job Function
[2023-07-02 06:04:46] 1.2-request Api_url $api_url
[2023-07-02 06:04:47] 1.3-store events of the jop periodically during process 
[2023-07-02 06:04:47] 1.4- fetch data from Api
[2023-07-02 06:04:47] 1.5- View data that returned from API
[2023-07-02 06:04:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:04:47] 1.7- get data of each project to select 
[2023-07-02 06:04:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:04:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:04:47] 1.10- check project update number [PUN]if not found
[2023-07-02 06:04:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:04:47] 3.9- Finish cron_job Function
[2023-07-02 06:12:26] 1.1- Start cron_job Function
[2023-07-02 06:12:26] 1.2-request Api_url $api_url
[2023-07-02 06:12:26] 1.3-store events of the jop periodically during process 
[2023-07-02 06:12:26] 1.4- fetch data from Api
[2023-07-02 06:12:26] 1.5- View data that returned from API
[2023-07-02 06:12:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:12:26] 1.7- get data of each project to select 
[2023-07-02 06:12:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:12:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:12:26] 1.10- check project update number [PUN]if not found
[2023-07-02 06:12:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:12:26] 3.9- Finish cron_job Function
[2023-07-02 06:12:29] 1.1- Start cron_job Function
[2023-07-02 06:12:29] 1.2-request Api_url $api_url
[2023-07-02 06:12:30] 1.3-store events of the jop periodically during process 
[2023-07-02 06:12:30] 1.4- fetch data from Api
[2023-07-02 06:12:30] 1.5- View data that returned from API
[2023-07-02 06:12:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:12:30] 1.7- get data of each project to select 
[2023-07-02 06:12:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:12:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:12:30] 1.10- check project update number [PUN]if not found
[2023-07-02 06:12:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:12:30] 3.9- Finish cron_job Function
[2023-07-02 06:13:29] 1.1- Start cron_job Function
[2023-07-02 06:13:29] 1.2-request Api_url $api_url
[2023-07-02 06:13:30] 1.3-store events of the jop periodically during process 
[2023-07-02 06:13:30] 1.4- fetch data from Api
[2023-07-02 06:13:30] 1.5- View data that returned from API
[2023-07-02 06:13:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:13:30] 1.7- get data of each project to select 
[2023-07-02 06:13:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:13:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:13:30] 1.10- check project update number [PUN]if not found
[2023-07-02 06:13:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:13:30] 3.9- Finish cron_job Function
[2023-07-02 06:15:56] 1.1- Start cron_job Function
[2023-07-02 06:15:56] 1.2-request Api_url $api_url
[2023-07-02 06:15:57] 1.3-store events of the jop periodically during process 
[2023-07-02 06:15:57] 1.4- fetch data from Api
[2023-07-02 06:15:57] 1.5- View data that returned from API
[2023-07-02 06:15:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:15:57] 1.7- get data of each project to select 
[2023-07-02 06:15:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:15:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:15:57] 1.10- check project update number [PUN]if not found
[2023-07-02 06:15:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:15:57] 3.9- Finish cron_job Function
[2023-07-02 06:18:25] 1.1- Start cron_job Function
[2023-07-02 06:18:25] 1.2-request Api_url $api_url
[2023-07-02 06:18:26] 1.3-store events of the jop periodically during process 
[2023-07-02 06:18:26] 1.4- fetch data from Api
[2023-07-02 06:18:26] 1.5- View data that returned from API
[2023-07-02 06:18:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:18:26] 1.7- get data of each project to select 
[2023-07-02 06:18:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:18:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:18:26] 1.10- check project update number [PUN]if not found
[2023-07-02 06:18:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:18:26] 3.9- Finish cron_job Function
[2023-07-02 06:20:26] 1.1- Start cron_job Function
[2023-07-02 06:20:26] 1.2-request Api_url $api_url
[2023-07-02 06:20:27] 1.3-store events of the jop periodically during process 
[2023-07-02 06:20:27] 1.4- fetch data from Api
[2023-07-02 06:20:27] 1.5- View data that returned from API
[2023-07-02 06:20:27] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:20:27] 1.7- get data of each project to select 
[2023-07-02 06:20:27] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:20:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:20:27] 1.10- check project update number [PUN]if not found
[2023-07-02 06:20:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:20:27] 3.9- Finish cron_job Function
[2023-07-02 06:21:43] 1.1- Start cron_job Function
[2023-07-02 06:21:43] 1.2-request Api_url $api_url
[2023-07-02 06:21:43] 1.3-store events of the jop periodically during process 
[2023-07-02 06:21:43] 1.4- fetch data from Api
[2023-07-02 06:21:43] 1.5- View data that returned from API
[2023-07-02 06:21:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:21:43] 1.7- get data of each project to select 
[2023-07-02 06:21:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:21:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:21:43] 1.10- check project update number [PUN]if not found
[2023-07-02 06:21:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:21:43] 3.9- Finish cron_job Function
[2023-07-02 06:22:40] 1.1- Start cron_job Function
[2023-07-02 06:22:40] 1.2-request Api_url $api_url
[2023-07-02 06:22:40] 1.3-store events of the jop periodically during process 
[2023-07-02 06:22:40] 1.4- fetch data from Api
[2023-07-02 06:22:40] 1.5- View data that returned from API
[2023-07-02 06:22:40] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:22:40] 1.7- get data of each project to select 
[2023-07-02 06:22:40] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:22:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:22:40] 1.10- check project update number [PUN]if not found
[2023-07-02 06:22:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:22:40] 3.9- Finish cron_job Function
[2023-07-02 06:23:35] 1.1- Start cron_job Function
[2023-07-02 06:23:35] 1.2-request Api_url $api_url
[2023-07-02 06:23:36] 1.3-store events of the jop periodically during process 
[2023-07-02 06:23:36] 1.4- fetch data from Api
[2023-07-02 06:23:36] 1.5- View data that returned from API
[2023-07-02 06:23:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:23:36] 1.7- get data of each project to select 
[2023-07-02 06:23:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:23:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:23:36] 1.10- check project update number [PUN]if not found
[2023-07-02 06:23:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:23:36] 3.9- Finish cron_job Function
[2023-07-02 06:24:45] 1.1- Start cron_job Function
[2023-07-02 06:24:45] 1.2-request Api_url $api_url
[2023-07-02 06:24:46] 1.3-store events of the jop periodically during process 
[2023-07-02 06:24:46] 1.4- fetch data from Api
[2023-07-02 06:24:46] 1.5- View data that returned from API
[2023-07-02 06:24:46] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:24:46] 1.7- get data of each project to select 
[2023-07-02 06:24:46] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:24:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:24:46] 1.10- check project update number [PUN]if not found
[2023-07-02 06:24:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:24:46] 3.9- Finish cron_job Function
[2023-07-02 06:25:51] 1.1- Start cron_job Function
[2023-07-02 06:25:51] 1.2-request Api_url $api_url
[2023-07-02 06:25:52] 1.3-store events of the jop periodically during process 
[2023-07-02 06:25:52] 1.4- fetch data from Api
[2023-07-02 06:25:52] 1.5- View data that returned from API
[2023-07-02 06:25:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:25:52] 1.7- get data of each project to select 
[2023-07-02 06:25:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:25:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:25:52] 1.10- check project update number [PUN]if not found
[2023-07-02 06:25:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:25:52] 3.9- Finish cron_job Function
[2023-07-02 06:26:30] 1.1- Start cron_job Function
[2023-07-02 06:26:30] 1.2-request Api_url $api_url
[2023-07-02 06:26:30] 1.3-store events of the jop periodically during process 
[2023-07-02 06:26:30] 1.4- fetch data from Api
[2023-07-02 06:26:30] 1.5- View data that returned from API
[2023-07-02 06:26:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:26:30] 1.7- get data of each project to select 
[2023-07-02 06:26:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:26:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:26:30] 1.10- check project update number [PUN]if not found
[2023-07-02 06:26:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:26:30] 3.9- Finish cron_job Function
[2023-07-02 06:27:57] 1.1- Start cron_job Function
[2023-07-02 06:27:57] 1.2-request Api_url $api_url
[2023-07-02 06:27:57] 1.3-store events of the jop periodically during process 
[2023-07-02 06:27:58] 1.4- fetch data from Api
[2023-07-02 06:27:58] 1.5- View data that returned from API
[2023-07-02 06:27:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:27:58] 1.7- get data of each project to select 
[2023-07-02 06:27:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:27:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:27:58] 1.10- check project update number [PUN]if not found
[2023-07-02 06:27:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:27:58] 3.9- Finish cron_job Function
[2023-07-02 06:28:29] 1.1- Start cron_job Function
[2023-07-02 06:28:29] 1.2-request Api_url $api_url
[2023-07-02 06:28:29] 1.3-store events of the jop periodically during process 
[2023-07-02 06:28:30] 1.4- fetch data from Api
[2023-07-02 06:28:30] 1.5- View data that returned from API
[2023-07-02 06:28:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:28:30] 1.7- get data of each project to select 
[2023-07-02 06:28:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:28:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:28:30] 1.10- check project update number [PUN]if not found
[2023-07-02 06:28:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:28:30] 3.9- Finish cron_job Function
[2023-07-02 06:30:04] 1.1- Start cron_job Function
[2023-07-02 06:30:04] 1.2-request Api_url $api_url
[2023-07-02 06:30:05] 1.3-store events of the jop periodically during process 
[2023-07-02 06:30:05] 1.4- fetch data from Api
[2023-07-02 06:30:05] 1.5- View data that returned from API
[2023-07-02 06:30:05] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:30:05] 1.7- get data of each project to select 
[2023-07-02 06:30:05] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:30:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:30:05] 1.10- check project update number [PUN]if not found
[2023-07-02 06:30:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:30:05] 3.9- Finish cron_job Function
[2023-07-02 06:30:30] 1.1- Start cron_job Function
[2023-07-02 06:30:30] 1.2-request Api_url $api_url
[2023-07-02 06:30:31] 1.3-store events of the jop periodically during process 
[2023-07-02 06:30:31] 1.4- fetch data from Api
[2023-07-02 06:30:31] 1.5- View data that returned from API
[2023-07-02 06:30:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:30:31] 1.7- get data of each project to select 
[2023-07-02 06:30:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:30:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:30:31] 1.10- check project update number [PUN]if not found
[2023-07-02 06:30:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:30:31] 3.9- Finish cron_job Function
[2023-07-02 06:32:31] 1.1- Start cron_job Function
[2023-07-02 06:32:31] 1.2-request Api_url $api_url
[2023-07-02 06:32:31] 1.3-store events of the jop periodically during process 
[2023-07-02 06:32:31] 1.4- fetch data from Api
[2023-07-02 06:32:31] 1.5- View data that returned from API
[2023-07-02 06:32:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:32:31] 1.7- get data of each project to select 
[2023-07-02 06:32:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:32:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:32:31] 1.10- check project update number [PUN]if not found
[2023-07-02 06:32:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:32:31] 3.9- Finish cron_job Function
[2023-07-02 06:34:30] 1.1- Start cron_job Function
[2023-07-02 06:34:30] 1.2-request Api_url $api_url
[2023-07-02 06:34:31] 1.3-store events of the jop periodically during process 
[2023-07-02 06:34:31] 1.4- fetch data from Api
[2023-07-02 06:34:31] 1.5- View data that returned from API
[2023-07-02 06:34:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:34:31] 1.7- get data of each project to select 
[2023-07-02 06:34:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:34:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:34:31] 1.10- check project update number [PUN]if not found
[2023-07-02 06:34:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:34:31] 3.9- Finish cron_job Function
[2023-07-02 06:36:17] 1.1- Start cron_job Function
[2023-07-02 06:36:17] 1.2-request Api_url $api_url
[2023-07-02 06:36:17] 1.3-store events of the jop periodically during process 
[2023-07-02 06:36:17] 1.4- fetch data from Api
[2023-07-02 06:36:17] 1.5- View data that returned from API
[2023-07-02 06:36:17] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:36:17] 1.7- get data of each project to select 
[2023-07-02 06:36:17] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:36:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:36:17] 1.10- check project update number [PUN]if not found
[2023-07-02 06:36:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:36:17] 3.9- Finish cron_job Function
[2023-07-02 06:36:32] 1.1- Start cron_job Function
[2023-07-02 06:36:32] 1.2-request Api_url $api_url
[2023-07-02 06:36:32] 1.3-store events of the jop periodically during process 
[2023-07-02 06:36:32] 1.4- fetch data from Api
[2023-07-02 06:36:32] 1.5- View data that returned from API
[2023-07-02 06:36:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:36:32] 1.7- get data of each project to select 
[2023-07-02 06:36:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:36:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:36:32] 1.10- check project update number [PUN]if not found
[2023-07-02 06:36:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:36:32] 3.9- Finish cron_job Function
[2023-07-02 06:38:31] 1.1- Start cron_job Function
[2023-07-02 06:38:31] 1.2-request Api_url $api_url
[2023-07-02 06:38:32] 1.3-store events of the jop periodically during process 
[2023-07-02 06:38:32] 1.4- fetch data from Api
[2023-07-02 06:38:32] 1.5- View data that returned from API
[2023-07-02 06:38:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:38:32] 1.7- get data of each project to select 
[2023-07-02 06:38:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:38:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:38:32] 1.10- check project update number [PUN]if not found
[2023-07-02 06:38:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:38:32] 3.9- Finish cron_job Function
[2023-07-02 06:40:33] 1.1- Start cron_job Function
[2023-07-02 06:40:33] 1.2-request Api_url $api_url
[2023-07-02 06:40:33] 1.3-store events of the jop periodically during process 
[2023-07-02 06:40:33] 1.4- fetch data from Api
[2023-07-02 06:40:33] 1.5- View data that returned from API
[2023-07-02 06:40:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:40:33] 1.7- get data of each project to select 
[2023-07-02 06:40:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:40:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:40:33] 1.10- check project update number [PUN]if not found
[2023-07-02 06:40:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:40:33] 3.9- Finish cron_job Function
[2023-07-02 06:42:32] 1.1- Start cron_job Function
[2023-07-02 06:42:32] 1.2-request Api_url $api_url
[2023-07-02 06:42:33] 1.3-store events of the jop periodically during process 
[2023-07-02 06:42:33] 1.4- fetch data from Api
[2023-07-02 06:42:33] 1.5- View data that returned from API
[2023-07-02 06:42:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:42:33] 1.7- get data of each project to select 
[2023-07-02 06:42:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:42:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:42:33] 1.10- check project update number [PUN]if not found
[2023-07-02 06:42:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:42:33] 2.2- check if project update number[pun > 0]
[2023-07-02 06:42:33] 2.3- store data into history table
[2023-07-02 06:42:33] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 06:42:35] 2.7-changed the new pun 290 
[2023-07-02 06:42:35] 2.8- register updated_app in event table
[2023-07-02 06:42:35] 2.9- set status {'updated'}
[2023-07-02 06:42:35] 3.1- start_process
[2023-07-02 06:42:35] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 06:42:35] 3.3- if aun status > 0 
[2023-07-02 06:42:35] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 06:42:35] 3.7 check if the keys exists, update data
[2023-07-02 06:42:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:35] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 06:42:35] 3.7 check if the keys exists, update data
[2023-07-02 06:42:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:35] 3.5 check  the app have key '..' if not found 
[2023-07-02 06:42:35] 3.6- Insert  all keys 
[2023-07-02 06:42:35] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 06:42:35] 3.7 check if the keys exists, update data
[2023-07-02 06:42:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:35] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 06:42:35] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.file.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 2.7-changed the new pun 28 
[2023-07-02 06:42:36] 2.8- register updated_app in event table
[2023-07-02 06:42:36] 2.9- set status {'updated'}
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.price.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '..' if not found 
[2023-07-02 06:42:36] 3.6- Insert  all keys 
[2023-07-02 06:42:36] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.5 check  the app have key '.whats_new.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 2.7-changed the new pun 24 
[2023-07-02 06:42:36] 2.8- register updated_app in event table
[2023-07-02 06:42:36] 2.9- set status {'updated'}
[2023-07-02 06:42:36] 3.1- start_process
[2023-07-02 06:42:36] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 06:42:36] 3.3- if aun status > 0 
[2023-07-02 06:42:36] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 06:42:36] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.price.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '..' if not found 
[2023-07-02 06:42:37] 3.6- Insert  all keys 
[2023-07-02 06:42:37] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.5 check  the app have key '.whats_new.' if not found 
[2023-07-02 06:42:37] 3.7 check if the keys exists, update data
[2023-07-02 06:42:37] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:37] 3.1- start_process
[2023-07-02 06:42:37] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 06:42:37] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:38] 3.1- start_process
[2023-07-02 06:42:38] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 06:42:38] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 2.7-changed the new pun 18 
[2023-07-02 06:42:39] 2.8- register updated_app in event table
[2023-07-02 06:42:39] 2.9- set status {'updated'}
[2023-07-02 06:42:39] 3.1- start_process
[2023-07-02 06:42:39] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 06:42:39] 3.3- if aun status > 0 
[2023-07-02 06:42:39] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 06:42:39] 3.7 check if the keys exists, update data
[2023-07-02 06:42:39] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:39] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 06:42:39] 3.7 check if the keys exists, update data
[2023-07-02 06:42:39] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:39] 3.5 check  the app have key '..' if not found 
[2023-07-02 06:42:39] 3.6- Insert  all keys 
[2023-07-02 06:42:39] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 06:42:39] 3.7 check if the keys exists, update data
[2023-07-02 06:42:39] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:39] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 06:42:39] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.price.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.file.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.5 check  the app have key '.whats_new.' if not found 
[2023-07-02 06:42:40] 3.7 check if the keys exists, update data
[2023-07-02 06:42:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 06:42:40] 3.1- start_process
[2023-07-02 06:42:40] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 06:42:40] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:41] 3.1- start_process
[2023-07-02 06:42:41] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 06:42:41] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:42] 3.1- start_process
[2023-07-02 06:42:42] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 06:42:42] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:43] 3.1- start_process
[2023-07-02 06:42:43] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 06:42:43] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:44] 3.1- start_process
[2023-07-02 06:42:44] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 06:42:44] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.1- start_process
[2023-07-02 06:42:45] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 06:42:45] 3.3- if aun status > 0 
[2023-07-02 06:42:45] 3.9- Finish cron_job Function
[2023-07-02 06:44:33] 1.1- Start cron_job Function
[2023-07-02 06:44:33] 1.2-request Api_url $api_url
[2023-07-02 06:44:34] 1.3-store events of the jop periodically during process 
[2023-07-02 06:44:34] 1.4- fetch data from Api
[2023-07-02 06:44:34] 1.5- View data that returned from API
[2023-07-02 06:44:34] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:44:34] 1.7- get data of each project to select 
[2023-07-02 06:44:34] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:44:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:44:34] 1.10- check project update number [PUN]if not found
[2023-07-02 06:44:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:44:34] 3.9- Finish cron_job Function
[2023-07-02 06:46:33] 1.1- Start cron_job Function
[2023-07-02 06:46:33] 1.2-request Api_url $api_url
[2023-07-02 06:46:34] 1.3-store events of the jop periodically during process 
[2023-07-02 06:46:34] 1.4- fetch data from Api
[2023-07-02 06:46:34] 1.5- View data that returned from API
[2023-07-02 06:46:34] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:46:34] 1.7- get data of each project to select 
[2023-07-02 06:46:34] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:46:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:46:34] 1.10- check project update number [PUN]if not found
[2023-07-02 06:46:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:46:34] 3.9- Finish cron_job Function
[2023-07-02 06:48:33] 1.1- Start cron_job Function
[2023-07-02 06:48:33] 1.2-request Api_url $api_url
[2023-07-02 06:48:34] 1.3-store events of the jop periodically during process 
[2023-07-02 06:48:34] 1.4- fetch data from Api
[2023-07-02 06:48:34] 1.5- View data that returned from API
[2023-07-02 06:48:34] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:48:34] 1.7- get data of each project to select 
[2023-07-02 06:48:34] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:48:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:48:34] 1.10- check project update number [PUN]if not found
[2023-07-02 06:48:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:48:34] 3.9- Finish cron_job Function
[2023-07-02 06:50:35] 1.1- Start cron_job Function
[2023-07-02 06:50:35] 1.2-request Api_url $api_url
[2023-07-02 06:50:35] 1.3-store events of the jop periodically during process 
[2023-07-02 06:50:35] 1.4- fetch data from Api
[2023-07-02 06:50:35] 1.5- View data that returned from API
[2023-07-02 06:50:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:50:35] 1.7- get data of each project to select 
[2023-07-02 06:50:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:50:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:50:35] 1.10- check project update number [PUN]if not found
[2023-07-02 06:50:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:50:35] 3.9- Finish cron_job Function
[2023-07-02 06:52:05] 1.1- Start cron_job Function
[2023-07-02 06:52:05] 1.2-request Api_url $api_url
[2023-07-02 06:52:06] 1.3-store events of the jop periodically during process 
[2023-07-02 06:52:06] 1.4- fetch data from Api
[2023-07-02 06:52:06] 1.5- View data that returned from API
[2023-07-02 06:52:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:52:06] 1.7- get data of each project to select 
[2023-07-02 06:52:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:52:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:52:06] 1.10- check project update number [PUN]if not found
[2023-07-02 06:52:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:52:06] 3.9- Finish cron_job Function
[2023-07-02 06:52:34] 1.1- Start cron_job Function
[2023-07-02 06:52:34] 1.2-request Api_url $api_url
[2023-07-02 06:52:35] 1.3-store events of the jop periodically during process 
[2023-07-02 06:52:35] 1.4- fetch data from Api
[2023-07-02 06:52:35] 1.5- View data that returned from API
[2023-07-02 06:52:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:52:35] 1.7- get data of each project to select 
[2023-07-02 06:52:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:52:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:52:35] 1.10- check project update number [PUN]if not found
[2023-07-02 06:52:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:52:35] 3.9- Finish cron_job Function
[2023-07-02 06:53:34] 1.1- Start cron_job Function
[2023-07-02 06:53:34] 1.2-request Api_url $api_url
[2023-07-02 06:53:35] 1.3-store events of the jop periodically during process 
[2023-07-02 06:53:35] 1.4- fetch data from Api
[2023-07-02 06:53:35] 1.5- View data that returned from API
[2023-07-02 06:53:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:53:35] 1.7- get data of each project to select 
[2023-07-02 06:53:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:53:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:53:35] 1.10- check project update number [PUN]if not found
[2023-07-02 06:53:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:53:35] 3.9- Finish cron_job Function
[2023-07-02 06:54:35] 1.1- Start cron_job Function
[2023-07-02 06:54:35] 1.2-request Api_url $api_url
[2023-07-02 06:54:35] 1.3-store events of the jop periodically during process 
[2023-07-02 06:54:35] 1.4- fetch data from Api
[2023-07-02 06:54:35] 1.5- View data that returned from API
[2023-07-02 06:54:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:54:35] 1.7- get data of each project to select 
[2023-07-02 06:54:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:54:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:54:35] 1.10- check project update number [PUN]if not found
[2023-07-02 06:54:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:54:35] 3.9- Finish cron_job Function
[2023-07-02 06:56:36] 1.1- Start cron_job Function
[2023-07-02 06:56:36] 1.2-request Api_url $api_url
[2023-07-02 06:56:37] 1.3-store events of the jop periodically during process 
[2023-07-02 06:56:37] 1.4- fetch data from Api
[2023-07-02 06:56:37] 1.5- View data that returned from API
[2023-07-02 06:56:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:56:37] 1.7- get data of each project to select 
[2023-07-02 06:56:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:56:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:56:37] 1.10- check project update number [PUN]if not found
[2023-07-02 06:56:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:56:37] 3.9- Finish cron_job Function
[2023-07-02 06:58:36] 1.1- Start cron_job Function
[2023-07-02 06:58:36] 1.2-request Api_url $api_url
[2023-07-02 06:58:37] 1.3-store events of the jop periodically during process 
[2023-07-02 06:58:37] 1.4- fetch data from Api
[2023-07-02 06:58:37] 1.5- View data that returned from API
[2023-07-02 06:58:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 06:58:37] 1.7- get data of each project to select 
[2023-07-02 06:58:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 06:58:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 06:58:37] 1.10- check project update number [PUN]if not found
[2023-07-02 06:58:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 06:58:37] 3.9- Finish cron_job Function
[2023-07-02 07:00:00] 1.1- Start cron_job Function
[2023-07-02 07:00:00] 1.2-request Api_url $api_url
[2023-07-02 07:00:02] 1.3-store events of the jop periodically during process 
[2023-07-02 07:00:02] 1.4- fetch data from Api
[2023-07-02 07:00:02] 1.5- View data that returned from API
[2023-07-02 07:00:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:00:02] 1.7- get data of each project to select 
[2023-07-02 07:00:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:00:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:00:02] 1.10- check project update number [PUN]if not found
[2023-07-02 07:00:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:00:02] 3.9- Finish cron_job Function
[2023-07-02 07:00:36] 1.1- Start cron_job Function
[2023-07-02 07:00:36] 1.2-request Api_url $api_url
[2023-07-02 07:00:37] 1.3-store events of the jop periodically during process 
[2023-07-02 07:00:37] 1.4- fetch data from Api
[2023-07-02 07:00:37] 1.5- View data that returned from API
[2023-07-02 07:00:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:00:37] 1.7- get data of each project to select 
[2023-07-02 07:00:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:00:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:00:37] 1.10- check project update number [PUN]if not found
[2023-07-02 07:00:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:00:37] 3.9- Finish cron_job Function
[2023-07-02 07:02:37] 1.1- Start cron_job Function
[2023-07-02 07:02:37] 1.2-request Api_url $api_url
[2023-07-02 07:02:37] 1.3-store events of the jop periodically during process 
[2023-07-02 07:02:37] 1.4- fetch data from Api
[2023-07-02 07:02:37] 1.5- View data that returned from API
[2023-07-02 07:02:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:02:37] 1.7- get data of each project to select 
[2023-07-02 07:02:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:02:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:02:37] 1.10- check project update number [PUN]if not found
[2023-07-02 07:02:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:02:37] 3.9- Finish cron_job Function
[2023-07-02 07:03:31] 1.1- Start cron_job Function
[2023-07-02 07:03:31] 1.2-request Api_url $api_url
[2023-07-02 07:03:32] 1.3-store events of the jop periodically during process 
[2023-07-02 07:03:32] 1.4- fetch data from Api
[2023-07-02 07:03:32] 1.5- View data that returned from API
[2023-07-02 07:03:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:03:32] 1.7- get data of each project to select 
[2023-07-02 07:03:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:03:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:03:32] 1.10- check project update number [PUN]if not found
[2023-07-02 07:03:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:03:32] 3.9- Finish cron_job Function
[2023-07-02 07:05:38] 1.1- Start cron_job Function
[2023-07-02 07:05:38] 1.2-request Api_url $api_url
[2023-07-02 07:05:39] 1.3-store events of the jop periodically during process 
[2023-07-02 07:05:39] 1.4- fetch data from Api
[2023-07-02 07:05:39] 1.5- View data that returned from API
[2023-07-02 07:05:39] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:05:39] 1.7- get data of each project to select 
[2023-07-02 07:05:39] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:05:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:05:39] 1.10- check project update number [PUN]if not found
[2023-07-02 07:05:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:05:39] 3.9- Finish cron_job Function
[2023-07-02 07:06:30] 1.1- Start cron_job Function
[2023-07-02 07:06:30] 1.2-request Api_url $api_url
[2023-07-02 07:06:31] 1.3-store events of the jop periodically during process 
[2023-07-02 07:06:31] 1.4- fetch data from Api
[2023-07-02 07:06:31] 1.5- View data that returned from API
[2023-07-02 07:06:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:06:31] 1.7- get data of each project to select 
[2023-07-02 07:06:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:06:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:06:31] 1.10- check project update number [PUN]if not found
[2023-07-02 07:06:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:06:31] 3.9- Finish cron_job Function
[2023-07-02 07:08:01] 1.1- Start cron_job Function
[2023-07-02 07:08:01] 1.2-request Api_url $api_url
[2023-07-02 07:08:02] 1.3-store events of the jop periodically during process 
[2023-07-02 07:08:02] 1.4- fetch data from Api
[2023-07-02 07:08:02] 1.5- View data that returned from API
[2023-07-02 07:08:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:08:02] 1.7- get data of each project to select 
[2023-07-02 07:08:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:08:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:08:02] 1.10- check project update number [PUN]if not found
[2023-07-02 07:08:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:08:02] 3.9- Finish cron_job Function
[2023-07-02 07:08:38] 1.1- Start cron_job Function
[2023-07-02 07:08:38] 1.2-request Api_url $api_url
[2023-07-02 07:08:39] 1.3-store events of the jop periodically during process 
[2023-07-02 07:08:39] 1.4- fetch data from Api
[2023-07-02 07:08:39] 1.5- View data that returned from API
[2023-07-02 07:08:39] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:08:39] 1.7- get data of each project to select 
[2023-07-02 07:08:39] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:08:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:08:39] 1.10- check project update number [PUN]if not found
[2023-07-02 07:08:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:08:39] 3.9- Finish cron_job Function
[2023-07-02 07:09:30] 1.1- Start cron_job Function
[2023-07-02 07:09:30] 1.2-request Api_url $api_url
[2023-07-02 07:09:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:09:30] 1.4- fetch data from Api
[2023-07-02 07:09:30] 1.5- View data that returned from API
[2023-07-02 07:09:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:09:30] 1.7- get data of each project to select 
[2023-07-02 07:09:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:09:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:09:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:09:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:09:30] 3.9- Finish cron_job Function
[2023-07-02 07:10:42] 1.1- Start cron_job Function
[2023-07-02 07:10:42] 1.2-request Api_url $api_url
[2023-07-02 07:10:43] 1.3-store events of the jop periodically during process 
[2023-07-02 07:10:43] 1.4- fetch data from Api
[2023-07-02 07:10:43] 1.5- View data that returned from API
[2023-07-02 07:10:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:10:43] 1.7- get data of each project to select 
[2023-07-02 07:10:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:10:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:10:43] 1.10- check project update number [PUN]if not found
[2023-07-02 07:10:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:10:43] 3.9- Finish cron_job Function
[2023-07-02 07:11:37] 1.1- Start cron_job Function
[2023-07-02 07:11:37] 1.2-request Api_url $api_url
[2023-07-02 07:11:38] 1.3-store events of the jop periodically during process 
[2023-07-02 07:11:38] 1.4- fetch data from Api
[2023-07-02 07:11:38] 1.5- View data that returned from API
[2023-07-02 07:11:38] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:11:38] 1.7- get data of each project to select 
[2023-07-02 07:11:38] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:11:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:11:38] 1.10- check project update number [PUN]if not found
[2023-07-02 07:11:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:11:38] 3.9- Finish cron_job Function
[2023-07-02 07:12:29] 1.1- Start cron_job Function
[2023-07-02 07:12:29] 1.2-request Api_url $api_url
[2023-07-02 07:12:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:12:30] 1.4- fetch data from Api
[2023-07-02 07:12:30] 1.5- View data that returned from API
[2023-07-02 07:12:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:12:30] 1.7- get data of each project to select 
[2023-07-02 07:12:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:12:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:12:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:12:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:12:30] 3.9- Finish cron_job Function
[2023-07-02 07:13:30] 1.1- Start cron_job Function
[2023-07-02 07:13:30] 1.2-request Api_url $api_url
[2023-07-02 07:13:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:13:30] 1.4- fetch data from Api
[2023-07-02 07:13:30] 1.5- View data that returned from API
[2023-07-02 07:13:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:13:30] 1.7- get data of each project to select 
[2023-07-02 07:13:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:13:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:13:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:13:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:13:30] 3.9- Finish cron_job Function
[2023-07-02 07:14:56] 1.1- Start cron_job Function
[2023-07-02 07:14:56] 1.2-request Api_url $api_url
[2023-07-02 07:14:57] 1.3-store events of the jop periodically during process 
[2023-07-02 07:14:57] 1.4- fetch data from Api
[2023-07-02 07:14:57] 1.5- View data that returned from API
[2023-07-02 07:14:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:14:57] 1.7- get data of each project to select 
[2023-07-02 07:14:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:14:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:14:57] 1.10- check project update number [PUN]if not found
[2023-07-02 07:14:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:14:57] 3.9- Finish cron_job Function
[2023-07-02 07:16:14] 1.1- Start cron_job Function
[2023-07-02 07:16:14] 1.2-request Api_url $api_url
[2023-07-02 07:16:14] 1.3-store events of the jop periodically during process 
[2023-07-02 07:16:14] 1.4- fetch data from Api
[2023-07-02 07:16:14] 1.5- View data that returned from API
[2023-07-02 07:16:14] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:16:14] 1.7- get data of each project to select 
[2023-07-02 07:16:14] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:16:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:16:14] 1.10- check project update number [PUN]if not found
[2023-07-02 07:16:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:16:14] 3.9- Finish cron_job Function
[2023-07-02 07:17:19] 1.1- Start cron_job Function
[2023-07-02 07:17:19] 1.2-request Api_url $api_url
[2023-07-02 07:17:20] 1.3-store events of the jop periodically during process 
[2023-07-02 07:17:20] 1.4- fetch data from Api
[2023-07-02 07:17:20] 1.5- View data that returned from API
[2023-07-02 07:17:20] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:17:20] 1.7- get data of each project to select 
[2023-07-02 07:17:20] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:17:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:17:20] 1.10- check project update number [PUN]if not found
[2023-07-02 07:17:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:17:20] 3.9- Finish cron_job Function
[2023-07-02 07:18:14] 1.1- Start cron_job Function
[2023-07-02 07:18:14] 1.2-request Api_url $api_url
[2023-07-02 07:18:14] 1.3-store events of the jop periodically during process 
[2023-07-02 07:18:14] 1.4- fetch data from Api
[2023-07-02 07:18:14] 1.5- View data that returned from API
[2023-07-02 07:18:14] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:18:14] 1.7- get data of each project to select 
[2023-07-02 07:18:14] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:18:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:18:14] 1.10- check project update number [PUN]if not found
[2023-07-02 07:18:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:18:14] 3.9- Finish cron_job Function
[2023-07-02 07:19:19] 1.1- Start cron_job Function
[2023-07-02 07:19:19] 1.2-request Api_url $api_url
[2023-07-02 07:19:20] 1.3-store events of the jop periodically during process 
[2023-07-02 07:19:20] 1.4- fetch data from Api
[2023-07-02 07:19:20] 1.5- View data that returned from API
[2023-07-02 07:19:20] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:19:20] 1.7- get data of each project to select 
[2023-07-02 07:19:20] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:19:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:19:20] 1.10- check project update number [PUN]if not found
[2023-07-02 07:19:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:19:20] 3.9- Finish cron_job Function
[2023-07-02 07:19:40] 1.1- Start cron_job Function
[2023-07-02 07:19:40] 1.2-request Api_url $api_url
[2023-07-02 07:19:41] 1.3-store events of the jop periodically during process 
[2023-07-02 07:19:41] 1.4- fetch data from Api
[2023-07-02 07:19:41] 1.5- View data that returned from API
[2023-07-02 07:19:41] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:19:41] 1.7- get data of each project to select 
[2023-07-02 07:19:41] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:19:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:19:41] 1.10- check project update number [PUN]if not found
[2023-07-02 07:19:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:19:41] 3.9- Finish cron_job Function
[2023-07-02 07:20:30] 1.1- Start cron_job Function
[2023-07-02 07:20:30] 1.2-request Api_url $api_url
[2023-07-02 07:20:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:20:30] 1.4- fetch data from Api
[2023-07-02 07:20:30] 1.5- View data that returned from API
[2023-07-02 07:20:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:20:30] 1.7- get data of each project to select 
[2023-07-02 07:20:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:20:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:20:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:20:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:20:30] 3.9- Finish cron_job Function
[2023-07-02 07:21:30] 1.1- Start cron_job Function
[2023-07-02 07:21:30] 1.2-request Api_url $api_url
[2023-07-02 07:21:31] 1.3-store events of the jop periodically during process 
[2023-07-02 07:21:31] 1.4- fetch data from Api
[2023-07-02 07:21:31] 1.5- View data that returned from API
[2023-07-02 07:21:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:21:31] 1.7- get data of each project to select 
[2023-07-02 07:21:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:21:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:21:31] 1.10- check project update number [PUN]if not found
[2023-07-02 07:21:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:21:31] 3.9- Finish cron_job Function
[2023-07-02 07:22:29] 1.1- Start cron_job Function
[2023-07-02 07:22:29] 1.2-request Api_url $api_url
[2023-07-02 07:22:29] 1.3-store events of the jop periodically during process 
[2023-07-02 07:22:29] 1.4- fetch data from Api
[2023-07-02 07:22:29] 1.5- View data that returned from API
[2023-07-02 07:22:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:22:29] 1.7- get data of each project to select 
[2023-07-02 07:22:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:22:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:22:29] 1.10- check project update number [PUN]if not found
[2023-07-02 07:22:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:22:29] 3.9- Finish cron_job Function
[2023-07-02 07:23:43] 1.1- Start cron_job Function
[2023-07-02 07:23:43] 1.2-request Api_url $api_url
[2023-07-02 07:23:44] 1.3-store events of the jop periodically during process 
[2023-07-02 07:23:44] 1.4- fetch data from Api
[2023-07-02 07:23:44] 1.5- View data that returned from API
[2023-07-02 07:23:44] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:23:44] 1.7- get data of each project to select 
[2023-07-02 07:23:44] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:23:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:23:44] 1.10- check project update number [PUN]if not found
[2023-07-02 07:23:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:23:44] 3.9- Finish cron_job Function
[2023-07-02 07:24:29] 1.1- Start cron_job Function
[2023-07-02 07:24:29] 1.2-request Api_url $api_url
[2023-07-02 07:24:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:24:30] 1.4- fetch data from Api
[2023-07-02 07:24:30] 1.5- View data that returned from API
[2023-07-02 07:24:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:24:30] 1.7- get data of each project to select 
[2023-07-02 07:24:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:24:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:24:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:24:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:24:30] 3.9- Finish cron_job Function
[2023-07-02 07:25:35] 1.1- Start cron_job Function
[2023-07-02 07:25:35] 1.2-request Api_url $api_url
[2023-07-02 07:25:36] 1.3-store events of the jop periodically during process 
[2023-07-02 07:25:36] 1.4- fetch data from Api
[2023-07-02 07:25:36] 1.5- View data that returned from API
[2023-07-02 07:25:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:25:36] 1.7- get data of each project to select 
[2023-07-02 07:25:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:25:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:25:36] 1.10- check project update number [PUN]if not found
[2023-07-02 07:25:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:25:36] 3.9- Finish cron_job Function
[2023-07-02 07:26:44] 1.1- Start cron_job Function
[2023-07-02 07:26:44] 1.2-request Api_url $api_url
[2023-07-02 07:26:44] 1.3-store events of the jop periodically during process 
[2023-07-02 07:26:44] 1.4- fetch data from Api
[2023-07-02 07:26:44] 1.5- View data that returned from API
[2023-07-02 07:26:44] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:26:44] 1.7- get data of each project to select 
[2023-07-02 07:26:44] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:26:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:26:44] 1.10- check project update number [PUN]if not found
[2023-07-02 07:26:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:26:44] 3.9- Finish cron_job Function
[2023-07-02 07:28:07] 1.1- Start cron_job Function
[2023-07-02 07:28:07] 1.2-request Api_url $api_url
[2023-07-02 07:28:08] 1.3-store events of the jop periodically during process 
[2023-07-02 07:28:08] 1.4- fetch data from Api
[2023-07-02 07:28:08] 1.5- View data that returned from API
[2023-07-02 07:28:08] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:28:08] 1.7- get data of each project to select 
[2023-07-02 07:28:08] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:28:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:28:08] 1.10- check project update number [PUN]if not found
[2023-07-02 07:28:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:28:08] 3.9- Finish cron_job Function
[2023-07-02 07:28:44] 1.1- Start cron_job Function
[2023-07-02 07:28:44] 1.2-request Api_url $api_url
[2023-07-02 07:28:45] 1.3-store events of the jop periodically during process 
[2023-07-02 07:28:45] 1.4- fetch data from Api
[2023-07-02 07:28:45] 1.5- View data that returned from API
[2023-07-02 07:28:45] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:28:45] 1.7- get data of each project to select 
[2023-07-02 07:28:45] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:28:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:28:45] 1.10- check project update number [PUN]if not found
[2023-07-02 07:28:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:28:45] 3.9- Finish cron_job Function
[2023-07-02 07:30:09] 1.1- Start cron_job Function
[2023-07-02 07:30:09] 1.2-request Api_url $api_url
[2023-07-02 07:30:09] 1.3-store events of the jop periodically during process 
[2023-07-02 07:30:09] 1.4- fetch data from Api
[2023-07-02 07:30:09] 1.5- View data that returned from API
[2023-07-02 07:30:09] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:30:09] 1.7- get data of each project to select 
[2023-07-02 07:30:09] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:30:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:30:09] 1.10- check project update number [PUN]if not found
[2023-07-02 07:30:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:30:09] 3.9- Finish cron_job Function
[2023-07-02 07:30:45] 1.1- Start cron_job Function
[2023-07-02 07:30:45] 1.2-request Api_url $api_url
[2023-07-02 07:30:45] 1.3-store events of the jop periodically during process 
[2023-07-02 07:30:46] 1.4- fetch data from Api
[2023-07-02 07:30:46] 1.5- View data that returned from API
[2023-07-02 07:30:46] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:30:46] 1.7- get data of each project to select 
[2023-07-02 07:30:46] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:30:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:30:46] 1.10- check project update number [PUN]if not found
[2023-07-02 07:30:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:30:46] 3.9- Finish cron_job Function
[2023-07-02 07:31:42] 1.1- Start cron_job Function
[2023-07-02 07:31:42] 1.2-request Api_url $api_url
[2023-07-02 07:31:43] 1.3-store events of the jop periodically during process 
[2023-07-02 07:31:43] 1.4- fetch data from Api
[2023-07-02 07:31:43] 1.5- View data that returned from API
[2023-07-02 07:31:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:31:43] 1.7- get data of each project to select 
[2023-07-02 07:31:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:31:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:31:43] 1.10- check project update number [PUN]if not found
[2023-07-02 07:31:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:31:43] 3.9- Finish cron_job Function
[2023-07-02 07:32:43] 1.1- Start cron_job Function
[2023-07-02 07:32:43] 1.2-request Api_url $api_url
[2023-07-02 07:32:43] 1.3-store events of the jop periodically during process 
[2023-07-02 07:32:43] 1.4- fetch data from Api
[2023-07-02 07:32:43] 1.5- View data that returned from API
[2023-07-02 07:32:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:32:43] 1.7- get data of each project to select 
[2023-07-02 07:32:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:32:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:32:43] 1.10- check project update number [PUN]if not found
[2023-07-02 07:32:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:32:43] 3.9- Finish cron_job Function
[2023-07-02 07:33:44] 1.1- Start cron_job Function
[2023-07-02 07:33:44] 1.2-request Api_url $api_url
[2023-07-02 07:33:45] 1.3-store events of the jop periodically during process 
[2023-07-02 07:33:45] 1.4- fetch data from Api
[2023-07-02 07:33:45] 1.5- View data that returned from API
[2023-07-02 07:33:45] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:33:45] 1.7- get data of each project to select 
[2023-07-02 07:33:45] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:33:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:33:45] 1.10- check project update number [PUN]if not found
[2023-07-02 07:33:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:33:45] 3.9- Finish cron_job Function
[2023-07-02 07:34:47] 1.1- Start cron_job Function
[2023-07-02 07:34:47] 1.2-request Api_url $api_url
[2023-07-02 07:34:47] 1.3-store events of the jop periodically during process 
[2023-07-02 07:34:47] 1.4- fetch data from Api
[2023-07-02 07:34:47] 1.5- View data that returned from API
[2023-07-02 07:34:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:34:47] 1.7- get data of each project to select 
[2023-07-02 07:34:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:34:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:34:47] 1.10- check project update number [PUN]if not found
[2023-07-02 07:34:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:34:47] 3.9- Finish cron_job Function
[2023-07-02 07:35:45] 1.1- Start cron_job Function
[2023-07-02 07:35:45] 1.2-request Api_url $api_url
[2023-07-02 07:35:46] 1.3-store events of the jop periodically during process 
[2023-07-02 07:35:46] 1.4- fetch data from Api
[2023-07-02 07:35:46] 1.5- View data that returned from API
[2023-07-02 07:35:46] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:35:46] 1.7- get data of each project to select 
[2023-07-02 07:35:46] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:35:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:35:46] 1.10- check project update number [PUN]if not found
[2023-07-02 07:35:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:35:46] 3.9- Finish cron_job Function
[2023-07-02 07:36:46] 1.1- Start cron_job Function
[2023-07-02 07:36:46] 1.2-request Api_url $api_url
[2023-07-02 07:36:47] 1.3-store events of the jop periodically during process 
[2023-07-02 07:36:47] 1.4- fetch data from Api
[2023-07-02 07:36:47] 1.5- View data that returned from API
[2023-07-02 07:36:47] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:36:47] 1.7- get data of each project to select 
[2023-07-02 07:36:47] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:36:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:36:47] 1.10- check project update number [PUN]if not found
[2023-07-02 07:36:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:36:47] 3.9- Finish cron_job Function
[2023-07-02 07:37:45] 1.1- Start cron_job Function
[2023-07-02 07:37:45] 1.2-request Api_url $api_url
[2023-07-02 07:37:46] 1.3-store events of the jop periodically during process 
[2023-07-02 07:37:46] 1.4- fetch data from Api
[2023-07-02 07:37:46] 1.5- View data that returned from API
[2023-07-02 07:37:46] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:37:46] 1.7- get data of each project to select 
[2023-07-02 07:37:46] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:37:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:37:46] 1.10- check project update number [PUN]if not found
[2023-07-02 07:37:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:37:46] 3.9- Finish cron_job Function
[2023-07-02 07:38:52] 1.1- Start cron_job Function
[2023-07-02 07:38:52] 1.2-request Api_url $api_url
[2023-07-02 07:38:53] 1.3-store events of the jop periodically during process 
[2023-07-02 07:38:53] 1.4- fetch data from Api
[2023-07-02 07:38:53] 1.5- View data that returned from API
[2023-07-02 07:38:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:38:53] 1.7- get data of each project to select 
[2023-07-02 07:38:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:38:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:38:53] 1.10- check project update number [PUN]if not found
[2023-07-02 07:38:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:38:53] 3.9- Finish cron_job Function
[2023-07-02 07:39:29] 1.1- Start cron_job Function
[2023-07-02 07:39:29] 1.2-request Api_url $api_url
[2023-07-02 07:39:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:39:30] 1.4- fetch data from Api
[2023-07-02 07:39:30] 1.5- View data that returned from API
[2023-07-02 07:39:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:39:30] 1.7- get data of each project to select 
[2023-07-02 07:39:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:39:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:39:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:39:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:39:30] 3.9- Finish cron_job Function
[2023-07-02 07:40:47] 1.1- Start cron_job Function
[2023-07-02 07:40:47] 1.2-request Api_url $api_url
[2023-07-02 07:40:48] 1.3-store events of the jop periodically during process 
[2023-07-02 07:40:48] 1.4- fetch data from Api
[2023-07-02 07:40:48] 1.5- View data that returned from API
[2023-07-02 07:40:48] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:40:48] 1.7- get data of each project to select 
[2023-07-02 07:40:48] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:40:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:40:48] 1.10- check project update number [PUN]if not found
[2023-07-02 07:40:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:40:48] 3.9- Finish cron_job Function
[2023-07-02 07:41:29] 1.1- Start cron_job Function
[2023-07-02 07:41:29] 1.2-request Api_url $api_url
[2023-07-02 07:41:29] 1.3-store events of the jop periodically during process 
[2023-07-02 07:41:29] 1.4- fetch data from Api
[2023-07-02 07:41:29] 1.5- View data that returned from API
[2023-07-02 07:41:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:41:29] 1.7- get data of each project to select 
[2023-07-02 07:41:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:41:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:41:29] 1.10- check project update number [PUN]if not found
[2023-07-02 07:41:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:41:29] 3.9- Finish cron_job Function
[2023-07-02 07:42:48] 1.1- Start cron_job Function
[2023-07-02 07:42:48] 1.2-request Api_url $api_url
[2023-07-02 07:42:49] 1.3-store events of the jop periodically during process 
[2023-07-02 07:42:49] 1.4- fetch data from Api
[2023-07-02 07:42:49] 1.5- View data that returned from API
[2023-07-02 07:42:49] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:42:49] 1.7- get data of each project to select 
[2023-07-02 07:42:49] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:42:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:42:49] 1.10- check project update number [PUN]if not found
[2023-07-02 07:42:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:42:49] 3.9- Finish cron_job Function
[2023-07-02 07:43:29] 1.1- Start cron_job Function
[2023-07-02 07:43:29] 1.2-request Api_url $api_url
[2023-07-02 07:43:29] 1.3-store events of the jop periodically during process 
[2023-07-02 07:43:29] 1.4- fetch data from Api
[2023-07-02 07:43:29] 1.5- View data that returned from API
[2023-07-02 07:43:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:43:29] 1.7- get data of each project to select 
[2023-07-02 07:43:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:43:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:43:29] 1.10- check project update number [PUN]if not found
[2023-07-02 07:43:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:43:29] 3.9- Finish cron_job Function
[2023-07-02 07:44:30] 1.1- Start cron_job Function
[2023-07-02 07:44:30] 1.2-request Api_url $api_url
[2023-07-02 07:44:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:44:30] 1.4- fetch data from Api
[2023-07-02 07:44:30] 1.5- View data that returned from API
[2023-07-02 07:44:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:44:30] 1.7- get data of each project to select 
[2023-07-02 07:44:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:44:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:44:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:44:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:44:30] 3.9- Finish cron_job Function
[2023-07-02 07:45:29] 1.1- Start cron_job Function
[2023-07-02 07:45:29] 1.2-request Api_url $api_url
[2023-07-02 07:45:29] 1.3-store events of the jop periodically during process 
[2023-07-02 07:45:29] 1.4- fetch data from Api
[2023-07-02 07:45:29] 1.5- View data that returned from API
[2023-07-02 07:45:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:45:29] 1.7- get data of each project to select 
[2023-07-02 07:45:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:45:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:45:29] 1.10- check project update number [PUN]if not found
[2023-07-02 07:45:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:45:29] 3.9- Finish cron_job Function
[2023-07-02 07:47:05] 1.1- Start cron_job Function
[2023-07-02 07:47:05] 1.2-request Api_url $api_url
[2023-07-02 07:47:06] 1.3-store events of the jop periodically during process 
[2023-07-02 07:47:06] 1.4- fetch data from Api
[2023-07-02 07:47:06] 1.5- View data that returned from API
[2023-07-02 07:47:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:47:06] 1.7- get data of each project to select 
[2023-07-02 07:47:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:47:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:47:06] 1.10- check project update number [PUN]if not found
[2023-07-02 07:47:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:47:06] 3.9- Finish cron_job Function
[2023-07-02 07:47:30] 1.1- Start cron_job Function
[2023-07-02 07:47:30] 1.2-request Api_url $api_url
[2023-07-02 07:47:30] 1.3-store events of the jop periodically during process 
[2023-07-02 07:47:30] 1.4- fetch data from Api
[2023-07-02 07:47:30] 1.5- View data that returned from API
[2023-07-02 07:47:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:47:30] 1.7- get data of each project to select 
[2023-07-02 07:47:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:47:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:47:30] 1.10- check project update number [PUN]if not found
[2023-07-02 07:47:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:47:30] 3.9- Finish cron_job Function
[2023-07-02 07:49:06] 1.1- Start cron_job Function
[2023-07-02 07:49:06] 1.2-request Api_url $api_url
[2023-07-02 07:49:06] 1.3-store events of the jop periodically during process 
[2023-07-02 07:49:06] 1.4- fetch data from Api
[2023-07-02 07:49:06] 1.5- View data that returned from API
[2023-07-02 07:49:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:49:06] 1.7- get data of each project to select 
[2023-07-02 07:49:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:49:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:49:06] 1.10- check project update number [PUN]if not found
[2023-07-02 07:49:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:49:06] 3.9- Finish cron_job Function
[2023-07-02 07:50:26] 1.1- Start cron_job Function
[2023-07-02 07:50:26] 1.2-request Api_url $api_url
[2023-07-02 07:50:26] 1.3-store events of the jop periodically during process 
[2023-07-02 07:50:26] 1.4- fetch data from Api
[2023-07-02 07:50:26] 1.5- View data that returned from API
[2023-07-02 07:50:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:50:26] 1.7- get data of each project to select 
[2023-07-02 07:50:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:50:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:50:26] 1.10- check project update number [PUN]if not found
[2023-07-02 07:50:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:50:26] 3.9- Finish cron_job Function
[2023-07-02 07:51:06] 1.1- Start cron_job Function
[2023-07-02 07:51:06] 1.2-request Api_url $api_url
[2023-07-02 07:51:06] 1.3-store events of the jop periodically during process 
[2023-07-02 07:51:06] 1.4- fetch data from Api
[2023-07-02 07:51:06] 1.5- View data that returned from API
[2023-07-02 07:51:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:51:06] 1.7- get data of each project to select 
[2023-07-02 07:51:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:51:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:51:06] 1.10- check project update number [PUN]if not found
[2023-07-02 07:51:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:51:06] 3.9- Finish cron_job Function
[2023-07-02 07:52:25] 1.1- Start cron_job Function
[2023-07-02 07:52:25] 1.2-request Api_url $api_url
[2023-07-02 07:52:26] 1.3-store events of the jop periodically during process 
[2023-07-02 07:52:26] 1.4- fetch data from Api
[2023-07-02 07:52:26] 1.5- View data that returned from API
[2023-07-02 07:52:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:52:26] 1.7- get data of each project to select 
[2023-07-02 07:52:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:52:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:52:26] 1.10- check project update number [PUN]if not found
[2023-07-02 07:52:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:52:26] 3.9- Finish cron_job Function
[2023-07-02 07:53:07] 1.1- Start cron_job Function
[2023-07-02 07:53:07] 1.2-request Api_url $api_url
[2023-07-02 07:53:07] 1.3-store events of the jop periodically during process 
[2023-07-02 07:53:07] 1.4- fetch data from Api
[2023-07-02 07:53:07] 1.5- View data that returned from API
[2023-07-02 07:53:07] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:53:07] 1.7- get data of each project to select 
[2023-07-02 07:53:07] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:53:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:53:07] 1.10- check project update number [PUN]if not found
[2023-07-02 07:53:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:53:07] 3.9- Finish cron_job Function
[2023-07-02 07:54:26] 1.1- Start cron_job Function
[2023-07-02 07:54:26] 1.2-request Api_url $api_url
[2023-07-02 07:54:26] 1.3-store events of the jop periodically during process 
[2023-07-02 07:54:26] 1.4- fetch data from Api
[2023-07-02 07:54:26] 1.5- View data that returned from API
[2023-07-02 07:54:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:54:26] 1.7- get data of each project to select 
[2023-07-02 07:54:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:54:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:54:26] 1.10- check project update number [PUN]if not found
[2023-07-02 07:54:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:54:26] 3.9- Finish cron_job Function
[2023-07-02 07:56:27] 1.1- Start cron_job Function
[2023-07-02 07:56:27] 1.2-request Api_url $api_url
[2023-07-02 07:56:27] 1.3-store events of the jop periodically during process 
[2023-07-02 07:56:27] 1.4- fetch data from Api
[2023-07-02 07:56:27] 1.5- View data that returned from API
[2023-07-02 07:56:27] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:56:27] 1.7- get data of each project to select 
[2023-07-02 07:56:27] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:56:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:56:27] 1.10- check project update number [PUN]if not found
[2023-07-02 07:56:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:56:27] 3.9- Finish cron_job Function
[2023-07-02 07:58:27] 1.1- Start cron_job Function
[2023-07-02 07:58:27] 1.2-request Api_url $api_url
[2023-07-02 07:58:28] 1.3-store events of the jop periodically during process 
[2023-07-02 07:58:28] 1.4- fetch data from Api
[2023-07-02 07:58:28] 1.5- View data that returned from API
[2023-07-02 07:58:28] 1.6- get and View projects & tags that returned from  API
[2023-07-02 07:58:28] 1.7- get data of each project to select 
[2023-07-02 07:58:28] 1.8- The selected project Name:my android. id: 7
[2023-07-02 07:58:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 07:58:28] 1.10- check project update number [PUN]if not found
[2023-07-02 07:58:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 07:58:28] 3.9- Finish cron_job Function
[2023-07-02 08:05:58] 1.1- Start cron_job Function
[2023-07-02 08:05:58] 1.2-request Api_url $api_url
[2023-07-02 08:05:59] 1.3-store events of the jop periodically during process 
[2023-07-02 08:05:59] 1.4- fetch data from Api
[2023-07-02 08:05:59] 1.5- View data that returned from API
[2023-07-02 08:05:59] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:05:59] 1.7- get data of each project to select 
[2023-07-02 08:05:59] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:05:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:05:59] 1.10- check project update number [PUN]if not found
[2023-07-02 08:05:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:05:59] 3.9- Finish cron_job Function
[2023-07-02 08:07:58] 1.1- Start cron_job Function
[2023-07-02 08:07:58] 1.2-request Api_url $api_url
[2023-07-02 08:07:59] 1.3-store events of the jop periodically during process 
[2023-07-02 08:07:59] 1.4- fetch data from Api
[2023-07-02 08:07:59] 1.5- View data that returned from API
[2023-07-02 08:07:59] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:07:59] 1.7- get data of each project to select 
[2023-07-02 08:07:59] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:07:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:07:59] 1.10- check project update number [PUN]if not found
[2023-07-02 08:07:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:07:59] 3.9- Finish cron_job Function
[2023-07-02 08:09:59] 1.1- Start cron_job Function
[2023-07-02 08:09:59] 1.2-request Api_url $api_url
[2023-07-02 08:09:59] 1.3-store events of the jop periodically during process 
[2023-07-02 08:09:59] 1.4- fetch data from Api
[2023-07-02 08:09:59] 1.5- View data that returned from API
[2023-07-02 08:09:59] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:09:59] 1.7- get data of each project to select 
[2023-07-02 08:09:59] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:09:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:09:59] 1.10- check project update number [PUN]if not found
[2023-07-02 08:09:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:09:59] 3.9- Finish cron_job Function
[2023-07-02 08:11:58] 1.1- Start cron_job Function
[2023-07-02 08:11:58] 1.2-request Api_url $api_url
[2023-07-02 08:11:59] 1.3-store events of the jop periodically during process 
[2023-07-02 08:11:59] 1.4- fetch data from Api
[2023-07-02 08:11:59] 1.5- View data that returned from API
[2023-07-02 08:11:59] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:11:59] 1.7- get data of each project to select 
[2023-07-02 08:11:59] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:11:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:11:59] 1.10- check project update number [PUN]if not found
[2023-07-02 08:11:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:11:59] 3.9- Finish cron_job Function
[2023-07-02 08:13:58] 1.1- Start cron_job Function
[2023-07-02 08:13:58] 1.2-request Api_url $api_url
[2023-07-02 08:14:00] 1.3-store events of the jop periodically during process 
[2023-07-02 08:14:00] 1.4- fetch data from Api
[2023-07-02 08:14:00] 1.5- View data that returned from API
[2023-07-02 08:14:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:14:00] 1.7- get data of each project to select 
[2023-07-02 08:14:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:14:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:14:00] 1.10- check project update number [PUN]if not found
[2023-07-02 08:14:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:14:00] 3.9- Finish cron_job Function
[2023-07-02 08:15:59] 1.1- Start cron_job Function
[2023-07-02 08:15:59] 1.2-request Api_url $api_url
[2023-07-02 08:16:00] 1.3-store events of the jop periodically during process 
[2023-07-02 08:16:00] 1.4- fetch data from Api
[2023-07-02 08:16:00] 1.5- View data that returned from API
[2023-07-02 08:16:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:16:00] 1.7- get data of each project to select 
[2023-07-02 08:16:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:16:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:16:00] 1.10- check project update number [PUN]if not found
[2023-07-02 08:16:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:16:00] 3.9- Finish cron_job Function
[2023-07-02 08:17:24] 1.1- Start cron_job Function
[2023-07-02 08:17:24] 1.2-request Api_url $api_url
[2023-07-02 08:17:25] 1.3-store events of the jop periodically during process 
[2023-07-02 08:17:25] 1.4- fetch data from Api
[2023-07-02 08:17:25] 1.5- View data that returned from API
[2023-07-02 08:17:25] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:17:25] 1.7- get data of each project to select 
[2023-07-02 08:17:25] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:17:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:17:25] 1.10- check project update number [PUN]if not found
[2023-07-02 08:17:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:17:25] 3.9- Finish cron_job Function
[2023-07-02 08:27:18] 1.1- Start cron_job Function
[2023-07-02 08:27:18] 1.2-request Api_url $api_url
[2023-07-02 08:27:19] 1.3-store events of the jop periodically during process 
[2023-07-02 08:27:19] 1.4- fetch data from Api
[2023-07-02 08:27:19] 1.5- View data that returned from API
[2023-07-02 08:27:19] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:27:19] 1.7- get data of each project to select 
[2023-07-02 08:27:19] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:27:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:27:19] 1.10- check project update number [PUN]if not found
[2023-07-02 08:27:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:27:19] 3.9- Finish cron_job Function
[2023-07-02 08:29:19] 1.1- Start cron_job Function
[2023-07-02 08:29:19] 1.2-request Api_url $api_url
[2023-07-02 08:29:19] 1.3-store events of the jop periodically during process 
[2023-07-02 08:29:19] 1.4- fetch data from Api
[2023-07-02 08:29:19] 1.5- View data that returned from API
[2023-07-02 08:29:19] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:29:19] 1.7- get data of each project to select 
[2023-07-02 08:29:19] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:29:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:29:19] 1.10- check project update number [PUN]if not found
[2023-07-02 08:29:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:29:19] 3.9- Finish cron_job Function
[2023-07-02 08:31:18] 1.1- Start cron_job Function
[2023-07-02 08:31:18] 1.2-request Api_url $api_url
[2023-07-02 08:31:18] 1.3-store events of the jop periodically during process 
[2023-07-02 08:31:18] 1.4- fetch data from Api
[2023-07-02 08:31:18] 1.5- View data that returned from API
[2023-07-02 08:31:18] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:31:18] 1.7- get data of each project to select 
[2023-07-02 08:31:18] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:31:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:31:18] 1.10- check project update number [PUN]if not found
[2023-07-02 08:31:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:31:18] 3.9- Finish cron_job Function
[2023-07-02 08:33:19] 1.1- Start cron_job Function
[2023-07-02 08:33:19] 1.2-request Api_url $api_url
[2023-07-02 08:33:20] 1.3-store events of the jop periodically during process 
[2023-07-02 08:33:20] 1.4- fetch data from Api
[2023-07-02 08:33:20] 1.5- View data that returned from API
[2023-07-02 08:33:20] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:33:20] 1.7- get data of each project to select 
[2023-07-02 08:33:20] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:33:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:33:20] 1.10- check project update number [PUN]if not found
[2023-07-02 08:33:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:33:20] 3.9- Finish cron_job Function
[2023-07-02 08:35:19] 1.1- Start cron_job Function
[2023-07-02 08:35:19] 1.2-request Api_url $api_url
[2023-07-02 08:35:19] 1.3-store events of the jop periodically during process 
[2023-07-02 08:35:19] 1.4- fetch data from Api
[2023-07-02 08:35:19] 1.5- View data that returned from API
[2023-07-02 08:35:19] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:35:19] 1.7- get data of each project to select 
[2023-07-02 08:35:19] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:35:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:35:19] 1.10- check project update number [PUN]if not found
[2023-07-02 08:35:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:35:19] 3.9- Finish cron_job Function
[2023-07-02 08:37:21] 1.1- Start cron_job Function
[2023-07-02 08:37:21] 1.2-request Api_url $api_url
[2023-07-02 08:37:21] 1.3-store events of the jop periodically during process 
[2023-07-02 08:37:21] 1.4- fetch data from Api
[2023-07-02 08:37:21] 1.5- View data that returned from API
[2023-07-02 08:37:21] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:37:21] 1.7- get data of each project to select 
[2023-07-02 08:37:21] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:37:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:37:21] 1.10- check project update number [PUN]if not found
[2023-07-02 08:37:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:37:21] 3.9- Finish cron_job Function
[2023-07-02 08:39:22] 1.1- Start cron_job Function
[2023-07-02 08:39:22] 1.2-request Api_url $api_url
[2023-07-02 08:39:22] 1.3-store events of the jop periodically during process 
[2023-07-02 08:39:22] 1.4- fetch data from Api
[2023-07-02 08:39:22] 1.5- View data that returned from API
[2023-07-02 08:39:22] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:39:22] 1.7- get data of each project to select 
[2023-07-02 08:39:22] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:39:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:39:22] 1.10- check project update number [PUN]if not found
[2023-07-02 08:39:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:39:22] 3.9- Finish cron_job Function
[2023-07-02 08:41:22] 1.1- Start cron_job Function
[2023-07-02 08:41:22] 1.2-request Api_url $api_url
[2023-07-02 08:41:23] 1.3-store events of the jop periodically during process 
[2023-07-02 08:41:23] 1.4- fetch data from Api
[2023-07-02 08:41:23] 1.5- View data that returned from API
[2023-07-02 08:41:23] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:41:23] 1.7- get data of each project to select 
[2023-07-02 08:41:23] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:41:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:41:23] 1.10- check project update number [PUN]if not found
[2023-07-02 08:41:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:41:23] 3.9- Finish cron_job Function
[2023-07-02 08:43:23] 1.1- Start cron_job Function
[2023-07-02 08:43:23] 1.2-request Api_url $api_url
[2023-07-02 08:43:24] 1.3-store events of the jop periodically during process 
[2023-07-02 08:43:24] 1.4- fetch data from Api
[2023-07-02 08:43:24] 1.5- View data that returned from API
[2023-07-02 08:43:24] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:43:24] 1.7- get data of each project to select 
[2023-07-02 08:43:24] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:43:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:43:24] 1.10- check project update number [PUN]if not found
[2023-07-02 08:43:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:43:24] 3.9- Finish cron_job Function
[2023-07-02 08:45:23] 1.1- Start cron_job Function
[2023-07-02 08:45:23] 1.2-request Api_url $api_url
[2023-07-02 08:45:24] 1.3-store events of the jop periodically during process 
[2023-07-02 08:45:24] 1.4- fetch data from Api
[2023-07-02 08:45:24] 1.5- View data that returned from API
[2023-07-02 08:45:24] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:45:24] 1.7- get data of each project to select 
[2023-07-02 08:45:24] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:45:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:45:24] 1.10- check project update number [PUN]if not found
[2023-07-02 08:45:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:45:24] 3.9- Finish cron_job Function
[2023-07-02 08:47:23] 1.1- Start cron_job Function
[2023-07-02 08:47:23] 1.2-request Api_url $api_url
[2023-07-02 08:47:23] 1.3-store events of the jop periodically during process 
[2023-07-02 08:47:23] 1.4- fetch data from Api
[2023-07-02 08:47:23] 1.5- View data that returned from API
[2023-07-02 08:47:23] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:47:23] 1.7- get data of each project to select 
[2023-07-02 08:47:23] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:47:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:47:23] 1.10- check project update number [PUN]if not found
[2023-07-02 08:47:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:47:23] 3.9- Finish cron_job Function
[2023-07-02 08:49:24] 1.1- Start cron_job Function
[2023-07-02 08:49:24] 1.2-request Api_url $api_url
[2023-07-02 08:49:24] 1.3-store events of the jop periodically during process 
[2023-07-02 08:49:24] 1.4- fetch data from Api
[2023-07-02 08:49:24] 1.5- View data that returned from API
[2023-07-02 08:49:24] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:49:24] 1.7- get data of each project to select 
[2023-07-02 08:49:24] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:49:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:49:24] 1.10- check project update number [PUN]if not found
[2023-07-02 08:49:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:49:24] 3.9- Finish cron_job Function
[2023-07-02 08:51:24] 1.1- Start cron_job Function
[2023-07-02 08:51:24] 1.2-request Api_url $api_url
[2023-07-02 08:51:25] 1.3-store events of the jop periodically during process 
[2023-07-02 08:51:25] 1.4- fetch data from Api
[2023-07-02 08:51:25] 1.5- View data that returned from API
[2023-07-02 08:51:25] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:51:25] 1.7- get data of each project to select 
[2023-07-02 08:51:25] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:51:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:51:25] 1.10- check project update number [PUN]if not found
[2023-07-02 08:51:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:51:25] 3.9- Finish cron_job Function
[2023-07-02 08:53:25] 1.1- Start cron_job Function
[2023-07-02 08:53:25] 1.2-request Api_url $api_url
[2023-07-02 08:53:26] 1.3-store events of the jop periodically during process 
[2023-07-02 08:53:26] 1.4- fetch data from Api
[2023-07-02 08:53:26] 1.5- View data that returned from API
[2023-07-02 08:53:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:53:26] 1.7- get data of each project to select 
[2023-07-02 08:53:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:53:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:53:26] 1.10- check project update number [PUN]if not found
[2023-07-02 08:53:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:53:26] 3.9- Finish cron_job Function
[2023-07-02 08:55:25] 1.1- Start cron_job Function
[2023-07-02 08:55:25] 1.2-request Api_url $api_url
[2023-07-02 08:55:25] 1.3-store events of the jop periodically during process 
[2023-07-02 08:55:25] 1.4- fetch data from Api
[2023-07-02 08:55:25] 1.5- View data that returned from API
[2023-07-02 08:55:25] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:55:25] 1.7- get data of each project to select 
[2023-07-02 08:55:25] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:55:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:55:25] 1.10- check project update number [PUN]if not found
[2023-07-02 08:55:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:55:25] 3.9- Finish cron_job Function
[2023-07-02 08:57:25] 1.1- Start cron_job Function
[2023-07-02 08:57:25] 1.2-request Api_url $api_url
[2023-07-02 08:57:26] 1.3-store events of the jop periodically during process 
[2023-07-02 08:57:26] 1.4- fetch data from Api
[2023-07-02 08:57:26] 1.5- View data that returned from API
[2023-07-02 08:57:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:57:26] 1.7- get data of each project to select 
[2023-07-02 08:57:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:57:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:57:26] 1.10- check project update number [PUN]if not found
[2023-07-02 08:57:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:57:26] 3.9- Finish cron_job Function
[2023-07-02 08:59:25] 1.1- Start cron_job Function
[2023-07-02 08:59:25] 1.2-request Api_url $api_url
[2023-07-02 08:59:26] 1.3-store events of the jop periodically during process 
[2023-07-02 08:59:26] 1.4- fetch data from Api
[2023-07-02 08:59:26] 1.5- View data that returned from API
[2023-07-02 08:59:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 08:59:26] 1.7- get data of each project to select 
[2023-07-02 08:59:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 08:59:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 08:59:26] 1.10- check project update number [PUN]if not found
[2023-07-02 08:59:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 08:59:26] 3.9- Finish cron_job Function
[2023-07-02 09:01:25] 1.1- Start cron_job Function
[2023-07-02 09:01:25] 1.2-request Api_url $api_url
[2023-07-02 09:01:25] 1.3-store events of the jop periodically during process 
[2023-07-02 09:01:25] 1.4- fetch data from Api
[2023-07-02 09:01:25] 1.5- View data that returned from API
[2023-07-02 09:01:25] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:01:25] 1.7- get data of each project to select 
[2023-07-02 09:01:25] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:01:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:01:25] 1.10- check project update number [PUN]if not found
[2023-07-02 09:01:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:01:25] 3.9- Finish cron_job Function
[2023-07-02 09:03:26] 1.1- Start cron_job Function
[2023-07-02 09:03:26] 1.2-request Api_url $api_url
[2023-07-02 09:03:26] 1.3-store events of the jop periodically during process 
[2023-07-02 09:03:26] 1.4- fetch data from Api
[2023-07-02 09:03:26] 1.5- View data that returned from API
[2023-07-02 09:03:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:03:26] 1.7- get data of each project to select 
[2023-07-02 09:03:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:03:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:03:26] 1.10- check project update number [PUN]if not found
[2023-07-02 09:03:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:03:26] 3.9- Finish cron_job Function
[2023-07-02 09:05:26] 1.1- Start cron_job Function
[2023-07-02 09:05:26] 1.2-request Api_url $api_url
[2023-07-02 09:05:26] 1.3-store events of the jop periodically during process 
[2023-07-02 09:05:26] 1.4- fetch data from Api
[2023-07-02 09:05:26] 1.5- View data that returned from API
[2023-07-02 09:05:26] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:05:26] 1.7- get data of each project to select 
[2023-07-02 09:05:26] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:05:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:05:26] 1.10- check project update number [PUN]if not found
[2023-07-02 09:05:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:05:26] 3.9- Finish cron_job Function
[2023-07-02 09:07:27] 1.1- Start cron_job Function
[2023-07-02 09:07:27] 1.2-request Api_url $api_url
[2023-07-02 09:07:27] 1.3-store events of the jop periodically during process 
[2023-07-02 09:07:27] 1.4- fetch data from Api
[2023-07-02 09:07:27] 1.5- View data that returned from API
[2023-07-02 09:07:27] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:07:27] 1.7- get data of each project to select 
[2023-07-02 09:07:27] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:07:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:07:27] 1.10- check project update number [PUN]if not found
[2023-07-02 09:07:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:07:27] 3.9- Finish cron_job Function
[2023-07-02 09:09:28] 1.1- Start cron_job Function
[2023-07-02 09:09:28] 1.2-request Api_url $api_url
[2023-07-02 09:09:28] 1.3-store events of the jop periodically during process 
[2023-07-02 09:09:28] 1.4- fetch data from Api
[2023-07-02 09:09:28] 1.5- View data that returned from API
[2023-07-02 09:09:28] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:09:28] 1.7- get data of each project to select 
[2023-07-02 09:09:28] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:09:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:09:28] 1.10- check project update number [PUN]if not found
[2023-07-02 09:09:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:09:28] 3.9- Finish cron_job Function
[2023-07-02 09:11:27] 1.1- Start cron_job Function
[2023-07-02 09:11:27] 1.2-request Api_url $api_url
[2023-07-02 09:11:28] 1.3-store events of the jop periodically during process 
[2023-07-02 09:11:28] 1.4- fetch data from Api
[2023-07-02 09:11:28] 1.5- View data that returned from API
[2023-07-02 09:11:28] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:11:28] 1.7- get data of each project to select 
[2023-07-02 09:11:28] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:11:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:11:28] 1.10- check project update number [PUN]if not found
[2023-07-02 09:11:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:11:28] 3.9- Finish cron_job Function
[2023-07-02 09:13:28] 1.1- Start cron_job Function
[2023-07-02 09:13:28] 1.2-request Api_url $api_url
[2023-07-02 09:13:28] 1.3-store events of the jop periodically during process 
[2023-07-02 09:13:28] 1.4- fetch data from Api
[2023-07-02 09:13:28] 1.5- View data that returned from API
[2023-07-02 09:13:28] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:13:28] 1.7- get data of each project to select 
[2023-07-02 09:13:28] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:13:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:13:28] 1.10- check project update number [PUN]if not found
[2023-07-02 09:13:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:13:28] 3.9- Finish cron_job Function
[2023-07-02 09:15:28] 1.1- Start cron_job Function
[2023-07-02 09:15:28] 1.2-request Api_url $api_url
[2023-07-02 09:15:29] 1.3-store events of the jop periodically during process 
[2023-07-02 09:15:29] 1.4- fetch data from Api
[2023-07-02 09:15:29] 1.5- View data that returned from API
[2023-07-02 09:15:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:15:29] 1.7- get data of each project to select 
[2023-07-02 09:15:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:15:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:15:29] 1.10- check project update number [PUN]if not found
[2023-07-02 09:15:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:15:29] 3.9- Finish cron_job Function
[2023-07-02 09:17:28] 1.1- Start cron_job Function
[2023-07-02 09:17:28] 1.2-request Api_url $api_url
[2023-07-02 09:17:29] 1.3-store events of the jop periodically during process 
[2023-07-02 09:17:29] 1.4- fetch data from Api
[2023-07-02 09:17:29] 1.5- View data that returned from API
[2023-07-02 09:17:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:17:29] 1.7- get data of each project to select 
[2023-07-02 09:17:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:17:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:17:29] 1.10- check project update number [PUN]if not found
[2023-07-02 09:17:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:17:29] 3.9- Finish cron_job Function
[2023-07-02 09:19:30] 1.1- Start cron_job Function
[2023-07-02 09:19:30] 1.2-request Api_url $api_url
[2023-07-02 09:19:30] 1.3-store events of the jop periodically during process 
[2023-07-02 09:19:30] 1.4- fetch data from Api
[2023-07-02 09:19:30] 1.5- View data that returned from API
[2023-07-02 09:19:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:19:30] 1.7- get data of each project to select 
[2023-07-02 09:19:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:19:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:19:30] 1.10- check project update number [PUN]if not found
[2023-07-02 09:19:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:19:30] 3.9- Finish cron_job Function
[2023-07-02 09:21:29] 1.1- Start cron_job Function
[2023-07-02 09:21:29] 1.2-request Api_url $api_url
[2023-07-02 09:21:29] 1.3-store events of the jop periodically during process 
[2023-07-02 09:21:29] 1.4- fetch data from Api
[2023-07-02 09:21:29] 1.5- View data that returned from API
[2023-07-02 09:21:29] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:21:29] 1.7- get data of each project to select 
[2023-07-02 09:21:29] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:21:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:21:29] 1.10- check project update number [PUN]if not found
[2023-07-02 09:21:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:21:29] 3.9- Finish cron_job Function
[2023-07-02 09:23:29] 1.1- Start cron_job Function
[2023-07-02 09:23:29] 1.2-request Api_url $api_url
[2023-07-02 09:23:30] 1.3-store events of the jop periodically during process 
[2023-07-02 09:23:30] 1.4- fetch data from Api
[2023-07-02 09:23:30] 1.5- View data that returned from API
[2023-07-02 09:23:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:23:30] 1.7- get data of each project to select 
[2023-07-02 09:23:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:23:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:23:30] 1.10- check project update number [PUN]if not found
[2023-07-02 09:23:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:23:30] 3.9- Finish cron_job Function
[2023-07-02 09:25:30] 1.1- Start cron_job Function
[2023-07-02 09:25:30] 1.2-request Api_url $api_url
[2023-07-02 09:25:31] 1.3-store events of the jop periodically during process 
[2023-07-02 09:25:31] 1.4- fetch data from Api
[2023-07-02 09:25:31] 1.5- View data that returned from API
[2023-07-02 09:25:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:25:31] 1.7- get data of each project to select 
[2023-07-02 09:25:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:25:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:25:31] 1.10- check project update number [PUN]if not found
[2023-07-02 09:25:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:25:31] 3.9- Finish cron_job Function
[2023-07-02 09:27:30] 1.1- Start cron_job Function
[2023-07-02 09:27:30] 1.2-request Api_url $api_url
[2023-07-02 09:27:30] 1.3-store events of the jop periodically during process 
[2023-07-02 09:27:30] 1.4- fetch data from Api
[2023-07-02 09:27:30] 1.5- View data that returned from API
[2023-07-02 09:27:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:27:30] 1.7- get data of each project to select 
[2023-07-02 09:27:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:27:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:27:30] 1.10- check project update number [PUN]if not found
[2023-07-02 09:27:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:27:30] 3.9- Finish cron_job Function
[2023-07-02 09:29:30] 1.1- Start cron_job Function
[2023-07-02 09:29:30] 1.2-request Api_url $api_url
[2023-07-02 09:29:31] 1.3-store events of the jop periodically during process 
[2023-07-02 09:29:31] 1.4- fetch data from Api
[2023-07-02 09:29:31] 1.5- View data that returned from API
[2023-07-02 09:29:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:29:31] 1.7- get data of each project to select 
[2023-07-02 09:29:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:29:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:29:31] 1.10- check project update number [PUN]if not found
[2023-07-02 09:29:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:29:31] 3.9- Finish cron_job Function
[2023-07-02 09:31:31] 1.1- Start cron_job Function
[2023-07-02 09:31:31] 1.2-request Api_url $api_url
[2023-07-02 09:31:32] 1.3-store events of the jop periodically during process 
[2023-07-02 09:31:32] 1.4- fetch data from Api
[2023-07-02 09:31:32] 1.5- View data that returned from API
[2023-07-02 09:31:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:31:32] 1.7- get data of each project to select 
[2023-07-02 09:31:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:31:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:31:32] 1.10- check project update number [PUN]if not found
[2023-07-02 09:31:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:31:32] 2.2- check if project update number[pun > 0]
[2023-07-02 09:31:32] 2.3- store data into history table
[2023-07-02 09:31:32] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:34] 3.1- start_process
[2023-07-02 09:31:34] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 09:31:34] 3.3- if aun status > 0 
[2023-07-02 09:31:35] 3.1- start_process
[2023-07-02 09:31:35] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 09:31:35] 3.3- if aun status > 0 
[2023-07-02 09:31:35] 2.7-changed the new pun 4 
[2023-07-02 09:31:35] 2.8- register updated_app in event table
[2023-07-02 09:31:35] 2.9- set status {'updated'}
[2023-07-02 09:31:35] 3.1- start_process
[2023-07-02 09:31:35] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 09:31:35] 3.3- if aun status > 0 
[2023-07-02 09:31:35] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 09:31:35] 3.7 check if the keys exists, update data
[2023-07-02 09:31:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:35] 3.5 check  the app have key '..' if not found 
[2023-07-02 09:31:35] 3.6- Insert  all keys 
[2023-07-02 09:31:35] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 09:31:35] 3.7 check if the keys exists, update data
[2023-07-02 09:31:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:35] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 09:31:35] 3.7 check if the keys exists, update data
[2023-07-02 09:31:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:36] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 09:31:36] 3.7 check if the keys exists, update data
[2023-07-02 09:31:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:36] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 09:31:36] 3.7 check if the keys exists, update data
[2023-07-02 09:31:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:36] 3.5 check  the app have key '.last_update.' if not found 
[2023-07-02 09:31:36] 3.7 check if the keys exists, update data
[2023-07-02 09:31:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:36] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 09:31:36] 3.7 check if the keys exists, update data
[2023-07-02 09:31:36] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:36] 3.1- start_process
[2023-07-02 09:31:36] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 09:31:36] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:37] 3.1- start_process
[2023-07-02 09:31:37] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 09:31:37] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:38] 3.1- start_process
[2023-07-02 09:31:38] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 09:31:38] 3.3- if aun status > 0 
[2023-07-02 09:31:39] 3.1- start_process
[2023-07-02 09:31:39] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 09:31:39] 3.3- if aun status > 0 
[2023-07-02 09:31:39] 3.1- start_process
[2023-07-02 09:31:39] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 09:31:39] 3.3- if aun status > 0 
[2023-07-02 09:31:39] 3.1- start_process
[2023-07-02 09:31:39] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 09:31:39] 3.3- if aun status > 0 
[2023-07-02 09:31:39] 2.7-changed the new pun 14 
[2023-07-02 09:31:39] 2.8- register updated_app in event table
[2023-07-02 09:31:39] 2.9- set status {'updated'}
[2023-07-02 09:31:39] 3.1- start_process
[2023-07-02 09:31:39] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 09:31:39] 3.3- if aun status > 0 
[2023-07-02 09:31:39] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 09:31:39] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '..' if not found 
[2023-07-02 09:31:40] 3.6- Insert  all keys 
[2023-07-02 09:31:40] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.5 check  the app have key '.last_update.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:40] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:40] 3.1- start_process
[2023-07-02 09:31:40] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 09:31:40] 3.3- if aun status > 0 
[2023-07-02 09:31:40] 3.1- start_process
[2023-07-02 09:31:40] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 09:31:40] 3.3- if aun status > 0 
[2023-07-02 09:31:40] 3.1- start_process
[2023-07-02 09:31:40] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 09:31:40] 3.3- if aun status > 0 
[2023-07-02 09:31:40] 2.7-changed the new pun 9 
[2023-07-02 09:31:40] 2.8- register updated_app in event table
[2023-07-02 09:31:40] 2.9- set status {'updated'}
[2023-07-02 09:31:40] 3.1- start_process
[2023-07-02 09:31:40] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 09:31:40] 3.3- if aun status > 0 
[2023-07-02 09:31:40] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 09:31:40] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '..' if not found 
[2023-07-02 09:31:42] 3.6- Insert  all keys 
[2023-07-02 09:31:42] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.5 check  the app have key '.last_update.' if not found 
[2023-07-02 09:31:42] 3.7 check if the keys exists, update data
[2023-07-02 09:31:42] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:31:42] 3.1- start_process
[2023-07-02 09:31:42] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 09:31:42] 3.3- if aun status > 0 
[2023-07-02 09:31:42] 3.1- start_process
[2023-07-02 09:31:42] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 09:31:42] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:43] 3.1- start_process
[2023-07-02 09:31:43] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 09:31:43] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:44] 3.1- start_process
[2023-07-02 09:31:44] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 09:31:44] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.1- start_process
[2023-07-02 09:31:45] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 09:31:45] 3.3- if aun status > 0 
[2023-07-02 09:31:45] 3.9- Finish cron_job Function
[2023-07-02 09:33:31] 1.1- Start cron_job Function
[2023-07-02 09:33:31] 1.2-request Api_url $api_url
[2023-07-02 09:33:32] 1.3-store events of the jop periodically during process 
[2023-07-02 09:33:32] 1.4- fetch data from Api
[2023-07-02 09:33:32] 1.5- View data that returned from API
[2023-07-02 09:33:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:33:32] 1.7- get data of each project to select 
[2023-07-02 09:33:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:33:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:33:32] 1.10- check project update number [PUN]if not found
[2023-07-02 09:33:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:33:32] 3.9- Finish cron_job Function
[2023-07-02 09:35:31] 1.1- Start cron_job Function
[2023-07-02 09:35:31] 1.2-request Api_url $api_url
[2023-07-02 09:35:31] 1.3-store events of the jop periodically during process 
[2023-07-02 09:35:31] 1.4- fetch data from Api
[2023-07-02 09:35:31] 1.5- View data that returned from API
[2023-07-02 09:35:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:35:31] 1.7- get data of each project to select 
[2023-07-02 09:35:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:35:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:35:31] 1.10- check project update number [PUN]if not found
[2023-07-02 09:35:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:35:31] 3.9- Finish cron_job Function
[2023-07-02 09:37:31] 1.1- Start cron_job Function
[2023-07-02 09:37:31] 1.2-request Api_url $api_url
[2023-07-02 09:37:32] 1.3-store events of the jop periodically during process 
[2023-07-02 09:37:32] 1.4- fetch data from Api
[2023-07-02 09:37:32] 1.5- View data that returned from API
[2023-07-02 09:37:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:37:32] 1.7- get data of each project to select 
[2023-07-02 09:37:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:37:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:37:32] 1.10- check project update number [PUN]if not found
[2023-07-02 09:37:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:37:32] 3.9- Finish cron_job Function
[2023-07-02 09:38:33] 1.1- Start cron_job Function
[2023-07-02 09:38:33] 1.2-request Api_url $api_url
[2023-07-02 09:38:34] 1.3-store events of the jop periodically during process 
[2023-07-02 09:38:34] 1.4- fetch data from Api
[2023-07-02 09:38:34] 1.5- View data that returned from API
[2023-07-02 09:38:34] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:38:34] 1.7- get data of each project to select 
[2023-07-02 09:38:34] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:38:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:38:34] 1.10- check project update number [PUN]if not found
[2023-07-02 09:38:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:38:34] 3.9- Finish cron_job Function
[2023-07-02 09:40:32] 1.1- Start cron_job Function
[2023-07-02 09:40:32] 1.2-request Api_url $api_url
[2023-07-02 09:40:33] 1.3-store events of the jop periodically during process 
[2023-07-02 09:40:33] 1.4- fetch data from Api
[2023-07-02 09:40:33] 1.5- View data that returned from API
[2023-07-02 09:40:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:40:33] 1.7- get data of each project to select 
[2023-07-02 09:40:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:40:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:40:33] 1.10- check project update number [PUN]if not found
[2023-07-02 09:40:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:40:33] 2.2- check if project update number[pun > 0]
[2023-07-02 09:40:33] 2.3- store data into history table
[2023-07-02 09:40:33] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 09:40:34] 2.7-changed the new pun 291 
[2023-07-02 09:40:34] 2.8- register updated_app in event table
[2023-07-02 09:40:34] 2.9- set status {'updated'}
[2023-07-02 09:40:34] 3.1- start_process
[2023-07-02 09:40:34] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 09:40:34] 3.3- if aun status > 0 
[2023-07-02 09:40:34] 3.5 check  the app have key '.rating.' if not found 
[2023-07-02 09:40:34] 3.7 check if the keys exists, update data
[2023-07-02 09:40:34] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:34] 3.5 check  the app have key '.version.' if not found 
[2023-07-02 09:40:34] 3.7 check if the keys exists, update data
[2023-07-02 09:40:34] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:34] 3.5 check  the app have key '..' if not found 
[2023-07-02 09:40:34] 3.6- Insert  all keys 
[2023-07-02 09:40:34] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-02 09:40:34] 3.7 check if the keys exists, update data
[2023-07-02 09:40:34] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:34] 3.5 check  the app have key '.logo.' if not found 
[2023-07-02 09:40:34] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.link.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.author.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.votes.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.5 check  the app have key '.file.' if not found 
[2023-07-02 09:40:35] 3.7 check if the keys exists, update data
[2023-07-02 09:40:35] 3.8- update all keys & logo & thumbnail 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:35] 3.1- start_process
[2023-07-02 09:40:35] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 09:40:35] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:36] 3.1- start_process
[2023-07-02 09:40:36] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 09:40:36] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:37] 3.1- start_process
[2023-07-02 09:40:37] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 09:40:37] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:38] 3.1- start_process
[2023-07-02 09:40:38] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 09:40:38] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:39] 3.1- start_process
[2023-07-02 09:40:39] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 09:40:39] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:40] 3.1- start_process
[2023-07-02 09:40:40] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 09:40:40] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:41] 3.1- start_process
[2023-07-02 09:40:41] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 09:40:41] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.1- start_process
[2023-07-02 09:40:42] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 09:40:42] 3.3- if aun status > 0 
[2023-07-02 09:40:42] 3.9- Finish cron_job Function
[2023-07-02 09:42:32] 1.1- Start cron_job Function
[2023-07-02 09:42:32] 1.2-request Api_url $api_url
[2023-07-02 09:42:33] 1.3-store events of the jop periodically during process 
[2023-07-02 09:42:33] 1.4- fetch data from Api
[2023-07-02 09:42:33] 1.5- View data that returned from API
[2023-07-02 09:42:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:42:33] 1.7- get data of each project to select 
[2023-07-02 09:42:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:42:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:42:33] 1.10- check project update number [PUN]if not found
[2023-07-02 09:42:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:42:33] 3.9- Finish cron_job Function
[2023-07-02 09:44:01] 1.1- Start cron_job Function
[2023-07-02 09:44:01] 1.2-request Api_url $api_url
[2023-07-02 09:44:02] 1.3-store events of the jop periodically during process 
[2023-07-02 09:44:02] 1.4- fetch data from Api
[2023-07-02 09:44:02] 1.5- View data that returned from API
[2023-07-02 09:44:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:44:02] 1.7- get data of each project to select 
[2023-07-02 09:44:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:44:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:44:02] 1.10- check project update number [PUN]if not found
[2023-07-02 09:44:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:44:02] 3.9- Finish cron_job Function
[2023-07-02 09:44:32] 1.1- Start cron_job Function
[2023-07-02 09:44:32] 1.2-request Api_url $api_url
[2023-07-02 09:44:33] 1.3-store events of the jop periodically during process 
[2023-07-02 09:44:33] 1.4- fetch data from Api
[2023-07-02 09:44:33] 1.5- View data that returned from API
[2023-07-02 09:44:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:44:33] 1.7- get data of each project to select 
[2023-07-02 09:44:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:44:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:44:33] 1.10- check project update number [PUN]if not found
[2023-07-02 09:44:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:44:33] 3.9- Finish cron_job Function
[2023-07-02 09:46:02] 1.1- Start cron_job Function
[2023-07-02 09:46:02] 1.2-request Api_url $api_url
[2023-07-02 09:46:03] 1.3-store events of the jop periodically during process 
[2023-07-02 09:46:03] 1.4- fetch data from Api
[2023-07-02 09:46:03] 1.5- View data that returned from API
[2023-07-02 09:46:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:46:03] 1.7- get data of each project to select 
[2023-07-02 09:46:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:46:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:46:03] 1.10- check project update number [PUN]if not found
[2023-07-02 09:46:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:46:03] 3.9- Finish cron_job Function
[2023-07-02 09:46:33] 1.1- Start cron_job Function
[2023-07-02 09:46:33] 1.2-request Api_url $api_url
[2023-07-02 09:46:33] 1.3-store events of the jop periodically during process 
[2023-07-02 09:46:33] 1.4- fetch data from Api
[2023-07-02 09:46:33] 1.5- View data that returned from API
[2023-07-02 09:46:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:46:33] 1.7- get data of each project to select 
[2023-07-02 09:46:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:46:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:46:33] 1.10- check project update number [PUN]if not found
[2023-07-02 09:46:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:46:33] 3.9- Finish cron_job Function
[2023-07-02 09:47:39] 1.1- Start cron_job Function
[2023-07-02 09:47:39] 1.2-request Api_url $api_url
[2023-07-02 09:47:40] 1.3-store events of the jop periodically during process 
[2023-07-02 09:47:40] 1.4- fetch data from Api
[2023-07-02 09:47:40] 1.5- View data that returned from API
[2023-07-02 09:47:40] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:47:40] 1.7- get data of each project to select 
[2023-07-02 09:47:40] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:47:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:47:40] 1.10- check project update number [PUN]if not found
[2023-07-02 09:47:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:47:40] 3.9- Finish cron_job Function
[2023-07-02 09:48:48] 1.1- Start cron_job Function
[2023-07-02 09:48:48] 1.2-request Api_url $api_url
[2023-07-02 09:48:49] 1.3-store events of the jop periodically during process 
[2023-07-02 09:48:49] 1.4- fetch data from Api
[2023-07-02 09:48:49] 1.5- View data that returned from API
[2023-07-02 09:48:49] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:48:49] 1.7- get data of each project to select 
[2023-07-02 09:48:49] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:48:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:48:49] 1.10- check project update number [PUN]if not found
[2023-07-02 09:48:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:48:49] 3.9- Finish cron_job Function
[2023-07-02 09:49:40] 1.1- Start cron_job Function
[2023-07-02 09:49:40] 1.2-request Api_url $api_url
[2023-07-02 09:49:40] 1.3-store events of the jop periodically during process 
[2023-07-02 09:49:40] 1.4- fetch data from Api
[2023-07-02 09:49:40] 1.5- View data that returned from API
[2023-07-02 09:49:40] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:49:40] 1.7- get data of each project to select 
[2023-07-02 09:49:40] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:49:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:49:40] 1.10- check project update number [PUN]if not found
[2023-07-02 09:49:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:49:40] 3.9- Finish cron_job Function
[2023-07-02 09:50:49] 1.1- Start cron_job Function
[2023-07-02 09:50:49] 1.2-request Api_url $api_url
[2023-07-02 09:50:49] 1.3-store events of the jop periodically during process 
[2023-07-02 09:50:49] 1.4- fetch data from Api
[2023-07-02 09:50:49] 1.5- View data that returned from API
[2023-07-02 09:50:49] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:50:49] 1.7- get data of each project to select 
[2023-07-02 09:50:49] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:50:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:50:49] 1.10- check project update number [PUN]if not found
[2023-07-02 09:50:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:50:49] 3.9- Finish cron_job Function
[2023-07-02 09:51:33] 1.1- Start cron_job Function
[2023-07-02 09:51:33] 1.2-request Api_url $api_url
[2023-07-02 09:51:33] 1.3-store events of the jop periodically during process 
[2023-07-02 09:51:33] 1.4- fetch data from Api
[2023-07-02 09:51:33] 1.5- View data that returned from API
[2023-07-02 09:51:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:51:33] 1.7- get data of each project to select 
[2023-07-02 09:51:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:51:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:51:33] 1.10- check project update number [PUN]if not found
[2023-07-02 09:51:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:51:33] 3.9- Finish cron_job Function
[2023-07-02 09:53:41] 1.1- Start cron_job Function
[2023-07-02 09:53:41] 1.2-request Api_url $api_url
[2023-07-02 09:53:42] 1.3-store events of the jop periodically during process 
[2023-07-02 09:53:42] 1.4- fetch data from Api
[2023-07-02 09:53:42] 1.5- View data that returned from API
[2023-07-02 09:53:42] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:53:42] 1.7- get data of each project to select 
[2023-07-02 09:53:42] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:53:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:53:42] 1.10- check project update number [PUN]if not found
[2023-07-02 09:53:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:53:42] 3.9- Finish cron_job Function
[2023-07-02 09:55:42] 1.1- Start cron_job Function
[2023-07-02 09:55:42] 1.2-request Api_url $api_url
[2023-07-02 09:55:42] 1.3-store events of the jop periodically during process 
[2023-07-02 09:55:42] 1.4- fetch data from Api
[2023-07-02 09:55:42] 1.5- View data that returned from API
[2023-07-02 09:55:42] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:55:42] 1.7- get data of each project to select 
[2023-07-02 09:55:42] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:55:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:55:42] 1.10- check project update number [PUN]if not found
[2023-07-02 09:55:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:55:42] 3.9- Finish cron_job Function
[2023-07-02 09:57:43] 1.1- Start cron_job Function
[2023-07-02 09:57:43] 1.2-request Api_url $api_url
[2023-07-02 09:57:44] 1.3-store events of the jop periodically during process 
[2023-07-02 09:57:44] 1.4- fetch data from Api
[2023-07-02 09:57:44] 1.5- View data that returned from API
[2023-07-02 09:57:44] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:57:44] 1.7- get data of each project to select 
[2023-07-02 09:57:44] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:57:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:57:44] 1.10- check project update number [PUN]if not found
[2023-07-02 09:57:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:57:44] 3.9- Finish cron_job Function
[2023-07-02 09:59:51] 1.1- Start cron_job Function
[2023-07-02 09:59:51] 1.2-request Api_url $api_url
[2023-07-02 09:59:52] 1.3-store events of the jop periodically during process 
[2023-07-02 09:59:52] 1.4- fetch data from Api
[2023-07-02 09:59:52] 1.5- View data that returned from API
[2023-07-02 09:59:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 09:59:52] 1.7- get data of each project to select 
[2023-07-02 09:59:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 09:59:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 09:59:52] 1.10- check project update number [PUN]if not found
[2023-07-02 09:59:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 09:59:52] 3.9- Finish cron_job Function
[2023-07-02 10:00:52] 1.1- Start cron_job Function
[2023-07-02 10:00:52] 1.2-request Api_url $api_url
[2023-07-02 10:00:53] 1.3-store events of the jop periodically during process 
[2023-07-02 10:00:53] 1.4- fetch data from Api
[2023-07-02 10:00:53] 1.5- View data that returned from API
[2023-07-02 10:00:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:00:53] 1.7- get data of each project to select 
[2023-07-02 10:00:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:00:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:00:53] 1.10- check project update number [PUN]if not found
[2023-07-02 10:00:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:00:53] 3.9- Finish cron_job Function
[2023-07-02 10:01:33] 1.1- Start cron_job Function
[2023-07-02 10:01:33] 1.2-request Api_url $api_url
[2023-07-02 10:01:34] 1.3-store events of the jop periodically during process 
[2023-07-02 10:01:34] 1.4- fetch data from Api
[2023-07-02 10:01:34] 1.5- View data that returned from API
[2023-07-02 10:01:34] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:01:34] 1.7- get data of each project to select 
[2023-07-02 10:01:34] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:01:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:01:34] 1.10- check project update number [PUN]if not found
[2023-07-02 10:01:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:01:34] 3.9- Finish cron_job Function
[2023-07-02 10:02:33] 1.1- Start cron_job Function
[2023-07-02 10:02:33] 1.2-request Api_url $api_url
[2023-07-02 10:02:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:02:33] 1.4- fetch data from Api
[2023-07-02 10:02:33] 1.5- View data that returned from API
[2023-07-02 10:02:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:02:33] 1.7- get data of each project to select 
[2023-07-02 10:02:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:02:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:02:34] 1.10- check project update number [PUN]if not found
[2023-07-02 10:02:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:02:34] 3.9- Finish cron_job Function
[2023-07-02 10:04:14] 1.1- Start cron_job Function
[2023-07-02 10:04:14] 1.2-request Api_url $api_url
[2023-07-02 10:04:15] 1.3-store events of the jop periodically during process 
[2023-07-02 10:04:15] 1.4- fetch data from Api
[2023-07-02 10:04:15] 1.5- View data that returned from API
[2023-07-02 10:04:15] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:04:15] 1.7- get data of each project to select 
[2023-07-02 10:04:15] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:04:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:04:15] 1.10- check project update number [PUN]if not found
[2023-07-02 10:04:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:04:15] 3.9- Finish cron_job Function
[2023-07-02 10:04:51] 1.1- Start cron_job Function
[2023-07-02 10:04:51] 1.2-request Api_url $api_url
[2023-07-02 10:04:51] 1.3-store events of the jop periodically during process 
[2023-07-02 10:04:51] 1.4- fetch data from Api
[2023-07-02 10:04:51] 1.5- View data that returned from API
[2023-07-02 10:04:51] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:04:51] 1.7- get data of each project to select 
[2023-07-02 10:04:51] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:04:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:04:51] 1.10- check project update number [PUN]if not found
[2023-07-02 10:04:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:04:51] 3.9- Finish cron_job Function
[2023-07-02 10:05:36] 1.1- Start cron_job Function
[2023-07-02 10:05:36] 1.2-request Api_url $api_url
[2023-07-02 10:05:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:05:36] 1.4- fetch data from Api
[2023-07-02 10:05:36] 1.5- View data that returned from API
[2023-07-02 10:05:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:05:36] 1.7- get data of each project to select 
[2023-07-02 10:05:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:05:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:05:36] 1.10- check project update number [PUN]if not found
[2023-07-02 10:05:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:05:36] 3.9- Finish cron_job Function
[2023-07-02 10:07:36] 1.1- Start cron_job Function
[2023-07-02 10:07:36] 1.2-request Api_url $api_url
[2023-07-02 10:07:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:07:36] 1.4- fetch data from Api
[2023-07-02 10:07:36] 1.5- View data that returned from API
[2023-07-02 10:07:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:07:36] 1.7- get data of each project to select 
[2023-07-02 10:07:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:07:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:07:36] 1.10- check project update number [PUN]if not found
[2023-07-02 10:07:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:07:36] 3.9- Finish cron_job Function
[2023-07-02 10:09:34] 1.1- Start cron_job Function
[2023-07-02 10:09:34] 1.2-request Api_url $api_url
[2023-07-02 10:09:35] 1.3-store events of the jop periodically during process 
[2023-07-02 10:09:35] 1.4- fetch data from Api
[2023-07-02 10:09:35] 1.5- View data that returned from API
[2023-07-02 10:09:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:09:35] 1.7- get data of each project to select 
[2023-07-02 10:09:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:09:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:09:35] 1.10- check project update number [PUN]if not found
[2023-07-02 10:09:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:09:35] 3.9- Finish cron_job Function
[2023-07-02 10:10:36] 1.1- Start cron_job Function
[2023-07-02 10:10:36] 1.2-request Api_url $api_url
[2023-07-02 10:10:37] 1.3-store events of the jop periodically during process 
[2023-07-02 10:10:37] 1.4- fetch data from Api
[2023-07-02 10:10:37] 1.5- View data that returned from API
[2023-07-02 10:10:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:10:37] 1.7- get data of each project to select 
[2023-07-02 10:10:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:10:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:10:37] 1.10- check project update number [PUN]if not found
[2023-07-02 10:10:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:10:37] 3.9- Finish cron_job Function
[2023-07-02 10:11:35] 1.1- Start cron_job Function
[2023-07-02 10:11:35] 1.2-request Api_url $api_url
[2023-07-02 10:11:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:11:36] 1.4- fetch data from Api
[2023-07-02 10:11:36] 1.5- View data that returned from API
[2023-07-02 10:11:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:11:36] 1.7- get data of each project to select 
[2023-07-02 10:11:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:11:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:11:36] 1.10- check project update number [PUN]if not found
[2023-07-02 10:11:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:11:36] 3.9- Finish cron_job Function
[2023-07-02 10:12:36] 1.1- Start cron_job Function
[2023-07-02 10:12:36] 1.2-request Api_url $api_url
[2023-07-02 10:12:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:12:37] 1.4- fetch data from Api
[2023-07-02 10:12:37] 1.5- View data that returned from API
[2023-07-02 10:12:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:12:37] 1.7- get data of each project to select 
[2023-07-02 10:12:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:12:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:12:37] 1.10- check project update number [PUN]if not found
[2023-07-02 10:12:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:12:37] 3.9- Finish cron_job Function
[2023-07-02 10:13:35] 1.1- Start cron_job Function
[2023-07-02 10:13:35] 1.2-request Api_url $api_url
[2023-07-02 10:13:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:13:36] 1.4- fetch data from Api
[2023-07-02 10:13:36] 1.5- View data that returned from API
[2023-07-02 10:13:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:13:36] 1.7- get data of each project to select 
[2023-07-02 10:13:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:13:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:13:36] 1.10- check project update number [PUN]if not found
[2023-07-02 10:13:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:13:36] 3.9- Finish cron_job Function
[2023-07-02 10:14:36] 1.1- Start cron_job Function
[2023-07-02 10:14:36] 1.2-request Api_url $api_url
[2023-07-02 10:14:36] 1.3-store events of the jop periodically during process 
[2023-07-02 10:14:36] 1.4- fetch data from Api
[2023-07-02 10:14:36] 1.5- View data that returned from API
[2023-07-02 10:14:36] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:14:36] 1.7- get data of each project to select 
[2023-07-02 10:14:36] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:14:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:14:36] 1.10- check project update number [PUN]if not found
[2023-07-02 10:14:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:14:36] 3.9- Finish cron_job Function
[2023-07-02 10:15:36] 1.1- Start cron_job Function
[2023-07-02 10:15:36] 1.2-request Api_url $api_url
[2023-07-02 10:15:37] 1.3-store events of the jop periodically during process 
[2023-07-02 10:15:37] 1.4- fetch data from Api
[2023-07-02 10:15:37] 1.5- View data that returned from API
[2023-07-02 10:15:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:15:37] 1.7- get data of each project to select 
[2023-07-02 10:15:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:15:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:15:37] 1.10- check project update number [PUN]if not found
[2023-07-02 10:15:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:15:37] 3.9- Finish cron_job Function
[2023-07-02 10:16:38] 1.1- Start cron_job Function
[2023-07-02 10:16:38] 1.2-request Api_url $api_url
[2023-07-02 10:16:38] 1.3-store events of the jop periodically during process 
[2023-07-02 10:16:38] 1.4- fetch data from Api
[2023-07-02 10:16:38] 1.5- View data that returned from API
[2023-07-02 10:16:38] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:16:38] 1.7- get data of each project to select 
[2023-07-02 10:16:38] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:16:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:16:38] 1.10- check project update number [PUN]if not found
[2023-07-02 10:16:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:16:38] 3.9- Finish cron_job Function
[2023-07-02 10:17:36] 1.1- Start cron_job Function
[2023-07-02 10:17:36] 1.2-request Api_url $api_url
[2023-07-02 10:17:37] 1.3-store events of the jop periodically during process 
[2023-07-02 10:17:37] 1.4- fetch data from Api
[2023-07-02 10:17:37] 1.5- View data that returned from API
[2023-07-02 10:17:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:17:37] 1.7- get data of each project to select 
[2023-07-02 10:17:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:17:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:17:37] 1.10- check project update number [PUN]if not found
[2023-07-02 10:17:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:17:37] 3.9- Finish cron_job Function
[2023-07-02 10:18:38] 1.1- Start cron_job Function
[2023-07-02 10:18:38] 1.2-request Api_url $api_url
[2023-07-02 10:18:38] 1.3-store events of the jop periodically during process 
[2023-07-02 10:18:38] 1.4- fetch data from Api
[2023-07-02 10:18:38] 1.5- View data that returned from API
[2023-07-02 10:18:38] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:18:38] 1.7- get data of each project to select 
[2023-07-02 10:18:38] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:18:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:18:38] 1.10- check project update number [PUN]if not found
[2023-07-02 10:18:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:18:38] 3.9- Finish cron_job Function
[2023-07-02 10:19:36] 1.1- Start cron_job Function
[2023-07-02 10:19:36] 1.2-request Api_url $api_url
[2023-07-02 10:19:37] 1.3-store events of the jop periodically during process 
[2023-07-02 10:19:37] 1.4- fetch data from Api
[2023-07-02 10:19:37] 1.5- View data that returned from API
[2023-07-02 10:19:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:19:37] 1.7- get data of each project to select 
[2023-07-02 10:19:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:19:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:19:37] 1.10- check project update number [PUN]if not found
[2023-07-02 10:19:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:19:37] 3.9- Finish cron_job Function
[2023-07-02 10:22:13] 1.1- Start cron_job Function
[2023-07-02 10:22:13] 1.2-request Api_url $api_url
[2023-07-02 10:22:14] 1.3-store events of the jop periodically during process 
[2023-07-02 10:22:14] 1.4- fetch data from Api
[2023-07-02 10:22:14] 1.5- View data that returned from API
[2023-07-02 10:22:14] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:22:14] 1.7- get data of each project to select 
[2023-07-02 10:22:14] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:22:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:22:14] 1.10- check project update number [PUN]if not found
[2023-07-02 10:22:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:22:14] 3.9- Finish cron_job Function
[2023-07-02 10:22:57] 1.1- Start cron_job Function
[2023-07-02 10:22:57] 1.2-request Api_url $api_url
[2023-07-02 10:22:58] 1.3-store events of the jop periodically during process 
[2023-07-02 10:22:58] 1.4- fetch data from Api
[2023-07-02 10:22:58] 1.5- View data that returned from API
[2023-07-02 10:22:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:22:58] 1.7- get data of each project to select 
[2023-07-02 10:22:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:22:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:22:58] 1.10- check project update number [PUN]if not found
[2023-07-02 10:22:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:22:58] 3.9- Finish cron_job Function
[2023-07-02 10:23:30] 1.1- Start cron_job Function
[2023-07-02 10:23:30] 1.2-request Api_url $api_url
[2023-07-02 10:23:31] 1.3-store events of the jop periodically during process 
[2023-07-02 10:23:31] 1.4- fetch data from Api
[2023-07-02 10:23:31] 1.5- View data that returned from API
[2023-07-02 10:23:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:23:31] 1.7- get data of each project to select 
[2023-07-02 10:23:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:23:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:23:31] 1.10- check project update number [PUN]if not found
[2023-07-02 10:23:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:23:31] 3.9- Finish cron_job Function
[2023-07-02 10:24:43] 1.1- Start cron_job Function
[2023-07-02 10:24:43] 1.2-request Api_url $api_url
[2023-07-02 10:24:44] 1.3-store events of the jop periodically during process 
[2023-07-02 10:24:44] 1.4- fetch data from Api
[2023-07-02 10:24:44] 1.5- View data that returned from API
[2023-07-02 10:24:44] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:24:44] 1.7- get data of each project to select 
[2023-07-02 10:24:44] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:24:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:24:44] 1.10- check project update number [PUN]if not found
[2023-07-02 10:24:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:24:44] 3.9- Finish cron_job Function
[2023-07-02 10:25:43] 1.1- Start cron_job Function
[2023-07-02 10:25:43] 1.2-request Api_url $api_url
[2023-07-02 10:25:44] 1.3-store events of the jop periodically during process 
[2023-07-02 10:25:44] 1.4- fetch data from Api
[2023-07-02 10:25:44] 1.5- View data that returned from API
[2023-07-02 10:25:44] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:25:44] 1.7- get data of each project to select 
[2023-07-02 10:25:44] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:25:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:25:44] 1.10- check project update number [PUN]if not found
[2023-07-02 10:25:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:25:44] 3.9- Finish cron_job Function
[2023-07-02 10:26:30] 1.1- Start cron_job Function
[2023-07-02 10:26:30] 1.2-request Api_url $api_url
[2023-07-02 10:26:31] 1.3-store events of the jop periodically during process 
[2023-07-02 10:26:31] 1.4- fetch data from Api
[2023-07-02 10:26:31] 1.5- View data that returned from API
[2023-07-02 10:26:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:26:31] 1.7- get data of each project to select 
[2023-07-02 10:26:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:26:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:26:31] 1.10- check project update number [PUN]if not found
[2023-07-02 10:26:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:26:31] 3.9- Finish cron_job Function
[2023-07-02 10:27:32] 1.1- Start cron_job Function
[2023-07-02 10:27:32] 1.2-request Api_url $api_url
[2023-07-02 10:27:32] 1.3-store events of the jop periodically during process 
[2023-07-02 10:27:32] 1.4- fetch data from Api
[2023-07-02 10:27:32] 1.5- View data that returned from API
[2023-07-02 10:27:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:27:32] 1.7- get data of each project to select 
[2023-07-02 10:27:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:27:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:27:32] 1.10- check project update number [PUN]if not found
[2023-07-02 10:27:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:27:32] 3.9- Finish cron_job Function
[2023-07-02 10:28:34] 1.1- Start cron_job Function
[2023-07-02 10:28:34] 1.2-request Api_url $api_url
[2023-07-02 10:28:35] 1.3-store events of the jop periodically during process 
[2023-07-02 10:28:35] 1.4- fetch data from Api
[2023-07-02 10:28:35] 1.5- View data that returned from API
[2023-07-02 10:28:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:28:35] 1.7- get data of each project to select 
[2023-07-02 10:28:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:28:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:28:35] 1.10- check project update number [PUN]if not found
[2023-07-02 10:28:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:28:35] 3.9- Finish cron_job Function
[2023-07-02 10:29:32] 1.1- Start cron_job Function
[2023-07-02 10:29:32] 1.2-request Api_url $api_url
[2023-07-02 10:29:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:29:33] 1.4- fetch data from Api
[2023-07-02 10:29:33] 1.5- View data that returned from API
[2023-07-02 10:29:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:29:33] 1.7- get data of each project to select 
[2023-07-02 10:29:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:29:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:29:33] 1.10- check project update number [PUN]if not found
[2023-07-02 10:29:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:29:33] 3.9- Finish cron_job Function
[2023-07-02 10:30:29] 1.1- Start cron_job Function
[2023-07-02 10:30:29] 1.2-request Api_url $api_url
[2023-07-02 10:30:30] 1.3-store events of the jop periodically during process 
[2023-07-02 10:30:30] 1.4- fetch data from Api
[2023-07-02 10:30:30] 1.5- View data that returned from API
[2023-07-02 10:30:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:30:30] 1.7- get data of each project to select 
[2023-07-02 10:30:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:30:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:30:30] 1.10- check project update number [PUN]if not found
[2023-07-02 10:30:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:30:30] 3.9- Finish cron_job Function
[2023-07-02 10:31:32] 1.1- Start cron_job Function
[2023-07-02 10:31:32] 1.2-request Api_url $api_url
[2023-07-02 10:31:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:31:33] 1.4- fetch data from Api
[2023-07-02 10:31:33] 1.5- View data that returned from API
[2023-07-02 10:31:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:31:33] 1.7- get data of each project to select 
[2023-07-02 10:31:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:31:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:31:33] 1.10- check project update number [PUN]if not found
[2023-07-02 10:31:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:31:33] 3.9- Finish cron_job Function
[2023-07-02 10:32:30] 1.1- Start cron_job Function
[2023-07-02 10:32:30] 1.2-request Api_url $api_url
[2023-07-02 10:32:31] 1.3-store events of the jop periodically during process 
[2023-07-02 10:32:31] 1.4- fetch data from Api
[2023-07-02 10:32:31] 1.5- View data that returned from API
[2023-07-02 10:32:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:32:31] 1.7- get data of each project to select 
[2023-07-02 10:32:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:32:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:32:31] 1.10- check project update number [PUN]if not found
[2023-07-02 10:32:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:32:31] 3.9- Finish cron_job Function
[2023-07-02 10:33:30] 1.1- Start cron_job Function
[2023-07-02 10:33:30] 1.2-request Api_url $api_url
[2023-07-02 10:33:31] 1.3-store events of the jop periodically during process 
[2023-07-02 10:33:31] 1.4- fetch data from Api
[2023-07-02 10:33:31] 1.5- View data that returned from API
[2023-07-02 10:33:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:33:31] 1.7- get data of each project to select 
[2023-07-02 10:33:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:33:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:33:31] 1.10- check project update number [PUN]if not found
[2023-07-02 10:33:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:33:31] 3.9- Finish cron_job Function
[2023-07-02 10:34:38] 1.1- Start cron_job Function
[2023-07-02 10:34:38] 1.2-request Api_url $api_url
[2023-07-02 10:34:38] 1.3-store events of the jop periodically during process 
[2023-07-02 10:34:38] 1.4- fetch data from Api
[2023-07-02 10:34:38] 1.5- View data that returned from API
[2023-07-02 10:34:38] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:34:38] 1.7- get data of each project to select 
[2023-07-02 10:34:38] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:34:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:34:38] 1.10- check project update number [PUN]if not found
[2023-07-02 10:34:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:34:38] 3.9- Finish cron_job Function
[2023-07-02 10:35:30] 1.1- Start cron_job Function
[2023-07-02 10:35:30] 1.2-request Api_url $api_url
[2023-07-02 10:35:31] 1.3-store events of the jop periodically during process 
[2023-07-02 10:35:31] 1.4- fetch data from Api
[2023-07-02 10:35:31] 1.5- View data that returned from API
[2023-07-02 10:35:31] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:35:31] 1.7- get data of each project to select 
[2023-07-02 10:35:31] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:35:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:35:31] 1.10- check project update number [PUN]if not found
[2023-07-02 10:35:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:35:31] 3.9- Finish cron_job Function
[2023-07-02 10:36:38] 1.1- Start cron_job Function
[2023-07-02 10:36:38] 1.2-request Api_url $api_url
[2023-07-02 10:36:39] 1.3-store events of the jop periodically during process 
[2023-07-02 10:36:39] 1.4- fetch data from Api
[2023-07-02 10:36:39] 1.5- View data that returned from API
[2023-07-02 10:36:39] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:36:39] 1.7- get data of each project to select 
[2023-07-02 10:36:39] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:36:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:36:39] 1.10- check project update number [PUN]if not found
[2023-07-02 10:36:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:36:39] 3.9- Finish cron_job Function
[2023-07-02 10:37:32] 1.1- Start cron_job Function
[2023-07-02 10:37:32] 1.2-request Api_url $api_url
[2023-07-02 10:37:32] 1.3-store events of the jop periodically during process 
[2023-07-02 10:37:32] 1.4- fetch data from Api
[2023-07-02 10:37:32] 1.5- View data that returned from API
[2023-07-02 10:37:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:37:32] 1.7- get data of each project to select 
[2023-07-02 10:37:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:37:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:37:32] 1.10- check project update number [PUN]if not found
[2023-07-02 10:37:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:37:32] 3.9- Finish cron_job Function
[2023-07-02 10:38:33] 1.1- Start cron_job Function
[2023-07-02 10:38:33] 1.2-request Api_url $api_url
[2023-07-02 10:38:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:38:33] 1.4- fetch data from Api
[2023-07-02 10:38:33] 1.5- View data that returned from API
[2023-07-02 10:38:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:38:33] 1.7- get data of each project to select 
[2023-07-02 10:38:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:38:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:38:33] 1.10- check project update number [PUN]if not found
[2023-07-02 10:38:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:38:33] 3.9- Finish cron_job Function
[2023-07-02 10:39:31] 1.1- Start cron_job Function
[2023-07-02 10:39:31] 1.2-request Api_url $api_url
[2023-07-02 10:39:32] 1.3-store events of the jop periodically during process 
[2023-07-02 10:39:32] 1.4- fetch data from Api
[2023-07-02 10:39:32] 1.5- View data that returned from API
[2023-07-02 10:39:32] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:39:32] 1.7- get data of each project to select 
[2023-07-02 10:39:32] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:39:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:39:32] 1.10- check project update number [PUN]if not found
[2023-07-02 10:39:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:39:32] 3.9- Finish cron_job Function
[2023-07-02 10:40:39] 1.1- Start cron_job Function
[2023-07-02 10:40:39] 1.2-request Api_url $api_url
[2023-07-02 10:40:40] 1.3-store events of the jop periodically during process 
[2023-07-02 10:40:40] 1.4- fetch data from Api
[2023-07-02 10:40:40] 1.5- View data that returned from API
[2023-07-02 10:40:40] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:40:40] 1.7- get data of each project to select 
[2023-07-02 10:40:40] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:40:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:40:40] 1.10- check project update number [PUN]if not found
[2023-07-02 10:40:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:40:40] 3.9- Finish cron_job Function
[2023-07-02 10:41:32] 1.1- Start cron_job Function
[2023-07-02 10:41:32] 1.2-request Api_url $api_url
[2023-07-02 10:41:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:41:33] 1.4- fetch data from Api
[2023-07-02 10:41:33] 1.5- View data that returned from API
[2023-07-02 10:41:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:41:33] 1.7- get data of each project to select 
[2023-07-02 10:41:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:41:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:41:33] 1.10- check project update number [PUN]if not found
[2023-07-02 10:41:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:41:33] 3.9- Finish cron_job Function
[2023-07-02 10:42:41] 1.1- Start cron_job Function
[2023-07-02 10:42:41] 1.2-request Api_url $api_url
[2023-07-02 10:42:42] 1.3-store events of the jop periodically during process 
[2023-07-02 10:42:42] 1.4- fetch data from Api
[2023-07-02 10:42:42] 1.5- View data that returned from API
[2023-07-02 10:42:42] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:42:42] 1.7- get data of each project to select 
[2023-07-02 10:42:42] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:42:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:42:42] 1.10- check project update number [PUN]if not found
[2023-07-02 10:42:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:42:42] 3.9- Finish cron_job Function
[2023-07-02 10:43:32] 1.1- Start cron_job Function
[2023-07-02 10:43:32] 1.2-request Api_url $api_url
[2023-07-02 10:43:33] 1.3-store events of the jop periodically during process 
[2023-07-02 10:43:33] 1.4- fetch data from Api
[2023-07-02 10:43:33] 1.5- View data that returned from API
[2023-07-02 10:43:33] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:43:33] 1.7- get data of each project to select 
[2023-07-02 10:43:33] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:43:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:43:33] 1.10- check project update number [PUN]if not found
[2023-07-02 10:43:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:43:33] 3.9- Finish cron_job Function
[2023-07-02 10:45:13] 1.1- Start cron_job Function
[2023-07-02 10:45:13] 1.2-request Api_url $api_url
[2023-07-02 10:45:14] 1.3-store events of the jop periodically during process 
[2023-07-02 10:45:14] 1.4- fetch data from Api
[2023-07-02 10:45:14] 1.5- View data that returned from API
[2023-07-02 10:45:14] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:45:14] 1.7- get data of each project to select 
[2023-07-02 10:45:14] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:45:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:45:14] 1.10- check project update number [PUN]if not found
[2023-07-02 10:45:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:45:14] 3.9- Finish cron_job Function
[2023-07-02 10:47:14] 1.1- Start cron_job Function
[2023-07-02 10:47:14] 1.2-request Api_url $api_url
[2023-07-02 10:47:14] 1.3-store events of the jop periodically during process 
[2023-07-02 10:47:14] 1.4- fetch data from Api
[2023-07-02 10:47:14] 1.5- View data that returned from API
[2023-07-02 10:47:14] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:47:14] 1.7- get data of each project to select 
[2023-07-02 10:47:14] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:47:14] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:47:14] 1.10- check project update number [PUN]if not found
[2023-07-02 10:47:14] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:47:14] 3.9- Finish cron_job Function
[2023-07-02 10:49:15] 1.1- Start cron_job Function
[2023-07-02 10:49:15] 1.2-request Api_url $api_url
[2023-07-02 10:49:15] 1.3-store events of the jop periodically during process 
[2023-07-02 10:49:15] 1.4- fetch data from Api
[2023-07-02 10:49:15] 1.5- View data that returned from API
[2023-07-02 10:49:15] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:49:15] 1.7- get data of each project to select 
[2023-07-02 10:49:15] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:49:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:49:15] 1.10- check project update number [PUN]if not found
[2023-07-02 10:49:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:49:15] 3.9- Finish cron_job Function
[2023-07-02 10:51:16] 1.1- Start cron_job Function
[2023-07-02 10:51:16] 1.2-request Api_url $api_url
[2023-07-02 10:51:16] 1.3-store events of the jop periodically during process 
[2023-07-02 10:51:16] 1.4- fetch data from Api
[2023-07-02 10:51:16] 1.5- View data that returned from API
[2023-07-02 10:51:16] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:51:16] 1.7- get data of each project to select 
[2023-07-02 10:51:16] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:51:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:51:16] 1.10- check project update number [PUN]if not found
[2023-07-02 10:51:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:51:16] 3.9- Finish cron_job Function
[2023-07-02 10:53:20] 1.1- Start cron_job Function
[2023-07-02 10:53:20] 1.2-request Api_url $api_url
[2023-07-02 10:53:20] 1.3-store events of the jop periodically during process 
[2023-07-02 10:53:20] 1.4- fetch data from Api
[2023-07-02 10:53:20] 1.5- View data that returned from API
[2023-07-02 10:53:20] 1.6- get and View projects & tags that returned from  API
[2023-07-02 10:53:20] 1.7- get data of each project to select 
[2023-07-02 10:53:20] 1.8- The selected project Name:my android. id: 7
[2023-07-02 10:53:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 10:53:20] 1.10- check project update number [PUN]if not found
[2023-07-02 10:53:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 10:53:20] 3.9- Finish cron_job Function
[2023-07-02 11:37:51] 1.1- Start cron_job Function
[2023-07-02 11:37:51] 1.2-request Api_url $api_url
[2023-07-02 11:37:51] 1.3-store events of the jop periodically during process 
[2023-07-02 11:37:51] 1.4- fetch data from Api
[2023-07-02 11:37:51] 1.5- View data that returned from API
[2023-07-02 11:37:51] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:37:51] 1.7- get data of each project to select 
[2023-07-02 11:37:51] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:37:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:37:51] 1.10- check project update number [PUN]if not found
[2023-07-02 11:37:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:37:51] 3.9- Finish cron_job Function
[2023-07-02 11:38:52] 1.1- Start cron_job Function
[2023-07-02 11:38:52] 1.2-request Api_url $api_url
[2023-07-02 11:38:53] 1.3-store events of the jop periodically during process 
[2023-07-02 11:38:53] 1.4- fetch data from Api
[2023-07-02 11:38:53] 1.5- View data that returned from API
[2023-07-02 11:38:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:38:53] 1.7- get data of each project to select 
[2023-07-02 11:38:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:38:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:38:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:38:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:38:53] 3.9- Finish cron_job Function
[2023-07-02 11:39:55] 1.1- Start cron_job Function
[2023-07-02 11:39:55] 1.2-request Api_url $api_url
[2023-07-02 11:39:55] 1.3-store events of the jop periodically during process 
[2023-07-02 11:39:55] 1.4- fetch data from Api
[2023-07-02 11:39:55] 1.5- View data that returned from API
[2023-07-02 11:39:55] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:39:55] 1.7- get data of each project to select 
[2023-07-02 11:39:55] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:39:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:39:55] 1.10- check project update number [PUN]if not found
[2023-07-02 11:39:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:39:55] 3.9- Finish cron_job Function
[2023-07-02 11:40:52] 1.1- Start cron_job Function
[2023-07-02 11:40:52] 1.2-request Api_url $api_url
[2023-07-02 11:40:52] 1.3-store events of the jop periodically during process 
[2023-07-02 11:40:52] 1.4- fetch data from Api
[2023-07-02 11:40:52] 1.5- View data that returned from API
[2023-07-02 11:40:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:40:52] 1.7- get data of each project to select 
[2023-07-02 11:40:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:40:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:40:52] 1.10- check project update number [PUN]if not found
[2023-07-02 11:40:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:40:52] 3.9- Finish cron_job Function
[2023-07-02 11:41:55] 1.1- Start cron_job Function
[2023-07-02 11:41:55] 1.2-request Api_url $api_url
[2023-07-02 11:41:55] 1.3-store events of the jop periodically during process 
[2023-07-02 11:41:55] 1.4- fetch data from Api
[2023-07-02 11:41:55] 1.5- View data that returned from API
[2023-07-02 11:41:55] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:41:55] 1.7- get data of each project to select 
[2023-07-02 11:41:55] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:41:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:41:55] 1.10- check project update number [PUN]if not found
[2023-07-02 11:41:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:41:55] 3.9- Finish cron_job Function
[2023-07-02 11:42:51] 1.1- Start cron_job Function
[2023-07-02 11:42:51] 1.2-request Api_url $api_url
[2023-07-02 11:42:52] 1.3-store events of the jop periodically during process 
[2023-07-02 11:42:52] 1.4- fetch data from Api
[2023-07-02 11:42:52] 1.5- View data that returned from API
[2023-07-02 11:42:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:42:52] 1.7- get data of each project to select 
[2023-07-02 11:42:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:42:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:42:52] 1.10- check project update number [PUN]if not found
[2023-07-02 11:42:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:42:52] 3.9- Finish cron_job Function
[2023-07-02 11:43:56] 1.1- Start cron_job Function
[2023-07-02 11:43:56] 1.2-request Api_url $api_url
[2023-07-02 11:43:57] 1.3-store events of the jop periodically during process 
[2023-07-02 11:43:57] 1.4- fetch data from Api
[2023-07-02 11:43:57] 1.5- View data that returned from API
[2023-07-02 11:43:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:43:57] 1.7- get data of each project to select 
[2023-07-02 11:43:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:43:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:43:57] 1.10- check project update number [PUN]if not found
[2023-07-02 11:43:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:43:57] 3.9- Finish cron_job Function
[2023-07-02 11:44:52] 1.1- Start cron_job Function
[2023-07-02 11:44:52] 1.2-request Api_url $api_url
[2023-07-02 11:44:53] 1.3-store events of the jop periodically during process 
[2023-07-02 11:44:53] 1.4- fetch data from Api
[2023-07-02 11:44:53] 1.5- View data that returned from API
[2023-07-02 11:44:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:44:53] 1.7- get data of each project to select 
[2023-07-02 11:44:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:44:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:44:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:44:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:44:53] 3.9- Finish cron_job Function
[2023-07-02 11:45:56] 1.1- Start cron_job Function
[2023-07-02 11:45:56] 1.2-request Api_url $api_url
[2023-07-02 11:45:57] 1.3-store events of the jop periodically during process 
[2023-07-02 11:45:57] 1.4- fetch data from Api
[2023-07-02 11:45:57] 1.5- View data that returned from API
[2023-07-02 11:45:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:45:57] 1.7- get data of each project to select 
[2023-07-02 11:45:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:45:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:45:57] 1.10- check project update number [PUN]if not found
[2023-07-02 11:45:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:45:57] 3.9- Finish cron_job Function
[2023-07-02 11:46:52] 1.1- Start cron_job Function
[2023-07-02 11:46:52] 1.2-request Api_url $api_url
[2023-07-02 11:46:52] 1.3-store events of the jop periodically during process 
[2023-07-02 11:46:52] 1.4- fetch data from Api
[2023-07-02 11:46:52] 1.5- View data that returned from API
[2023-07-02 11:46:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:46:52] 1.7- get data of each project to select 
[2023-07-02 11:46:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:46:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:46:52] 1.10- check project update number [PUN]if not found
[2023-07-02 11:46:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:46:52] 3.9- Finish cron_job Function
[2023-07-02 11:47:56] 1.1- Start cron_job Function
[2023-07-02 11:47:56] 1.2-request Api_url $api_url
[2023-07-02 11:47:57] 1.3-store events of the jop periodically during process 
[2023-07-02 11:47:57] 1.4- fetch data from Api
[2023-07-02 11:47:57] 1.5- View data that returned from API
[2023-07-02 11:47:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:47:57] 1.7- get data of each project to select 
[2023-07-02 11:47:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:47:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:47:57] 1.10- check project update number [PUN]if not found
[2023-07-02 11:47:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:47:57] 3.9- Finish cron_job Function
[2023-07-02 11:48:52] 1.1- Start cron_job Function
[2023-07-02 11:48:52] 1.2-request Api_url $api_url
[2023-07-02 11:48:52] 1.3-store events of the jop periodically during process 
[2023-07-02 11:48:52] 1.4- fetch data from Api
[2023-07-02 11:48:52] 1.5- View data that returned from API
[2023-07-02 11:48:52] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:48:52] 1.7- get data of each project to select 
[2023-07-02 11:48:52] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:48:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:48:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:48:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:48:53] 3.9- Finish cron_job Function
[2023-07-02 11:49:57] 1.1- Start cron_job Function
[2023-07-02 11:49:57] 1.2-request Api_url $api_url
[2023-07-02 11:49:58] 1.3-store events of the jop periodically during process 
[2023-07-02 11:49:58] 1.4- fetch data from Api
[2023-07-02 11:49:58] 1.5- View data that returned from API
[2023-07-02 11:49:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:49:58] 1.7- get data of each project to select 
[2023-07-02 11:49:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:49:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:49:58] 1.10- check project update number [PUN]if not found
[2023-07-02 11:49:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:49:58] 3.9- Finish cron_job Function
[2023-07-02 11:50:53] 1.1- Start cron_job Function
[2023-07-02 11:50:53] 1.2-request Api_url $api_url
[2023-07-02 11:50:53] 1.3-store events of the jop periodically during process 
[2023-07-02 11:50:53] 1.4- fetch data from Api
[2023-07-02 11:50:53] 1.5- View data that returned from API
[2023-07-02 11:50:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:50:53] 1.7- get data of each project to select 
[2023-07-02 11:50:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:50:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:50:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:50:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:50:53] 3.9- Finish cron_job Function
[2023-07-02 11:51:57] 1.1- Start cron_job Function
[2023-07-02 11:51:57] 1.2-request Api_url $api_url
[2023-07-02 11:51:58] 1.3-store events of the jop periodically during process 
[2023-07-02 11:51:58] 1.4- fetch data from Api
[2023-07-02 11:51:58] 1.5- View data that returned from API
[2023-07-02 11:51:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:51:58] 1.7- get data of each project to select 
[2023-07-02 11:51:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:51:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:51:58] 1.10- check project update number [PUN]if not found
[2023-07-02 11:51:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:51:58] 3.9- Finish cron_job Function
[2023-07-02 11:52:39] 1.1- Start cron_job Function
[2023-07-02 11:52:39] 1.2-request Api_url $api_url
[2023-07-02 11:52:39] 1.3-store events of the jop periodically during process 
[2023-07-02 11:52:39] 1.4- fetch data from Api
[2023-07-02 11:52:39] 1.5- View data that returned from API
[2023-07-02 11:52:39] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:52:39] 1.7- get data of each project to select 
[2023-07-02 11:52:39] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:52:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:52:39] 1.10- check project update number [PUN]if not found
[2023-07-02 11:52:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:52:39] 3.9- Finish cron_job Function
[2023-07-02 11:53:57] 1.1- Start cron_job Function
[2023-07-02 11:53:57] 1.2-request Api_url $api_url
[2023-07-02 11:53:58] 1.3-store events of the jop periodically during process 
[2023-07-02 11:53:58] 1.4- fetch data from Api
[2023-07-02 11:53:58] 1.5- View data that returned from API
[2023-07-02 11:53:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:53:58] 1.7- get data of each project to select 
[2023-07-02 11:53:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:53:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:53:58] 1.10- check project update number [PUN]if not found
[2023-07-02 11:53:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:53:58] 3.9- Finish cron_job Function
[2023-07-02 11:54:53] 1.1- Start cron_job Function
[2023-07-02 11:54:53] 1.2-request Api_url $api_url
[2023-07-02 11:54:53] 1.3-store events of the jop periodically during process 
[2023-07-02 11:54:53] 1.4- fetch data from Api
[2023-07-02 11:54:53] 1.5- View data that returned from API
[2023-07-02 11:54:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:54:53] 1.7- get data of each project to select 
[2023-07-02 11:54:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:54:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:54:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:54:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:54:53] 3.9- Finish cron_job Function
[2023-07-02 11:55:58] 1.1- Start cron_job Function
[2023-07-02 11:55:58] 1.2-request Api_url $api_url
[2023-07-02 11:55:59] 1.3-store events of the jop periodically during process 
[2023-07-02 11:55:59] 1.4- fetch data from Api
[2023-07-02 11:55:59] 1.5- View data that returned from API
[2023-07-02 11:55:59] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:55:59] 1.7- get data of each project to select 
[2023-07-02 11:55:59] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:55:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:55:59] 1.10- check project update number [PUN]if not found
[2023-07-02 11:55:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:55:59] 3.9- Finish cron_job Function
[2023-07-02 11:56:53] 1.1- Start cron_job Function
[2023-07-02 11:56:53] 1.2-request Api_url $api_url
[2023-07-02 11:56:53] 1.3-store events of the jop periodically during process 
[2023-07-02 11:56:53] 1.4- fetch data from Api
[2023-07-02 11:56:53] 1.5- View data that returned from API
[2023-07-02 11:56:53] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:56:53] 1.7- get data of each project to select 
[2023-07-02 11:56:53] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:56:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:56:53] 1.10- check project update number [PUN]if not found
[2023-07-02 11:56:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:56:53] 3.9- Finish cron_job Function
[2023-07-02 11:57:58] 1.1- Start cron_job Function
[2023-07-02 11:57:58] 1.2-request Api_url $api_url
[2023-07-02 11:57:58] 1.3-store events of the jop periodically during process 
[2023-07-02 11:57:58] 1.4- fetch data from Api
[2023-07-02 11:57:58] 1.5- View data that returned from API
[2023-07-02 11:57:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:57:58] 1.7- get data of each project to select 
[2023-07-02 11:57:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:57:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:57:58] 1.10- check project update number [PUN]if not found
[2023-07-02 11:57:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:57:58] 3.9- Finish cron_job Function
[2023-07-02 11:58:30] 1.1- Start cron_job Function
[2023-07-02 11:58:30] 1.2-request Api_url $api_url
[2023-07-02 11:58:30] 1.3-store events of the jop periodically during process 
[2023-07-02 11:58:30] 1.4- fetch data from Api
[2023-07-02 11:58:30] 1.5- View data that returned from API
[2023-07-02 11:58:30] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:58:30] 1.7- get data of each project to select 
[2023-07-02 11:58:30] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:58:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:58:30] 1.10- check project update number [PUN]if not found
[2023-07-02 11:58:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:58:30] 3.9- Finish cron_job Function
[2023-07-02 11:59:35] 1.1- Start cron_job Function
[2023-07-02 11:59:35] 1.2-request Api_url $api_url
[2023-07-02 11:59:35] 1.3-store events of the jop periodically during process 
[2023-07-02 11:59:35] 1.4- fetch data from Api
[2023-07-02 11:59:35] 1.5- View data that returned from API
[2023-07-02 11:59:35] 1.6- get and View projects & tags that returned from  API
[2023-07-02 11:59:35] 1.7- get data of each project to select 
[2023-07-02 11:59:35] 1.8- The selected project Name:my android. id: 7
[2023-07-02 11:59:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 11:59:35] 1.10- check project update number [PUN]if not found
[2023-07-02 11:59:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 11:59:35] 3.9- Finish cron_job Function
[2023-07-02 12:00:54] 1.1- Start cron_job Function
[2023-07-02 12:00:55] 1.2-request Api_url $api_url
[2023-07-02 12:00:55] 1.3-store events of the jop periodically during process 
[2023-07-02 12:00:55] 1.4- fetch data from Api
[2023-07-02 12:00:55] 1.5- View data that returned from API
[2023-07-02 12:00:55] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:00:55] 1.7- get data of each project to select 
[2023-07-02 12:00:55] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:00:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:00:55] 1.10- check project update number [PUN]if not found
[2023-07-02 12:00:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:00:55] 3.9- Finish cron_job Function
[2023-07-02 12:01:36] 1.1- Start cron_job Function
[2023-07-02 12:01:36] 1.2-request Api_url $api_url
[2023-07-02 12:01:37] 1.3-store events of the jop periodically during process 
[2023-07-02 12:01:37] 1.4- fetch data from Api
[2023-07-02 12:01:37] 1.5- View data that returned from API
[2023-07-02 12:01:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:01:37] 1.7- get data of each project to select 
[2023-07-02 12:01:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:01:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:01:37] 1.10- check project update number [PUN]if not found
[2023-07-02 12:01:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:01:37] 3.9- Finish cron_job Function
[2023-07-02 12:02:55] 1.1- Start cron_job Function
[2023-07-02 12:02:55] 1.2-request Api_url $api_url
[2023-07-02 12:02:55] 1.3-store events of the jop periodically during process 
[2023-07-02 12:02:55] 1.4- fetch data from Api
[2023-07-02 12:02:55] 1.5- View data that returned from API
[2023-07-02 12:02:55] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:02:55] 1.7- get data of each project to select 
[2023-07-02 12:02:55] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:02:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:02:55] 1.10- check project update number [PUN]if not found
[2023-07-02 12:02:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:02:55] 3.9- Finish cron_job Function
[2023-07-02 12:03:36] 1.1- Start cron_job Function
[2023-07-02 12:03:36] 1.2-request Api_url $api_url
[2023-07-02 12:03:37] 1.3-store events of the jop periodically during process 
[2023-07-02 12:03:37] 1.4- fetch data from Api
[2023-07-02 12:03:37] 1.5- View data that returned from API
[2023-07-02 12:03:37] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:03:37] 1.7- get data of each project to select 
[2023-07-02 12:03:37] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:03:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:03:37] 1.10- check project update number [PUN]if not found
[2023-07-02 12:03:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:03:37] 3.9- Finish cron_job Function
[2023-07-02 12:04:55] 1.1- Start cron_job Function
[2023-07-02 12:04:55] 1.2-request Api_url $api_url
[2023-07-02 12:04:55] 1.3-store events of the jop periodically during process 
[2023-07-02 12:04:55] 1.4- fetch data from Api
[2023-07-02 12:04:55] 1.5- View data that returned from API
[2023-07-02 12:04:55] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:04:55] 1.7- get data of each project to select 
[2023-07-02 12:04:55] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:04:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:04:55] 1.10- check project update number [PUN]if not found
[2023-07-02 12:04:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:04:55] 3.9- Finish cron_job Function
[2023-07-02 12:05:38] 1.1- Start cron_job Function
[2023-07-02 12:05:38] 1.2-request Api_url $api_url
[2023-07-02 12:05:38] 1.3-store events of the jop periodically during process 
[2023-07-02 12:05:38] 1.4- fetch data from Api
[2023-07-02 12:05:38] 1.5- View data that returned from API
[2023-07-02 12:05:38] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:05:38] 1.7- get data of each project to select 
[2023-07-02 12:05:38] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:05:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:05:38] 1.10- check project update number [PUN]if not found
[2023-07-02 12:05:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:05:38] 3.9- Finish cron_job Function
[2023-07-02 12:06:55] 1.1- Start cron_job Function
[2023-07-02 12:06:55] 1.2-request Api_url $api_url
[2023-07-02 12:06:56] 1.3-store events of the jop periodically during process 
[2023-07-02 12:06:56] 1.4- fetch data from Api
[2023-07-02 12:06:56] 1.5- View data that returned from API
[2023-07-02 12:06:56] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:06:56] 1.7- get data of each project to select 
[2023-07-02 12:06:56] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:06:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:06:56] 1.10- check project update number [PUN]if not found
[2023-07-02 12:06:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:06:56] 3.9- Finish cron_job Function
[2023-07-02 12:07:38] 1.1- Start cron_job Function
[2023-07-02 12:07:38] 1.2-request Api_url $api_url
[2023-07-02 12:07:38] 1.3-store events of the jop periodically during process 
[2023-07-02 12:07:39] 1.4- fetch data from Api
[2023-07-02 12:07:39] 1.5- View data that returned from API
[2023-07-02 12:07:39] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:07:39] 1.7- get data of each project to select 
[2023-07-02 12:07:39] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:07:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:07:39] 1.10- check project update number [PUN]if not found
[2023-07-02 12:07:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:07:39] 3.9- Finish cron_job Function
[2023-07-02 12:08:56] 1.1- Start cron_job Function
[2023-07-02 12:08:56] 1.2-request Api_url $api_url
[2023-07-02 12:08:57] 1.3-store events of the jop periodically during process 
[2023-07-02 12:08:57] 1.4- fetch data from Api
[2023-07-02 12:08:57] 1.5- View data that returned from API
[2023-07-02 12:08:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:08:57] 1.7- get data of each project to select 
[2023-07-02 12:08:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:08:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:08:57] 1.10- check project update number [PUN]if not found
[2023-07-02 12:08:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:08:57] 3.9- Finish cron_job Function
[2023-07-02 12:10:01] 1.1- Start cron_job Function
[2023-07-02 12:10:01] 1.2-request Api_url $api_url
[2023-07-02 12:10:02] 1.3-store events of the jop periodically during process 
[2023-07-02 12:10:02] 1.4- fetch data from Api
[2023-07-02 12:10:02] 1.5- View data that returned from API
[2023-07-02 12:10:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:10:02] 1.7- get data of each project to select 
[2023-07-02 12:10:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:10:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:10:02] 1.10- check project update number [PUN]if not found
[2023-07-02 12:10:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:10:02] 3.9- Finish cron_job Function
[2023-07-02 12:10:57] 1.1- Start cron_job Function
[2023-07-02 12:10:57] 1.2-request Api_url $api_url
[2023-07-02 12:10:57] 1.3-store events of the jop periodically during process 
[2023-07-02 12:10:57] 1.4- fetch data from Api
[2023-07-02 12:10:57] 1.5- View data that returned from API
[2023-07-02 12:10:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:10:57] 1.7- get data of each project to select 
[2023-07-02 12:10:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:10:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:10:57] 1.10- check project update number [PUN]if not found
[2023-07-02 12:10:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:10:57] 3.9- Finish cron_job Function
[2023-07-02 12:12:02] 1.1- Start cron_job Function
[2023-07-02 12:12:02] 1.2-request Api_url $api_url
[2023-07-02 12:12:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:12:03] 1.4- fetch data from Api
[2023-07-02 12:12:03] 1.5- View data that returned from API
[2023-07-02 12:12:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:12:03] 1.7- get data of each project to select 
[2023-07-02 12:12:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:12:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:12:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:12:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:12:03] 3.9- Finish cron_job Function
[2023-07-02 12:12:56] 1.1- Start cron_job Function
[2023-07-02 12:12:56] 1.2-request Api_url $api_url
[2023-07-02 12:12:56] 1.3-store events of the jop periodically during process 
[2023-07-02 12:12:56] 1.4- fetch data from Api
[2023-07-02 12:12:56] 1.5- View data that returned from API
[2023-07-02 12:12:56] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:12:56] 1.7- get data of each project to select 
[2023-07-02 12:12:56] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:12:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:12:56] 1.10- check project update number [PUN]if not found
[2023-07-02 12:12:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:12:56] 3.9- Finish cron_job Function
[2023-07-02 12:14:02] 1.1- Start cron_job Function
[2023-07-02 12:14:02] 1.2-request Api_url $api_url
[2023-07-02 12:14:02] 1.3-store events of the jop periodically during process 
[2023-07-02 12:14:02] 1.4- fetch data from Api
[2023-07-02 12:14:02] 1.5- View data that returned from API
[2023-07-02 12:14:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:14:02] 1.7- get data of each project to select 
[2023-07-02 12:14:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:14:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:14:02] 1.10- check project update number [PUN]if not found
[2023-07-02 12:14:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:14:02] 3.9- Finish cron_job Function
[2023-07-02 12:14:57] 1.1- Start cron_job Function
[2023-07-02 12:14:57] 1.2-request Api_url $api_url
[2023-07-02 12:14:57] 1.3-store events of the jop periodically during process 
[2023-07-02 12:14:57] 1.4- fetch data from Api
[2023-07-02 12:14:57] 1.5- View data that returned from API
[2023-07-02 12:14:57] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:14:57] 1.7- get data of each project to select 
[2023-07-02 12:14:57] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:14:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:14:57] 1.10- check project update number [PUN]if not found
[2023-07-02 12:14:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:14:57] 3.9- Finish cron_job Function
[2023-07-02 12:16:03] 1.1- Start cron_job Function
[2023-07-02 12:16:03] 1.2-request Api_url $api_url
[2023-07-02 12:16:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:16:03] 1.4- fetch data from Api
[2023-07-02 12:16:03] 1.5- View data that returned from API
[2023-07-02 12:16:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:16:03] 1.7- get data of each project to select 
[2023-07-02 12:16:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:16:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:16:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:16:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:16:03] 3.9- Finish cron_job Function
[2023-07-02 12:16:58] 1.1- Start cron_job Function
[2023-07-02 12:16:58] 1.2-request Api_url $api_url
[2023-07-02 12:16:58] 1.3-store events of the jop periodically during process 
[2023-07-02 12:16:58] 1.4- fetch data from Api
[2023-07-02 12:16:58] 1.5- View data that returned from API
[2023-07-02 12:16:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:16:58] 1.7- get data of each project to select 
[2023-07-02 12:16:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:16:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:16:58] 1.10- check project update number [PUN]if not found
[2023-07-02 12:16:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:16:58] 3.9- Finish cron_job Function
[2023-07-02 12:18:02] 1.1- Start cron_job Function
[2023-07-02 12:18:02] 1.2-request Api_url $api_url
[2023-07-02 12:18:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:18:03] 1.4- fetch data from Api
[2023-07-02 12:18:03] 1.5- View data that returned from API
[2023-07-02 12:18:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:18:03] 1.7- get data of each project to select 
[2023-07-02 12:18:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:18:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:18:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:18:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:18:03] 3.9- Finish cron_job Function
[2023-07-02 12:18:58] 1.1- Start cron_job Function
[2023-07-02 12:18:58] 1.2-request Api_url $api_url
[2023-07-02 12:18:58] 1.3-store events of the jop periodically during process 
[2023-07-02 12:18:58] 1.4- fetch data from Api
[2023-07-02 12:18:58] 1.5- View data that returned from API
[2023-07-02 12:18:58] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:18:58] 1.7- get data of each project to select 
[2023-07-02 12:18:58] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:18:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:18:58] 1.10- check project update number [PUN]if not found
[2023-07-02 12:18:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:18:58] 3.9- Finish cron_job Function
[2023-07-02 12:20:03] 1.1- Start cron_job Function
[2023-07-02 12:20:03] 1.2-request Api_url $api_url
[2023-07-02 12:20:04] 1.3-store events of the jop periodically during process 
[2023-07-02 12:20:04] 1.4- fetch data from Api
[2023-07-02 12:20:04] 1.5- View data that returned from API
[2023-07-02 12:20:04] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:20:04] 1.7- get data of each project to select 
[2023-07-02 12:20:04] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:20:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:20:04] 1.10- check project update number [PUN]if not found
[2023-07-02 12:20:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:20:04] 3.9- Finish cron_job Function
[2023-07-02 12:21:00] 1.1- Start cron_job Function
[2023-07-02 12:21:00] 1.2-request Api_url $api_url
[2023-07-02 12:21:00] 1.3-store events of the jop periodically during process 
[2023-07-02 12:21:00] 1.4- fetch data from Api
[2023-07-02 12:21:00] 1.5- View data that returned from API
[2023-07-02 12:21:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:21:00] 1.7- get data of each project to select 
[2023-07-02 12:21:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:21:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:21:00] 1.10- check project update number [PUN]if not found
[2023-07-02 12:21:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:21:00] 2.2- check if project update number[pun > 0]
[2023-07-02 12:21:00] 2.3- store data into history table
[2023-07-02 12:21:00] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:02] 3.1- start_process
[2023-07-02 12:21:02] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 12:21:02] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:03] 3.1- start_process
[2023-07-02 12:21:03] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 12:21:03] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:04] 3.1- start_process
[2023-07-02 12:21:04] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 12:21:04] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:05] 3.1- start_process
[2023-07-02 12:21:05] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 12:21:05] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:06] 3.1- start_process
[2023-07-02 12:21:06] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 12:21:06] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:07] 3.1- start_process
[2023-07-02 12:21:07] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 12:21:07] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:08] 3.1- start_process
[2023-07-02 12:21:08] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 12:21:08] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.1- start_process
[2023-07-02 12:21:09] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 12:21:09] 3.3- if aun status > 0 
[2023-07-02 12:21:09] 3.9- Finish cron_job Function
[2023-07-02 12:22:04] 1.1- Start cron_job Function
[2023-07-02 12:22:04] 1.2-request Api_url $api_url
[2023-07-02 12:22:04] 1.3-store events of the jop periodically during process 
[2023-07-02 12:22:04] 1.4- fetch data from Api
[2023-07-02 12:22:04] 1.5- View data that returned from API
[2023-07-02 12:22:04] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:22:04] 1.7- get data of each project to select 
[2023-07-02 12:22:04] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:22:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:22:04] 1.10- check project update number [PUN]if not found
[2023-07-02 12:22:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:22:04] 3.9- Finish cron_job Function
[2023-07-02 12:22:59] 1.1- Start cron_job Function
[2023-07-02 12:22:59] 1.2-request Api_url $api_url
[2023-07-02 12:23:00] 1.3-store events of the jop periodically during process 
[2023-07-02 12:23:00] 1.4- fetch data from Api
[2023-07-02 12:23:00] 1.5- View data that returned from API
[2023-07-02 12:23:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:23:00] 1.7- get data of each project to select 
[2023-07-02 12:23:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:23:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:23:00] 1.10- check project update number [PUN]if not found
[2023-07-02 12:23:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:23:00] 3.9- Finish cron_job Function
[2023-07-02 12:24:05] 1.1- Start cron_job Function
[2023-07-02 12:24:05] 1.2-request Api_url $api_url
[2023-07-02 12:24:05] 1.3-store events of the jop periodically during process 
[2023-07-02 12:24:05] 1.4- fetch data from Api
[2023-07-02 12:24:05] 1.5- View data that returned from API
[2023-07-02 12:24:05] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:24:05] 1.7- get data of each project to select 
[2023-07-02 12:24:05] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:24:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:24:05] 1.10- check project update number [PUN]if not found
[2023-07-02 12:24:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:24:05] 3.9- Finish cron_job Function
[2023-07-02 12:25:00] 1.1- Start cron_job Function
[2023-07-02 12:25:00] 1.2-request Api_url $api_url
[2023-07-02 12:25:00] 1.3-store events of the jop periodically during process 
[2023-07-02 12:25:00] 1.4- fetch data from Api
[2023-07-02 12:25:00] 1.5- View data that returned from API
[2023-07-02 12:25:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:25:00] 1.7- get data of each project to select 
[2023-07-02 12:25:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:25:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:25:00] 1.10- check project update number [PUN]if not found
[2023-07-02 12:25:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:25:00] 3.9- Finish cron_job Function
[2023-07-02 12:26:05] 1.1- Start cron_job Function
[2023-07-02 12:26:05] 1.2-request Api_url $api_url
[2023-07-02 12:26:06] 1.3-store events of the jop periodically during process 
[2023-07-02 12:26:06] 1.4- fetch data from Api
[2023-07-02 12:26:06] 1.5- View data that returned from API
[2023-07-02 12:26:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:26:06] 1.7- get data of each project to select 
[2023-07-02 12:26:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:26:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:26:06] 1.10- check project update number [PUN]if not found
[2023-07-02 12:26:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:26:06] 3.9- Finish cron_job Function
[2023-07-02 12:27:00] 1.1- Start cron_job Function
[2023-07-02 12:27:00] 1.2-request Api_url $api_url
[2023-07-02 12:27:00] 1.3-store events of the jop periodically during process 
[2023-07-02 12:27:00] 1.4- fetch data from Api
[2023-07-02 12:27:00] 1.5- View data that returned from API
[2023-07-02 12:27:00] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:27:00] 1.7- get data of each project to select 
[2023-07-02 12:27:00] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:27:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:27:00] 1.10- check project update number [PUN]if not found
[2023-07-02 12:27:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:27:00] 3.9- Finish cron_job Function
[2023-07-02 12:28:06] 1.1- Start cron_job Function
[2023-07-02 12:28:06] 1.2-request Api_url $api_url
[2023-07-02 12:28:06] 1.3-store events of the jop periodically during process 
[2023-07-02 12:28:06] 1.4- fetch data from Api
[2023-07-02 12:28:06] 1.5- View data that returned from API
[2023-07-02 12:28:06] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:28:06] 1.7- get data of each project to select 
[2023-07-02 12:28:06] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:28:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:28:06] 1.10- check project update number [PUN]if not found
[2023-07-02 12:28:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:28:06] 3.9- Finish cron_job Function
[2023-07-02 12:29:01] 1.1- Start cron_job Function
[2023-07-02 12:29:01] 1.2-request Api_url $api_url
[2023-07-02 12:29:01] 1.3-store events of the jop periodically during process 
[2023-07-02 12:29:01] 1.4- fetch data from Api
[2023-07-02 12:29:01] 1.5- View data that returned from API
[2023-07-02 12:29:01] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:29:01] 1.7- get data of each project to select 
[2023-07-02 12:29:01] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:29:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:29:01] 1.10- check project update number [PUN]if not found
[2023-07-02 12:29:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:29:01] 3.9- Finish cron_job Function
[2023-07-02 12:30:06] 1.1- Start cron_job Function
[2023-07-02 12:30:06] 1.2-request Api_url $api_url
[2023-07-02 12:30:07] 1.3-store events of the jop periodically during process 
[2023-07-02 12:30:07] 1.4- fetch data from Api
[2023-07-02 12:30:07] 1.5- View data that returned from API
[2023-07-02 12:30:07] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:30:07] 1.7- get data of each project to select 
[2023-07-02 12:30:07] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:30:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:30:07] 1.10- check project update number [PUN]if not found
[2023-07-02 12:30:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:30:07] 3.9- Finish cron_job Function
[2023-07-02 12:31:03] 1.1- Start cron_job Function
[2023-07-02 12:31:03] 1.2-request Api_url $api_url
[2023-07-02 12:31:04] 1.3-store events of the jop periodically during process 
[2023-07-02 12:31:04] 1.4- fetch data from Api
[2023-07-02 12:31:04] 1.5- View data that returned from API
[2023-07-02 12:31:04] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:31:04] 1.7- get data of each project to select 
[2023-07-02 12:31:04] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:31:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:31:04] 1.10- check project update number [PUN]if not found
[2023-07-02 12:31:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:31:04] 2.2- check if project update number[pun > 0]
[2023-07-02 12:31:04] 2.3- store data into history table
[2023-07-02 12:31:04] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-02 12:31:06] 2.5-Inserting new app with ID : 267 & Name: hash key hash & package_name:happy mod
[2023-07-02 12:31:06] 2.6- set status of App {'new'}
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:06] 3.1- start_process
[2023-07-02 12:31:06] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-02 12:31:06] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:07] 3.1- start_process
[2023-07-02 12:31:07] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-02 12:31:07] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:08] 3.1- start_process
[2023-07-02 12:31:08] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-02 12:31:08] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:09] 3.1- start_process
[2023-07-02 12:31:09] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-02 12:31:09] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:10] 3.1- start_process
[2023-07-02 12:31:10] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-02 12:31:10] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:11] 3.1- start_process
[2023-07-02 12:31:11] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-02 12:31:11] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:12] 3.1- start_process
[2023-07-02 12:31:12] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-02 12:31:12] 3.3- if aun status > 0 
[2023-07-02 12:31:13] 3.1- start_process
[2023-07-02 12:31:13] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-02 12:31:13] 3.3- if aun status > 0 
[2023-07-02 12:31:13] 3.9- Finish cron_job Function
[2023-07-02 12:32:06] 1.1- Start cron_job Function
[2023-07-02 12:32:06] 1.2-request Api_url $api_url
[2023-07-02 12:32:07] 1.3-store events of the jop periodically during process 
[2023-07-02 12:32:07] 1.4- fetch data from Api
[2023-07-02 12:32:07] 1.5- View data that returned from API
[2023-07-02 12:32:07] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:32:07] 1.7- get data of each project to select 
[2023-07-02 12:32:07] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:32:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:32:07] 1.10- check project update number [PUN]if not found
[2023-07-02 12:32:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:32:07] 3.9- Finish cron_job Function
[2023-07-02 12:33:02] 1.1- Start cron_job Function
[2023-07-02 12:33:02] 1.2-request Api_url $api_url
[2023-07-02 12:33:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:33:03] 1.4- fetch data from Api
[2023-07-02 12:33:03] 1.5- View data that returned from API
[2023-07-02 12:33:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:33:03] 1.7- get data of each project to select 
[2023-07-02 12:33:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:33:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:33:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:33:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:33:03] 3.9- Finish cron_job Function
[2023-07-02 12:34:07] 1.1- Start cron_job Function
[2023-07-02 12:34:07] 1.2-request Api_url $api_url
[2023-07-02 12:34:08] 1.3-store events of the jop periodically during process 
[2023-07-02 12:34:08] 1.4- fetch data from Api
[2023-07-02 12:34:08] 1.5- View data that returned from API
[2023-07-02 12:34:08] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:34:08] 1.7- get data of each project to select 
[2023-07-02 12:34:08] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:34:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:34:08] 1.10- check project update number [PUN]if not found
[2023-07-02 12:34:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:34:08] 3.9- Finish cron_job Function
[2023-07-02 12:35:02] 1.1- Start cron_job Function
[2023-07-02 12:35:02] 1.2-request Api_url $api_url
[2023-07-02 12:35:02] 1.3-store events of the jop periodically during process 
[2023-07-02 12:35:02] 1.4- fetch data from Api
[2023-07-02 12:35:02] 1.5- View data that returned from API
[2023-07-02 12:35:02] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:35:02] 1.7- get data of each project to select 
[2023-07-02 12:35:02] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:35:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:35:02] 1.10- check project update number [PUN]if not found
[2023-07-02 12:35:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:35:02] 3.9- Finish cron_job Function
[2023-07-02 12:36:09] 1.1- Start cron_job Function
[2023-07-02 12:36:09] 1.2-request Api_url $api_url
[2023-07-02 12:36:09] 1.3-store events of the jop periodically during process 
[2023-07-02 12:36:09] 1.4- fetch data from Api
[2023-07-02 12:36:09] 1.5- View data that returned from API
[2023-07-02 12:36:09] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:36:09] 1.7- get data of each project to select 
[2023-07-02 12:36:09] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:36:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:36:09] 1.10- check project update number [PUN]if not found
[2023-07-02 12:36:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:36:09] 3.9- Finish cron_job Function
[2023-07-02 12:37:02] 1.1- Start cron_job Function
[2023-07-02 12:37:02] 1.2-request Api_url $api_url
[2023-07-02 12:37:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:37:03] 1.4- fetch data from Api
[2023-07-02 12:37:03] 1.5- View data that returned from API
[2023-07-02 12:37:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:37:03] 1.7- get data of each project to select 
[2023-07-02 12:37:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:37:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:37:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:37:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:37:03] 3.9- Finish cron_job Function
[2023-07-02 12:38:08] 1.1- Start cron_job Function
[2023-07-02 12:38:08] 1.2-request Api_url $api_url
[2023-07-02 12:38:08] 1.3-store events of the jop periodically during process 
[2023-07-02 12:38:08] 1.4- fetch data from Api
[2023-07-02 12:38:08] 1.5- View data that returned from API
[2023-07-02 12:38:08] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:38:08] 1.7- get data of each project to select 
[2023-07-02 12:38:08] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:38:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:38:08] 1.10- check project update number [PUN]if not found
[2023-07-02 12:38:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:38:08] 3.9- Finish cron_job Function
[2023-07-02 12:39:03] 1.1- Start cron_job Function
[2023-07-02 12:39:03] 1.2-request Api_url $api_url
[2023-07-02 12:39:03] 1.3-store events of the jop periodically during process 
[2023-07-02 12:39:03] 1.4- fetch data from Api
[2023-07-02 12:39:03] 1.5- View data that returned from API
[2023-07-02 12:39:03] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:39:03] 1.7- get data of each project to select 
[2023-07-02 12:39:03] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:39:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:39:03] 1.10- check project update number [PUN]if not found
[2023-07-02 12:39:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:39:03] 3.9- Finish cron_job Function
[2023-07-02 12:40:09] 1.1- Start cron_job Function
[2023-07-02 12:40:09] 1.2-request Api_url $api_url
[2023-07-02 12:40:10] 1.3-store events of the jop periodically during process 
[2023-07-02 12:40:10] 1.4- fetch data from Api
[2023-07-02 12:40:10] 1.5- View data that returned from API
[2023-07-02 12:40:10] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:40:10] 1.7- get data of each project to select 
[2023-07-02 12:40:10] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:40:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:40:10] 1.10- check project update number [PUN]if not found
[2023-07-02 12:40:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:40:10] 3.9- Finish cron_job Function
[2023-07-02 12:40:42] 1.1- Start cron_job Function
[2023-07-02 12:40:42] 1.2-request Api_url $api_url
[2023-07-02 12:40:43] 1.3-store events of the jop periodically during process 
[2023-07-02 12:40:43] 1.4- fetch data from Api
[2023-07-02 12:40:43] 1.5- View data that returned from API
[2023-07-02 12:40:43] 1.6- get and View projects & tags that returned from  API
[2023-07-02 12:40:43] 1.7- get data of each project to select 
[2023-07-02 12:40:43] 1.8- The selected project Name:my android. id: 7
[2023-07-02 12:40:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-02 12:40:43] 1.10- check project update number [PUN]if not found
[2023-07-02 12:40:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-02 12:40:43] 3.9- Finish cron_job Function
[2023-07-03 06:33:21] 1.1- Start cron_job Function
[2023-07-03 06:33:21] 1.2-request Api_url $api_url
[2023-07-03 06:33:21] 1.3-store events of the jop periodically during process 
[2023-07-03 06:33:21] 1.4- fetch data from Api
[2023-07-03 06:33:21] 1.5- View data that returned from API
[2023-07-03 06:33:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:33:21] 1.7- get data of each project to select 
[2023-07-03 06:33:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:33:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:33:21] 1.10- check project update number [PUN]if not found
[2023-07-03 06:33:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:33:22] 2.2- check if project update number[pun > 0]
[2023-07-03 06:33:22] 2.3- store data into history table
[2023-07-03 06:33:22] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:23] 3.1- start_process
[2023-07-03 06:33:23] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-03 06:33:23] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:24] 3.1- start_process
[2023-07-03 06:33:24] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-03 06:33:24] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:25] 3.1- start_process
[2023-07-03 06:33:25] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-03 06:33:25] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:26] 3.1- start_process
[2023-07-03 06:33:26] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-03 06:33:26] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:27] 3.1- start_process
[2023-07-03 06:33:27] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-03 06:33:27] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:28] 3.1- start_process
[2023-07-03 06:33:28] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-03 06:33:28] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:29] 3.1- start_process
[2023-07-03 06:33:29] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-03 06:33:29] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:30] 3.1- start_process
[2023-07-03 06:33:30] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-03 06:33:30] 3.3- if aun status > 0 
[2023-07-03 06:33:31] 3.1- start_process
[2023-07-03 06:33:31] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-03 06:33:31] 3.3- if aun status > 0 
[2023-07-03 06:33:31] 3.9- Finish cron_job Function
[2023-07-03 06:33:40] 1.1- Start cron_job Function
[2023-07-03 06:33:40] 1.2-request Api_url $api_url
[2023-07-03 06:33:41] 1.3-store events of the jop periodically during process 
[2023-07-03 06:33:41] 1.4- fetch data from Api
[2023-07-03 06:33:41] 1.5- View data that returned from API
[2023-07-03 06:33:41] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:33:41] 1.7- get data of each project to select 
[2023-07-03 06:33:41] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:33:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:33:41] 1.10- check project update number [PUN]if not found
[2023-07-03 06:33:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:33:41] 3.9- Finish cron_job Function
[2023-07-03 06:35:26] 1.1- Start cron_job Function
[2023-07-03 06:35:26] 1.2-request Api_url $api_url
[2023-07-03 06:35:27] 1.3-store events of the jop periodically during process 
[2023-07-03 06:35:27] 1.4- fetch data from Api
[2023-07-03 06:35:27] 1.5- View data that returned from API
[2023-07-03 06:35:27] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:35:27] 1.7- get data of each project to select 
[2023-07-03 06:35:27] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:35:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:35:27] 1.10- check project update number [PUN]if not found
[2023-07-03 06:35:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:35:27] 3.9- Finish cron_job Function
[2023-07-03 06:37:28] 1.1- Start cron_job Function
[2023-07-03 06:37:28] 1.2-request Api_url $api_url
[2023-07-03 06:37:28] 1.3-store events of the jop periodically during process 
[2023-07-03 06:37:28] 1.4- fetch data from Api
[2023-07-03 06:37:28] 1.5- View data that returned from API
[2023-07-03 06:37:28] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:37:28] 1.7- get data of each project to select 
[2023-07-03 06:37:28] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:37:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:37:28] 1.10- check project update number [PUN]if not found
[2023-07-03 06:37:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:37:28] 3.9- Finish cron_job Function
[2023-07-03 06:38:33] 1.1- Start cron_job Function
[2023-07-03 06:38:33] 1.2-request Api_url $api_url
[2023-07-03 06:38:33] 1.3-store events of the jop periodically during process 
[2023-07-03 06:38:33] 1.4- fetch data from Api
[2023-07-03 06:38:33] 1.5- View data that returned from API
[2023-07-03 06:38:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:38:33] 1.7- get data of each project to select 
[2023-07-03 06:38:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:38:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:38:33] 1.10- check project update number [PUN]if not found
[2023-07-03 06:38:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:38:33] 3.9- Finish cron_job Function
[2023-07-03 06:39:40] 1.1- Start cron_job Function
[2023-07-03 06:39:40] 1.2-request Api_url $api_url
[2023-07-03 06:39:40] 1.3-store events of the jop periodically during process 
[2023-07-03 06:39:40] 1.4- fetch data from Api
[2023-07-03 06:39:40] 1.5- View data that returned from API
[2023-07-03 06:39:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:39:40] 1.7- get data of each project to select 
[2023-07-03 06:39:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:39:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:39:40] 1.10- check project update number [PUN]if not found
[2023-07-03 06:39:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:39:40] 3.9- Finish cron_job Function
[2023-07-03 06:40:31] 1.1- Start cron_job Function
[2023-07-03 06:40:31] 1.2-request Api_url $api_url
[2023-07-03 06:40:32] 1.3-store events of the jop periodically during process 
[2023-07-03 06:40:32] 1.4- fetch data from Api
[2023-07-03 06:40:32] 1.5- View data that returned from API
[2023-07-03 06:40:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:40:32] 1.7- get data of each project to select 
[2023-07-03 06:40:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:40:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:40:32] 1.10- check project update number [PUN]if not found
[2023-07-03 06:40:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:40:32] 3.9- Finish cron_job Function
[2023-07-03 06:41:39] 1.1- Start cron_job Function
[2023-07-03 06:41:39] 1.2-request Api_url $api_url
[2023-07-03 06:41:40] 1.3-store events of the jop periodically during process 
[2023-07-03 06:41:40] 1.4- fetch data from Api
[2023-07-03 06:41:40] 1.5- View data that returned from API
[2023-07-03 06:41:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:41:40] 1.7- get data of each project to select 
[2023-07-03 06:41:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:41:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:41:40] 1.10- check project update number [PUN]if not found
[2023-07-03 06:41:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:41:40] 3.9- Finish cron_job Function
[2023-07-03 06:42:36] 1.1- Start cron_job Function
[2023-07-03 06:42:36] 1.2-request Api_url $api_url
[2023-07-03 06:42:37] 1.3-store events of the jop periodically during process 
[2023-07-03 06:42:37] 1.4- fetch data from Api
[2023-07-03 06:42:37] 1.5- View data that returned from API
[2023-07-03 06:42:37] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:42:37] 1.7- get data of each project to select 
[2023-07-03 06:42:37] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:42:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:42:37] 1.10- check project update number [PUN]if not found
[2023-07-03 06:42:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:42:37] 3.9- Finish cron_job Function
[2023-07-03 06:43:54] 1.1- Start cron_job Function
[2023-07-03 06:43:54] 1.2-request Api_url $api_url
[2023-07-03 06:43:54] 1.3-store events of the jop periodically during process 
[2023-07-03 06:43:54] 1.4- fetch data from Api
[2023-07-03 06:43:54] 1.5- View data that returned from API
[2023-07-03 06:43:54] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:43:54] 1.7- get data of each project to select 
[2023-07-03 06:43:54] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:43:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:43:54] 1.10- check project update number [PUN]if not found
[2023-07-03 06:43:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:43:54] 3.9- Finish cron_job Function
[2023-07-03 06:44:57] 1.1- Start cron_job Function
[2023-07-03 06:44:57] 1.2-request Api_url $api_url
[2023-07-03 06:44:57] 1.3-store events of the jop periodically during process 
[2023-07-03 06:44:57] 1.4- fetch data from Api
[2023-07-03 06:44:57] 1.5- View data that returned from API
[2023-07-03 06:44:57] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:44:57] 1.7- get data of each project to select 
[2023-07-03 06:44:57] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:44:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:44:57] 1.10- check project update number [PUN]if not found
[2023-07-03 06:44:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:44:57] 3.9- Finish cron_job Function
[2023-07-03 06:46:21] 1.1- Start cron_job Function
[2023-07-03 06:46:21] 1.2-request Api_url $api_url
[2023-07-03 06:46:21] 1.3-store events of the jop periodically during process 
[2023-07-03 06:46:21] 1.4- fetch data from Api
[2023-07-03 06:46:21] 1.5- View data that returned from API
[2023-07-03 06:46:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:46:21] 1.7- get data of each project to select 
[2023-07-03 06:46:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:46:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:46:21] 1.10- check project update number [PUN]if not found
[2023-07-03 06:46:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:46:21] 3.9- Finish cron_job Function
[2023-07-03 06:46:57] 1.1- Start cron_job Function
[2023-07-03 06:46:57] 1.2-request Api_url $api_url
[2023-07-03 06:46:57] 1.3-store events of the jop periodically during process 
[2023-07-03 06:46:57] 1.4- fetch data from Api
[2023-07-03 06:46:57] 1.5- View data that returned from API
[2023-07-03 06:46:57] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:46:57] 1.7- get data of each project to select 
[2023-07-03 06:46:57] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:46:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:46:57] 1.10- check project update number [PUN]if not found
[2023-07-03 06:46:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:46:57] 3.9- Finish cron_job Function
[2023-07-03 06:48:22] 1.1- Start cron_job Function
[2023-07-03 06:48:22] 1.2-request Api_url $api_url
[2023-07-03 06:48:23] 1.3-store events of the jop periodically during process 
[2023-07-03 06:48:23] 1.4- fetch data from Api
[2023-07-03 06:48:23] 1.5- View data that returned from API
[2023-07-03 06:48:23] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:48:23] 1.7- get data of each project to select 
[2023-07-03 06:48:23] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:48:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:48:23] 1.10- check project update number [PUN]if not found
[2023-07-03 06:48:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:48:23] 3.9- Finish cron_job Function
[2023-07-03 06:48:58] 1.1- Start cron_job Function
[2023-07-03 06:48:58] 1.2-request Api_url $api_url
[2023-07-03 06:48:58] 1.3-store events of the jop periodically during process 
[2023-07-03 06:48:58] 1.4- fetch data from Api
[2023-07-03 06:48:58] 1.5- View data that returned from API
[2023-07-03 06:48:58] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:48:58] 1.7- get data of each project to select 
[2023-07-03 06:48:58] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:48:58] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:48:58] 1.10- check project update number [PUN]if not found
[2023-07-03 06:48:58] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:48:58] 3.9- Finish cron_job Function
[2023-07-03 06:49:32] 1.1- Start cron_job Function
[2023-07-03 06:49:32] 1.2-request Api_url $api_url
[2023-07-03 06:49:32] 1.3-store events of the jop periodically during process 
[2023-07-03 06:49:32] 1.4- fetch data from Api
[2023-07-03 06:49:32] 1.5- View data that returned from API
[2023-07-03 06:49:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:49:32] 1.7- get data of each project to select 
[2023-07-03 06:49:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:49:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:49:32] 1.10- check project update number [PUN]if not found
[2023-07-03 06:49:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:49:32] 3.9- Finish cron_job Function
[2023-07-03 06:51:26] 1.1- Start cron_job Function
[2023-07-03 06:51:26] 1.2-request Api_url $api_url
[2023-07-03 06:51:27] 1.3-store events of the jop periodically during process 
[2023-07-03 06:51:27] 1.4- fetch data from Api
[2023-07-03 06:51:27] 1.5- View data that returned from API
[2023-07-03 06:51:27] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:51:27] 1.7- get data of each project to select 
[2023-07-03 06:51:27] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:51:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:51:27] 1.10- check project update number [PUN]if not found
[2023-07-03 06:51:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:51:27] 3.9- Finish cron_job Function
[2023-07-03 06:51:33] 1.1- Start cron_job Function
[2023-07-03 06:51:33] 1.2-request Api_url $api_url
[2023-07-03 06:51:34] 1.3-store events of the jop periodically during process 
[2023-07-03 06:51:34] 1.4- fetch data from Api
[2023-07-03 06:51:34] 1.5- View data that returned from API
[2023-07-03 06:51:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:51:34] 1.7- get data of each project to select 
[2023-07-03 06:51:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:51:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:51:34] 1.10- check project update number [PUN]if not found
[2023-07-03 06:51:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:51:34] 3.9- Finish cron_job Function
[2023-07-03 06:53:33] 1.1- Start cron_job Function
[2023-07-03 06:53:33] 1.2-request Api_url $api_url
[2023-07-03 06:53:33] 1.3-store events of the jop periodically during process 
[2023-07-03 06:53:33] 1.4- fetch data from Api
[2023-07-03 06:53:33] 1.5- View data that returned from API
[2023-07-03 06:53:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:53:33] 1.7- get data of each project to select 
[2023-07-03 06:53:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:53:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:53:33] 1.10- check project update number [PUN]if not found
[2023-07-03 06:53:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:53:33] 3.9- Finish cron_job Function
[2023-07-03 06:55:30] 1.1- Start cron_job Function
[2023-07-03 06:55:30] 1.2-request Api_url $api_url
[2023-07-03 06:55:31] 1.3-store events of the jop periodically during process 
[2023-07-03 06:55:31] 1.4- fetch data from Api
[2023-07-03 06:55:31] 1.5- View data that returned from API
[2023-07-03 06:55:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:55:31] 1.7- get data of each project to select 
[2023-07-03 06:55:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:55:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:55:31] 1.10- check project update number [PUN]if not found
[2023-07-03 06:55:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:55:31] 3.9- Finish cron_job Function
[2023-07-03 06:56:31] 1.1- Start cron_job Function
[2023-07-03 06:56:31] 1.2-request Api_url $api_url
[2023-07-03 06:56:32] 1.3-store events of the jop periodically during process 
[2023-07-03 06:56:32] 1.4- fetch data from Api
[2023-07-03 06:56:32] 1.5- View data that returned from API
[2023-07-03 06:56:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:56:32] 1.7- get data of each project to select 
[2023-07-03 06:56:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:56:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:56:32] 1.10- check project update number [PUN]if not found
[2023-07-03 06:56:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:56:32] 3.9- Finish cron_job Function
[2023-07-03 06:57:31] 1.1- Start cron_job Function
[2023-07-03 06:57:31] 1.2-request Api_url $api_url
[2023-07-03 06:57:31] 1.3-store events of the jop periodically during process 
[2023-07-03 06:57:31] 1.4- fetch data from Api
[2023-07-03 06:57:31] 1.5- View data that returned from API
[2023-07-03 06:57:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:57:31] 1.7- get data of each project to select 
[2023-07-03 06:57:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:57:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:57:31] 1.10- check project update number [PUN]if not found
[2023-07-03 06:57:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:57:31] 3.9- Finish cron_job Function
[2023-07-03 06:58:54] 1.1- Start cron_job Function
[2023-07-03 06:58:54] 1.2-request Api_url $api_url
[2023-07-03 06:58:54] 1.3-store events of the jop periodically during process 
[2023-07-03 06:58:54] 1.4- fetch data from Api
[2023-07-03 06:58:54] 1.5- View data that returned from API
[2023-07-03 06:58:54] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:58:54] 1.7- get data of each project to select 
[2023-07-03 06:58:54] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:58:54] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:58:54] 1.10- check project update number [PUN]if not found
[2023-07-03 06:58:54] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:58:54] 3.9- Finish cron_job Function
[2023-07-03 06:59:43] 1.1- Start cron_job Function
[2023-07-03 06:59:43] 1.2-request Api_url $api_url
[2023-07-03 06:59:44] 1.3-store events of the jop periodically during process 
[2023-07-03 06:59:44] 1.4- fetch data from Api
[2023-07-03 06:59:44] 1.5- View data that returned from API
[2023-07-03 06:59:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 06:59:44] 1.7- get data of each project to select 
[2023-07-03 06:59:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 06:59:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 06:59:44] 1.10- check project update number [PUN]if not found
[2023-07-03 06:59:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 06:59:44] 3.9- Finish cron_job Function
[2023-07-03 07:01:00] 1.1- Start cron_job Function
[2023-07-03 07:01:00] 1.2-request Api_url $api_url
[2023-07-03 07:01:01] 1.3-store events of the jop periodically during process 
[2023-07-03 07:01:01] 1.4- fetch data from Api
[2023-07-03 07:01:01] 1.5- View data that returned from API
[2023-07-03 07:01:01] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:01:01] 1.7- get data of each project to select 
[2023-07-03 07:01:01] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:01:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:01:01] 1.10- check project update number [PUN]if not found
[2023-07-03 07:01:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:01:01] 3.9- Finish cron_job Function
[2023-07-03 07:01:44] 1.1- Start cron_job Function
[2023-07-03 07:01:44] 1.2-request Api_url $api_url
[2023-07-03 07:01:45] 1.3-store events of the jop periodically during process 
[2023-07-03 07:01:45] 1.4- fetch data from Api
[2023-07-03 07:01:45] 1.5- View data that returned from API
[2023-07-03 07:01:45] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:01:45] 1.7- get data of each project to select 
[2023-07-03 07:01:45] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:01:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:01:45] 1.10- check project update number [PUN]if not found
[2023-07-03 07:01:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:01:45] 3.9- Finish cron_job Function
[2023-07-03 07:03:44] 1.1- Start cron_job Function
[2023-07-03 07:03:44] 1.2-request Api_url $api_url
[2023-07-03 07:03:45] 1.3-store events of the jop periodically during process 
[2023-07-03 07:03:45] 1.4- fetch data from Api
[2023-07-03 07:03:45] 1.5- View data that returned from API
[2023-07-03 07:03:45] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:03:45] 1.7- get data of each project to select 
[2023-07-03 07:03:45] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:03:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:03:45] 1.10- check project update number [PUN]if not found
[2023-07-03 07:03:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:03:45] 3.9- Finish cron_job Function
[2023-07-03 07:05:02] 1.1- Start cron_job Function
[2023-07-03 07:05:02] 1.2-request Api_url $api_url
[2023-07-03 07:05:02] 1.3-store events of the jop periodically during process 
[2023-07-03 07:05:02] 1.4- fetch data from Api
[2023-07-03 07:05:02] 1.5- View data that returned from API
[2023-07-03 07:05:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:05:02] 1.7- get data of each project to select 
[2023-07-03 07:05:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:05:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:05:02] 1.10- check project update number [PUN]if not found
[2023-07-03 07:05:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:05:02] 3.9- Finish cron_job Function
[2023-07-03 07:05:44] 1.1- Start cron_job Function
[2023-07-03 07:05:44] 1.2-request Api_url $api_url
[2023-07-03 07:05:44] 1.3-store events of the jop periodically during process 
[2023-07-03 07:05:44] 1.4- fetch data from Api
[2023-07-03 07:05:44] 1.5- View data that returned from API
[2023-07-03 07:05:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:05:44] 1.7- get data of each project to select 
[2023-07-03 07:05:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:05:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:05:44] 1.10- check project update number [PUN]if not found
[2023-07-03 07:05:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:05:44] 3.9- Finish cron_job Function
[2023-07-03 07:07:03] 1.1- Start cron_job Function
[2023-07-03 07:07:03] 1.2-request Api_url $api_url
[2023-07-03 07:07:04] 1.3-store events of the jop periodically during process 
[2023-07-03 07:07:04] 1.4- fetch data from Api
[2023-07-03 07:07:04] 1.5- View data that returned from API
[2023-07-03 07:07:04] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:07:04] 1.7- get data of each project to select 
[2023-07-03 07:07:04] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:07:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:07:04] 1.10- check project update number [PUN]if not found
[2023-07-03 07:07:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:07:04] 3.9- Finish cron_job Function
[2023-07-03 07:07:45] 1.1- Start cron_job Function
[2023-07-03 07:07:45] 1.2-request Api_url $api_url
[2023-07-03 07:07:45] 1.3-store events of the jop periodically during process 
[2023-07-03 07:07:45] 1.4- fetch data from Api
[2023-07-03 07:07:45] 1.5- View data that returned from API
[2023-07-03 07:07:45] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:07:45] 1.7- get data of each project to select 
[2023-07-03 07:07:45] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:07:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:07:45] 1.10- check project update number [PUN]if not found
[2023-07-03 07:07:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:07:45] 3.9- Finish cron_job Function
[2023-07-03 07:09:03] 1.1- Start cron_job Function
[2023-07-03 07:09:03] 1.2-request Api_url $api_url
[2023-07-03 07:09:03] 1.3-store events of the jop periodically during process 
[2023-07-03 07:09:03] 1.4- fetch data from Api
[2023-07-03 07:09:03] 1.5- View data that returned from API
[2023-07-03 07:09:03] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:09:03] 1.7- get data of each project to select 
[2023-07-03 07:09:03] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:09:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:09:03] 1.10- check project update number [PUN]if not found
[2023-07-03 07:09:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:09:03] 3.9- Finish cron_job Function
[2023-07-03 07:11:03] 1.1- Start cron_job Function
[2023-07-03 07:11:03] 1.2-request Api_url $api_url
[2023-07-03 07:11:03] 1.3-store events of the jop periodically during process 
[2023-07-03 07:11:03] 1.4- fetch data from Api
[2023-07-03 07:11:03] 1.5- View data that returned from API
[2023-07-03 07:11:03] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:11:03] 1.7- get data of each project to select 
[2023-07-03 07:11:03] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:11:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:11:03] 1.10- check project update number [PUN]if not found
[2023-07-03 07:11:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:11:03] 3.9- Finish cron_job Function
[2023-07-03 07:13:03] 1.1- Start cron_job Function
[2023-07-03 07:13:03] 1.2-request Api_url $api_url
[2023-07-03 07:13:04] 1.3-store events of the jop periodically during process 
[2023-07-03 07:13:04] 1.4- fetch data from Api
[2023-07-03 07:13:04] 1.5- View data that returned from API
[2023-07-03 07:13:04] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:13:04] 1.7- get data of each project to select 
[2023-07-03 07:13:04] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:13:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:13:04] 1.10- check project update number [PUN]if not found
[2023-07-03 07:13:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:13:04] 3.9- Finish cron_job Function
[2023-07-03 07:42:04] 1.1- Start cron_job Function
[2023-07-03 07:42:04] 1.2-request Api_url $api_url
[2023-07-03 07:42:05] 1.3-store events of the jop periodically during process 
[2023-07-03 07:42:05] 1.4- fetch data from Api
[2023-07-03 07:42:05] 1.5- View data that returned from API
[2023-07-03 07:42:05] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:42:05] 1.7- get data of each project to select 
[2023-07-03 07:42:05] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:42:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:42:05] 1.10- check project update number [PUN]if not found
[2023-07-03 07:42:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:42:05] 2.2- check if project update number[pun > 0]
[2023-07-03 07:42:05] 2.3- store data into history table
[2023-07-03 07:42:05] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-03 07:42:07] 2.5-Inserting new app with ID : 269 & Name: FIFA Soccer-apk-pure & package_name:com.ea.gp.fifamobile
[2023-07-03 07:42:07] 2.6- set status of App {'new'}
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 2.5-Inserting new app with ID : 268 & Name: FIFA Soccer-google-play & package_name:com.ea.gp.fifamobile
[2023-07-03 07:42:07] 2.6- set status of App {'new'}
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:07] 3.1- start_process
[2023-07-03 07:42:07] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-03 07:42:07] 3.3- if aun status > 0 
[2023-07-03 07:42:08] 2.7-changed the new pun 17 
[2023-07-03 07:42:08] 2.8- register updated_app in event table
[2023-07-03 07:42:08] 2.9- set status {'updated'}
[2023-07-03 07:42:08] 3.1- start_process
[2023-07-03 07:42:08] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-03 07:42:08] 3.3- if aun status > 0 
[2023-07-03 07:42:08] 3.5 check  the app have key '.logo.' if not found 
[2023-07-03 07:42:08] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '.author.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '.rating.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '..' if not found 
[2023-07-03 07:42:09] 3.6- Insert  all keys 
[2023-07-03 07:42:09] 3.5 check  the app have key '.version.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.5 check  the app have key '.last_update.' if not found 
[2023-07-03 07:42:09] 3.7 check if the keys exists, update data
[2023-07-03 07:42:09] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:09] 3.1- start_process
[2023-07-03 07:42:09] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-03 07:42:09] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:10] 3.1- start_process
[2023-07-03 07:42:10] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-03 07:42:10] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:11] 3.1- start_process
[2023-07-03 07:42:11] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-03 07:42:11] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:12] 3.1- start_process
[2023-07-03 07:42:12] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-03 07:42:12] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:13] 3.1- start_process
[2023-07-03 07:42:13] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-03 07:42:13] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 2.7-changed the new pun 537 
[2023-07-03 07:42:14] 2.8- register updated_app in event table
[2023-07-03 07:42:14] 2.9- set status {'updated'}
[2023-07-03 07:42:14] 3.1- start_process
[2023-07-03 07:42:14] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-03 07:42:14] 3.3- if aun status > 0 
[2023-07-03 07:42:14] 3.5 check  the app have key '.rating.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.version.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '..' if not found 
[2023-07-03 07:42:14] 3.6- Insert  all keys 
[2023-07-03 07:42:14] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.logo.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.link.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.author.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.votes.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:14] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:14] 3.5 check  the app have key '.file.' if not found 
[2023-07-03 07:42:14] 3.7 check if the keys exists, update data
[2023-07-03 07:42:15] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:42:15] 3.1- start_process
[2023-07-03 07:42:15] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-03 07:42:15] 3.3- if aun status > 0 
[2023-07-03 07:42:15] 3.1- start_process
[2023-07-03 07:42:15] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-03 07:42:15] 3.3- if aun status > 0 
[2023-07-03 07:42:15] 3.1- start_process
[2023-07-03 07:42:15] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-03 07:42:15] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:16] 3.1- start_process
[2023-07-03 07:42:16] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-03 07:42:16] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.1- start_process
[2023-07-03 07:42:17] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-03 07:42:17] 3.3- if aun status > 0 
[2023-07-03 07:42:17] 3.9- Finish cron_job Function
[2023-07-03 07:44:02] 1.1- Start cron_job Function
[2023-07-03 07:44:02] 1.2-request Api_url $api_url
[2023-07-03 07:44:03] 1.3-store events of the jop periodically during process 
[2023-07-03 07:44:03] 1.4- fetch data from Api
[2023-07-03 07:44:03] 1.5- View data that returned from API
[2023-07-03 07:44:03] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:44:03] 1.7- get data of each project to select 
[2023-07-03 07:44:03] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:44:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:44:03] 1.10- check project update number [PUN]if not found
[2023-07-03 07:44:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:44:03] 3.9- Finish cron_job Function
[2023-07-03 07:45:17] 1.1- Start cron_job Function
[2023-07-03 07:45:17] 1.2-request Api_url $api_url
[2023-07-03 07:45:18] 1.3-store events of the jop periodically during process 
[2023-07-03 07:45:18] 1.4- fetch data from Api
[2023-07-03 07:45:18] 1.5- View data that returned from API
[2023-07-03 07:45:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:45:18] 1.7- get data of each project to select 
[2023-07-03 07:45:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:45:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:45:18] 1.10- check project update number [PUN]if not found
[2023-07-03 07:45:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:45:18] 3.9- Finish cron_job Function
[2023-07-03 07:46:02] 1.1- Start cron_job Function
[2023-07-03 07:46:02] 1.2-request Api_url $api_url
[2023-07-03 07:46:02] 1.3-store events of the jop periodically during process 
[2023-07-03 07:46:02] 1.4- fetch data from Api
[2023-07-03 07:46:02] 1.5- View data that returned from API
[2023-07-03 07:46:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:46:02] 1.7- get data of each project to select 
[2023-07-03 07:46:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:46:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:46:02] 1.10- check project update number [PUN]if not found
[2023-07-03 07:46:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:46:02] 3.9- Finish cron_job Function
[2023-07-03 07:46:30] 1.1- Start cron_job Function
[2023-07-03 07:46:30] 1.2-request Api_url $api_url
[2023-07-03 07:46:30] 1.3-store events of the jop periodically during process 
[2023-07-03 07:46:30] 1.4- fetch data from Api
[2023-07-03 07:46:30] 1.5- View data that returned from API
[2023-07-03 07:46:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:46:30] 1.7- get data of each project to select 
[2023-07-03 07:46:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:46:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:46:30] 1.10- check project update number [PUN]if not found
[2023-07-03 07:46:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:46:30] 3.9- Finish cron_job Function
[2023-07-03 07:47:30] 1.1- Start cron_job Function
[2023-07-03 07:47:30] 1.2-request Api_url $api_url
[2023-07-03 07:47:30] 1.3-store events of the jop periodically during process 
[2023-07-03 07:47:30] 1.4- fetch data from Api
[2023-07-03 07:47:30] 1.5- View data that returned from API
[2023-07-03 07:47:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:47:30] 1.7- get data of each project to select 
[2023-07-03 07:47:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:47:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:47:30] 1.10- check project update number [PUN]if not found
[2023-07-03 07:47:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:47:30] 3.9- Finish cron_job Function
[2023-07-03 07:48:30] 1.1- Start cron_job Function
[2023-07-03 07:48:30] 1.2-request Api_url $api_url
[2023-07-03 07:48:31] 1.3-store events of the jop periodically during process 
[2023-07-03 07:48:31] 1.4- fetch data from Api
[2023-07-03 07:48:31] 1.5- View data that returned from API
[2023-07-03 07:48:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:48:31] 1.7- get data of each project to select 
[2023-07-03 07:48:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:48:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:48:31] 1.10- check project update number [PUN]if not found
[2023-07-03 07:48:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:48:31] 3.9- Finish cron_job Function
[2023-07-03 07:49:30] 1.1- Start cron_job Function
[2023-07-03 07:49:30] 1.2-request Api_url $api_url
[2023-07-03 07:49:30] 1.3-store events of the jop periodically during process 
[2023-07-03 07:49:30] 1.4- fetch data from Api
[2023-07-03 07:49:30] 1.5- View data that returned from API
[2023-07-03 07:49:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:49:30] 1.7- get data of each project to select 
[2023-07-03 07:49:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:49:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:49:30] 1.10- check project update number [PUN]if not found
[2023-07-03 07:49:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:49:30] 3.9- Finish cron_job Function
[2023-07-03 07:50:37] 1.1- Start cron_job Function
[2023-07-03 07:50:37] 1.2-request Api_url $api_url
[2023-07-03 07:50:37] 1.3-store events of the jop periodically during process 
[2023-07-03 07:50:37] 1.4- fetch data from Api
[2023-07-03 07:50:37] 1.5- View data that returned from API
[2023-07-03 07:50:37] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:50:37] 1.7- get data of each project to select 
[2023-07-03 07:50:37] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:50:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:50:37] 1.10- check project update number [PUN]if not found
[2023-07-03 07:50:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:50:37] 2.2- check if project update number[pun > 0]
[2023-07-03 07:50:37] 2.3- store data into history table
[2023-07-03 07:50:37] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:39] 3.1- start_process
[2023-07-03 07:50:39] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-03 07:50:39] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:40] 3.1- start_process
[2023-07-03 07:50:40] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-03 07:50:40] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:42] 3.1- start_process
[2023-07-03 07:50:42] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-03 07:50:42] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:43] 3.1- start_process
[2023-07-03 07:50:43] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-03 07:50:43] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:44] 3.1- start_process
[2023-07-03 07:50:44] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-03 07:50:44] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 2.7-changed the new pun 538 
[2023-07-03 07:50:45] 2.8- register updated_app in event table
[2023-07-03 07:50:45] 2.9- set status {'updated'}
[2023-07-03 07:50:45] 3.1- start_process
[2023-07-03 07:50:45] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-03 07:50:45] 3.3- if aun status > 0 
[2023-07-03 07:50:45] 3.5 check  the app have key '.rating.' if not found 
[2023-07-03 07:50:45] 3.7 check if the keys exists, update data
[2023-07-03 07:50:45] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:45] 3.5 check  the app have key '.version.' if not found 
[2023-07-03 07:50:45] 3.7 check if the keys exists, update data
[2023-07-03 07:50:45] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:45] 3.5 check  the app have key '..' if not found 
[2023-07-03 07:50:46] 3.6- Insert  all keys 
[2023-07-03 07:50:46] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-03 07:50:46] 3.7 check if the keys exists, update data
[2023-07-03 07:50:46] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:46] 3.5 check  the app have key '.logo.' if not found 
[2023-07-03 07:50:46] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.link.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.author.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.votes.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.5 check  the app have key '.file.' if not found 
[2023-07-03 07:50:47] 3.7 check if the keys exists, update data
[2023-07-03 07:50:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 07:50:47] 3.1- start_process
[2023-07-03 07:50:47] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-03 07:50:47] 3.3- if aun status > 0 
[2023-07-03 07:50:47] 3.1- start_process
[2023-07-03 07:50:47] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-03 07:50:47] 3.3- if aun status > 0 
[2023-07-03 07:50:47] 3.1- start_process
[2023-07-03 07:50:47] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-03 07:50:47] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:48] 3.1- start_process
[2023-07-03 07:50:48] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-03 07:50:48] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:49] 3.1- start_process
[2023-07-03 07:50:49] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-03 07:50:49] 3.3- if aun status > 0 
[2023-07-03 07:50:50] 3.1- start_process
[2023-07-03 07:50:50] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-03 07:50:50] 3.3- if aun status > 0 
[2023-07-03 07:50:50] 3.1- start_process
[2023-07-03 07:50:50] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-03 07:50:50] 3.3- if aun status > 0 
[2023-07-03 07:50:50] 3.1- start_process
[2023-07-03 07:50:50] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-03 07:50:50] 3.3- if aun status > 0 
[2023-07-03 07:50:50] 3.9- Finish cron_job Function
[2023-07-03 07:51:28] 1.1- Start cron_job Function
[2023-07-03 07:51:28] 1.2-request Api_url $api_url
[2023-07-03 07:51:29] 1.3-store events of the jop periodically during process 
[2023-07-03 07:51:29] 1.4- fetch data from Api
[2023-07-03 07:51:29] 1.5- View data that returned from API
[2023-07-03 07:51:29] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:51:29] 1.7- get data of each project to select 
[2023-07-03 07:51:29] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:51:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:51:29] 1.10- check project update number [PUN]if not found
[2023-07-03 07:51:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:51:29] 3.9- Finish cron_job Function
[2023-07-03 07:52:38] 1.1- Start cron_job Function
[2023-07-03 07:52:38] 1.2-request Api_url $api_url
[2023-07-03 07:52:38] 1.3-store events of the jop periodically during process 
[2023-07-03 07:52:38] 1.4- fetch data from Api
[2023-07-03 07:52:38] 1.5- View data that returned from API
[2023-07-03 07:52:38] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:52:38] 1.7- get data of each project to select 
[2023-07-03 07:52:38] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:52:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:52:38] 1.10- check project update number [PUN]if not found
[2023-07-03 07:52:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:52:38] 3.9- Finish cron_job Function
[2023-07-03 07:53:32] 1.1- Start cron_job Function
[2023-07-03 07:53:32] 1.2-request Api_url $api_url
[2023-07-03 07:53:32] 1.3-store events of the jop periodically during process 
[2023-07-03 07:53:32] 1.4- fetch data from Api
[2023-07-03 07:53:32] 1.5- View data that returned from API
[2023-07-03 07:53:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:53:32] 1.7- get data of each project to select 
[2023-07-03 07:53:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:53:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:53:32] 1.10- check project update number [PUN]if not found
[2023-07-03 07:53:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:53:32] 3.9- Finish cron_job Function
[2023-07-03 07:54:38] 1.1- Start cron_job Function
[2023-07-03 07:54:38] 1.2-request Api_url $api_url
[2023-07-03 07:54:38] 1.3-store events of the jop periodically during process 
[2023-07-03 07:54:38] 1.4- fetch data from Api
[2023-07-03 07:54:38] 1.5- View data that returned from API
[2023-07-03 07:54:38] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:54:38] 1.7- get data of each project to select 
[2023-07-03 07:54:38] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:54:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:54:38] 1.10- check project update number [PUN]if not found
[2023-07-03 07:54:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:54:38] 3.9- Finish cron_job Function
[2023-07-03 07:55:33] 1.1- Start cron_job Function
[2023-07-03 07:55:33] 1.2-request Api_url $api_url
[2023-07-03 07:55:34] 1.3-store events of the jop periodically during process 
[2023-07-03 07:55:34] 1.4- fetch data from Api
[2023-07-03 07:55:34] 1.5- View data that returned from API
[2023-07-03 07:55:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:55:34] 1.7- get data of each project to select 
[2023-07-03 07:55:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:55:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:55:34] 1.10- check project update number [PUN]if not found
[2023-07-03 07:55:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:55:34] 3.9- Finish cron_job Function
[2023-07-03 07:56:39] 1.1- Start cron_job Function
[2023-07-03 07:56:39] 1.2-request Api_url $api_url
[2023-07-03 07:56:40] 1.3-store events of the jop periodically during process 
[2023-07-03 07:56:40] 1.4- fetch data from Api
[2023-07-03 07:56:40] 1.5- View data that returned from API
[2023-07-03 07:56:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:56:40] 1.7- get data of each project to select 
[2023-07-03 07:56:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:56:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:56:40] 1.10- check project update number [PUN]if not found
[2023-07-03 07:56:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:56:40] 3.9- Finish cron_job Function
[2023-07-03 07:57:40] 1.1- Start cron_job Function
[2023-07-03 07:57:40] 1.2-request Api_url $api_url
[2023-07-03 07:57:40] 1.3-store events of the jop periodically during process 
[2023-07-03 07:57:40] 1.4- fetch data from Api
[2023-07-03 07:57:40] 1.5- View data that returned from API
[2023-07-03 07:57:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:57:40] 1.7- get data of each project to select 
[2023-07-03 07:57:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:57:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:57:40] 1.10- check project update number [PUN]if not found
[2023-07-03 07:57:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:57:40] 3.9- Finish cron_job Function
[2023-07-03 07:58:32] 1.1- Start cron_job Function
[2023-07-03 07:58:32] 1.2-request Api_url $api_url
[2023-07-03 07:58:33] 1.3-store events of the jop periodically during process 
[2023-07-03 07:58:33] 1.4- fetch data from Api
[2023-07-03 07:58:33] 1.5- View data that returned from API
[2023-07-03 07:58:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:58:33] 1.7- get data of each project to select 
[2023-07-03 07:58:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:58:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:58:33] 1.10- check project update number [PUN]if not found
[2023-07-03 07:58:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:58:33] 3.9- Finish cron_job Function
[2023-07-03 07:59:30] 1.1- Start cron_job Function
[2023-07-03 07:59:30] 1.2-request Api_url $api_url
[2023-07-03 07:59:30] 1.3-store events of the jop periodically during process 
[2023-07-03 07:59:30] 1.4- fetch data from Api
[2023-07-03 07:59:30] 1.5- View data that returned from API
[2023-07-03 07:59:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 07:59:30] 1.7- get data of each project to select 
[2023-07-03 07:59:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 07:59:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 07:59:30] 1.10- check project update number [PUN]if not found
[2023-07-03 07:59:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 07:59:30] 3.9- Finish cron_job Function
[2023-07-03 08:00:31] 1.1- Start cron_job Function
[2023-07-03 08:00:31] 1.2-request Api_url $api_url
[2023-07-03 08:00:31] 1.3-store events of the jop periodically during process 
[2023-07-03 08:00:31] 1.4- fetch data from Api
[2023-07-03 08:00:31] 1.5- View data that returned from API
[2023-07-03 08:00:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:00:31] 1.7- get data of each project to select 
[2023-07-03 08:00:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:00:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:00:31] 1.10- check project update number [PUN]if not found
[2023-07-03 08:00:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:00:31] 3.9- Finish cron_job Function
[2023-07-03 08:01:47] 1.1- Start cron_job Function
[2023-07-03 08:01:47] 1.2-request Api_url $api_url
[2023-07-03 08:01:47] 1.3-store events of the jop periodically during process 
[2023-07-03 08:01:47] 1.4- fetch data from Api
[2023-07-03 08:01:47] 1.5- View data that returned from API
[2023-07-03 08:01:47] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:01:47] 1.7- get data of each project to select 
[2023-07-03 08:01:47] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:01:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:01:47] 1.10- check project update number [PUN]if not found
[2023-07-03 08:01:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:01:47] 3.9- Finish cron_job Function
[2023-07-03 08:02:31] 1.1- Start cron_job Function
[2023-07-03 08:02:31] 1.2-request Api_url $api_url
[2023-07-03 08:02:32] 1.3-store events of the jop periodically during process 
[2023-07-03 08:02:32] 1.4- fetch data from Api
[2023-07-03 08:02:32] 1.5- View data that returned from API
[2023-07-03 08:02:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:02:32] 1.7- get data of each project to select 
[2023-07-03 08:02:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:02:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:02:32] 1.10- check project update number [PUN]if not found
[2023-07-03 08:02:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:02:32] 3.9- Finish cron_job Function
[2023-07-03 08:03:48] 1.1- Start cron_job Function
[2023-07-03 08:03:48] 1.2-request Api_url $api_url
[2023-07-03 08:03:48] 1.3-store events of the jop periodically during process 
[2023-07-03 08:03:48] 1.4- fetch data from Api
[2023-07-03 08:03:48] 1.5- View data that returned from API
[2023-07-03 08:03:48] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:03:48] 1.7- get data of each project to select 
[2023-07-03 08:03:48] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:03:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:03:48] 1.10- check project update number [PUN]if not found
[2023-07-03 08:03:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:03:48] 3.9- Finish cron_job Function
[2023-07-03 08:04:31] 1.1- Start cron_job Function
[2023-07-03 08:04:31] 1.2-request Api_url $api_url
[2023-07-03 08:04:31] 1.3-store events of the jop periodically during process 
[2023-07-03 08:04:31] 1.4- fetch data from Api
[2023-07-03 08:04:31] 1.5- View data that returned from API
[2023-07-03 08:04:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:04:31] 1.7- get data of each project to select 
[2023-07-03 08:04:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:04:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:04:31] 1.10- check project update number [PUN]if not found
[2023-07-03 08:04:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:04:31] 3.9- Finish cron_job Function
[2023-07-03 08:05:48] 1.1- Start cron_job Function
[2023-07-03 08:05:48] 1.2-request Api_url $api_url
[2023-07-03 08:05:48] 1.3-store events of the jop periodically during process 
[2023-07-03 08:05:48] 1.4- fetch data from Api
[2023-07-03 08:05:48] 1.5- View data that returned from API
[2023-07-03 08:05:48] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:05:48] 1.7- get data of each project to select 
[2023-07-03 08:05:48] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:05:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:05:48] 1.10- check project update number [PUN]if not found
[2023-07-03 08:05:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:05:48] 3.9- Finish cron_job Function
[2023-07-03 08:06:32] 1.1- Start cron_job Function
[2023-07-03 08:06:32] 1.2-request Api_url $api_url
[2023-07-03 08:06:33] 1.3-store events of the jop periodically during process 
[2023-07-03 08:06:33] 1.4- fetch data from Api
[2023-07-03 08:06:33] 1.5- View data that returned from API
[2023-07-03 08:06:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:06:33] 1.7- get data of each project to select 
[2023-07-03 08:06:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:06:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:06:33] 1.10- check project update number [PUN]if not found
[2023-07-03 08:06:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:06:33] 3.9- Finish cron_job Function
[2023-07-03 08:07:49] 1.1- Start cron_job Function
[2023-07-03 08:07:49] 1.2-request Api_url $api_url
[2023-07-03 08:07:50] 1.3-store events of the jop periodically during process 
[2023-07-03 08:07:50] 1.4- fetch data from Api
[2023-07-03 08:07:50] 1.5- View data that returned from API
[2023-07-03 08:07:50] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:07:50] 1.7- get data of each project to select 
[2023-07-03 08:07:50] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:07:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:07:50] 1.10- check project update number [PUN]if not found
[2023-07-03 08:07:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:07:50] 3.9- Finish cron_job Function
[2023-07-03 08:08:32] 1.1- Start cron_job Function
[2023-07-03 08:08:32] 1.2-request Api_url $api_url
[2023-07-03 08:08:33] 1.3-store events of the jop periodically during process 
[2023-07-03 08:08:33] 1.4- fetch data from Api
[2023-07-03 08:08:33] 1.5- View data that returned from API
[2023-07-03 08:08:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:08:33] 1.7- get data of each project to select 
[2023-07-03 08:08:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:08:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:08:33] 1.10- check project update number [PUN]if not found
[2023-07-03 08:08:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:08:33] 3.9- Finish cron_job Function
[2023-07-03 08:10:23] 1.1- Start cron_job Function
[2023-07-03 08:10:23] 1.2-request Api_url $api_url
[2023-07-03 08:10:25] 1.3-store events of the jop periodically during process 
[2023-07-03 08:10:25] 1.4- fetch data from Api
[2023-07-03 08:10:25] 1.5- View data that returned from API
[2023-07-03 08:10:25] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:10:25] 1.7- get data of each project to select 
[2023-07-03 08:10:25] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:10:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:10:25] 1.10- check project update number [PUN]if not found
[2023-07-03 08:10:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:10:25] 3.9- Finish cron_job Function
[2023-07-03 08:10:33] 1.1- Start cron_job Function
[2023-07-03 08:10:33] 1.2-request Api_url $api_url
[2023-07-03 08:10:35] 1.3-store events of the jop periodically during process 
[2023-07-03 08:10:35] 1.4- fetch data from Api
[2023-07-03 08:10:35] 1.5- View data that returned from API
[2023-07-03 08:10:35] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:10:35] 1.7- get data of each project to select 
[2023-07-03 08:10:35] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:10:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:10:35] 1.10- check project update number [PUN]if not found
[2023-07-03 08:10:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:10:35] 3.9- Finish cron_job Function
[2023-07-03 08:11:43] 1.1- Start cron_job Function
[2023-07-03 08:11:43] 1.2-request Api_url $api_url
[2023-07-03 08:11:44] 1.3-store events of the jop periodically during process 
[2023-07-03 08:11:44] 1.4- fetch data from Api
[2023-07-03 08:11:44] 1.5- View data that returned from API
[2023-07-03 08:11:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:11:44] 1.7- get data of each project to select 
[2023-07-03 08:11:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:11:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:11:44] 1.10- check project update number [PUN]if not found
[2023-07-03 08:11:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:11:44] 3.9- Finish cron_job Function
[2023-07-03 08:12:48] 1.1- Start cron_job Function
[2023-07-03 08:12:48] 1.2-request Api_url $api_url
[2023-07-03 08:12:49] 1.3-store events of the jop periodically during process 
[2023-07-03 08:12:49] 1.4- fetch data from Api
[2023-07-03 08:12:49] 1.5- View data that returned from API
[2023-07-03 08:12:49] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:12:49] 1.7- get data of each project to select 
[2023-07-03 08:12:49] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:12:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:12:49] 1.10- check project update number [PUN]if not found
[2023-07-03 08:12:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:12:49] 3.9- Finish cron_job Function
[2023-07-03 08:14:22] 1.1- Start cron_job Function
[2023-07-03 08:14:22] 1.2-request Api_url $api_url
[2023-07-03 08:14:24] 1.3-store events of the jop periodically during process 
[2023-07-03 08:14:24] 1.4- fetch data from Api
[2023-07-03 08:14:24] 1.5- View data that returned from API
[2023-07-03 08:14:24] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:14:24] 1.7- get data of each project to select 
[2023-07-03 08:14:24] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:14:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:14:24] 1.10- check project update number [PUN]if not found
[2023-07-03 08:14:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:14:24] 3.9- Finish cron_job Function
[2023-07-03 08:14:44] 1.1- Start cron_job Function
[2023-07-03 08:14:44] 1.2-request Api_url $api_url
[2023-07-03 08:14:45] 1.3-store events of the jop periodically during process 
[2023-07-03 08:14:45] 1.4- fetch data from Api
[2023-07-03 08:14:45] 1.5- View data that returned from API
[2023-07-03 08:14:45] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:14:45] 1.7- get data of each project to select 
[2023-07-03 08:14:45] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:14:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:14:45] 1.10- check project update number [PUN]if not found
[2023-07-03 08:14:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:14:45] 3.9- Finish cron_job Function
[2023-07-03 08:16:24] 1.1- Start cron_job Function
[2023-07-03 08:16:24] 1.2-request Api_url $api_url
[2023-07-03 08:16:25] 1.3-store events of the jop periodically during process 
[2023-07-03 08:16:25] 1.4- fetch data from Api
[2023-07-03 08:16:25] 1.5- View data that returned from API
[2023-07-03 08:16:25] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:16:25] 1.7- get data of each project to select 
[2023-07-03 08:16:25] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:16:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:16:25] 1.10- check project update number [PUN]if not found
[2023-07-03 08:16:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:16:25] 3.9- Finish cron_job Function
[2023-07-03 08:16:43] 1.1- Start cron_job Function
[2023-07-03 08:16:43] 1.2-request Api_url $api_url
[2023-07-03 08:16:43] 1.3-store events of the jop periodically during process 
[2023-07-03 08:16:43] 1.4- fetch data from Api
[2023-07-03 08:16:43] 1.5- View data that returned from API
[2023-07-03 08:16:43] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:16:43] 1.7- get data of each project to select 
[2023-07-03 08:16:43] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:16:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:16:43] 1.10- check project update number [PUN]if not found
[2023-07-03 08:16:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:16:43] 3.9- Finish cron_job Function
[2023-07-03 08:18:24] 1.1- Start cron_job Function
[2023-07-03 08:18:24] 1.2-request Api_url $api_url
[2023-07-03 08:18:25] 1.3-store events of the jop periodically during process 
[2023-07-03 08:18:25] 1.4- fetch data from Api
[2023-07-03 08:18:25] 1.5- View data that returned from API
[2023-07-03 08:18:25] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:18:25] 1.7- get data of each project to select 
[2023-07-03 08:18:25] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:18:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:18:25] 1.10- check project update number [PUN]if not found
[2023-07-03 08:18:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:18:25] 3.9- Finish cron_job Function
[2023-07-03 08:18:42] 1.1- Start cron_job Function
[2023-07-03 08:18:42] 1.2-request Api_url $api_url
[2023-07-03 08:18:43] 1.3-store events of the jop periodically during process 
[2023-07-03 08:18:43] 1.4- fetch data from Api
[2023-07-03 08:18:43] 1.5- View data that returned from API
[2023-07-03 08:18:43] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:18:43] 1.7- get data of each project to select 
[2023-07-03 08:18:43] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:18:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:18:43] 1.10- check project update number [PUN]if not found
[2023-07-03 08:18:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:18:43] 3.9- Finish cron_job Function
[2023-07-03 08:20:00] 1.1- Start cron_job Function
[2023-07-03 08:20:00] 1.2-request Api_url $api_url
[2023-07-03 08:20:01] 1.3-store events of the jop periodically during process 
[2023-07-03 08:20:01] 1.4- fetch data from Api
[2023-07-03 08:20:01] 1.5- View data that returned from API
[2023-07-03 08:20:01] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:20:01] 1.7- get data of each project to select 
[2023-07-03 08:20:01] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:20:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:20:01] 1.10- check project update number [PUN]if not found
[2023-07-03 08:20:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:20:01] 3.9- Finish cron_job Function
[2023-07-03 08:21:00] 1.1- Start cron_job Function
[2023-07-03 08:21:00] 1.2-request Api_url $api_url
[2023-07-03 08:21:01] 1.3-store events of the jop periodically during process 
[2023-07-03 08:21:01] 1.4- fetch data from Api
[2023-07-03 08:21:01] 1.5- View data that returned from API
[2023-07-03 08:21:01] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:21:01] 1.7- get data of each project to select 
[2023-07-03 08:21:01] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:21:01] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:21:01] 1.10- check project update number [PUN]if not found
[2023-07-03 08:21:01] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:21:01] 3.9- Finish cron_job Function
[2023-07-03 08:22:20] 1.1- Start cron_job Function
[2023-07-03 08:22:20] 1.2-request Api_url $api_url
[2023-07-03 08:22:21] 1.3-store events of the jop periodically during process 
[2023-07-03 08:22:21] 1.4- fetch data from Api
[2023-07-03 08:22:21] 1.5- View data that returned from API
[2023-07-03 08:22:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:22:21] 1.7- get data of each project to select 
[2023-07-03 08:22:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:22:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:22:21] 1.10- check project update number [PUN]if not found
[2023-07-03 08:22:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:22:21] 3.9- Finish cron_job Function
[2023-07-03 08:23:01] 1.1- Start cron_job Function
[2023-07-03 08:23:01] 1.2-request Api_url $api_url
[2023-07-03 08:23:02] 1.3-store events of the jop periodically during process 
[2023-07-03 08:23:02] 1.4- fetch data from Api
[2023-07-03 08:23:02] 1.5- View data that returned from API
[2023-07-03 08:23:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:23:02] 1.7- get data of each project to select 
[2023-07-03 08:23:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:23:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:23:02] 1.10- check project update number [PUN]if not found
[2023-07-03 08:23:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:23:02] 3.9- Finish cron_job Function
[2023-07-03 08:24:21] 1.1- Start cron_job Function
[2023-07-03 08:24:21] 1.2-request Api_url $api_url
[2023-07-03 08:24:21] 1.3-store events of the jop periodically during process 
[2023-07-03 08:24:21] 1.4- fetch data from Api
[2023-07-03 08:24:21] 1.5- View data that returned from API
[2023-07-03 08:24:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:24:21] 1.7- get data of each project to select 
[2023-07-03 08:24:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:24:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:24:21] 1.10- check project update number [PUN]if not found
[2023-07-03 08:24:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:24:21] 3.9- Finish cron_job Function
[2023-07-03 08:25:01] 1.1- Start cron_job Function
[2023-07-03 08:25:01] 1.2-request Api_url $api_url
[2023-07-03 08:25:02] 1.3-store events of the jop periodically during process 
[2023-07-03 08:25:02] 1.4- fetch data from Api
[2023-07-03 08:25:02] 1.5- View data that returned from API
[2023-07-03 08:25:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:25:02] 1.7- get data of each project to select 
[2023-07-03 08:25:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:25:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:25:02] 1.10- check project update number [PUN]if not found
[2023-07-03 08:25:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:25:02] 3.9- Finish cron_job Function
[2023-07-03 08:26:20] 1.1- Start cron_job Function
[2023-07-03 08:26:20] 1.2-request Api_url $api_url
[2023-07-03 08:26:21] 1.3-store events of the jop periodically during process 
[2023-07-03 08:26:21] 1.4- fetch data from Api
[2023-07-03 08:26:21] 1.5- View data that returned from API
[2023-07-03 08:26:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:26:21] 1.7- get data of each project to select 
[2023-07-03 08:26:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:26:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:26:21] 1.10- check project update number [PUN]if not found
[2023-07-03 08:26:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:26:21] 3.9- Finish cron_job Function
[2023-07-03 08:27:02] 1.1- Start cron_job Function
[2023-07-03 08:27:02] 1.2-request Api_url $api_url
[2023-07-03 08:27:02] 1.3-store events of the jop periodically during process 
[2023-07-03 08:27:02] 1.4- fetch data from Api
[2023-07-03 08:27:02] 1.5- View data that returned from API
[2023-07-03 08:27:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:27:02] 1.7- get data of each project to select 
[2023-07-03 08:27:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:27:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:27:02] 1.10- check project update number [PUN]if not found
[2023-07-03 08:27:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:27:02] 3.9- Finish cron_job Function
[2023-07-03 08:28:21] 1.1- Start cron_job Function
[2023-07-03 08:28:21] 1.2-request Api_url $api_url
[2023-07-03 08:28:22] 1.3-store events of the jop periodically during process 
[2023-07-03 08:28:22] 1.4- fetch data from Api
[2023-07-03 08:28:22] 1.5- View data that returned from API
[2023-07-03 08:28:22] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:28:22] 1.7- get data of each project to select 
[2023-07-03 08:28:22] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:28:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:28:22] 1.10- check project update number [PUN]if not found
[2023-07-03 08:28:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:28:22] 3.9- Finish cron_job Function
[2023-07-03 08:29:02] 1.1- Start cron_job Function
[2023-07-03 08:29:02] 1.2-request Api_url $api_url
[2023-07-03 08:29:02] 1.3-store events of the jop periodically during process 
[2023-07-03 08:29:02] 1.4- fetch data from Api
[2023-07-03 08:29:02] 1.5- View data that returned from API
[2023-07-03 08:29:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:29:02] 1.7- get data of each project to select 
[2023-07-03 08:29:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:29:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:29:02] 1.10- check project update number [PUN]if not found
[2023-07-03 08:29:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:29:02] 3.9- Finish cron_job Function
[2023-07-03 08:30:21] 1.1- Start cron_job Function
[2023-07-03 08:30:21] 1.2-request Api_url $api_url
[2023-07-03 08:30:21] 1.3-store events of the jop periodically during process 
[2023-07-03 08:30:21] 1.4- fetch data from Api
[2023-07-03 08:30:21] 1.5- View data that returned from API
[2023-07-03 08:30:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 08:30:21] 1.7- get data of each project to select 
[2023-07-03 08:30:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 08:30:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 08:30:21] 1.10- check project update number [PUN]if not found
[2023-07-03 08:30:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 08:30:21] 3.9- Finish cron_job Function
[2023-07-03 10:40:40] 1.1- Start cron_job Function
[2023-07-03 10:40:40] 1.2-request Api_url $api_url
[2023-07-03 10:40:41] 1.3-store events of the jop periodically during process 
[2023-07-03 10:40:41] 1.4- fetch data from Api
[2023-07-03 10:40:41] 1.5- View data that returned from API
[2023-07-03 10:40:41] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:40:41] 1.7- get data of each project to select 
[2023-07-03 10:40:41] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:40:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:40:41] 1.10- check project update number [PUN]if not found
[2023-07-03 10:40:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:40:41] 2.2- check if project update number[pun > 0]
[2023-07-03 10:40:41] 2.3- store data into history table
[2023-07-03 10:40:41] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:42] 3.1- start_process
[2023-07-03 10:40:42] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-03 10:40:42] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:43] 3.1- start_process
[2023-07-03 10:40:43] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-03 10:40:43] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:44] 3.1- start_process
[2023-07-03 10:40:44] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-03 10:40:44] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:45] 3.1- start_process
[2023-07-03 10:40:45] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-03 10:40:45] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:46] 3.1- start_process
[2023-07-03 10:40:46] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-03 10:40:46] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 2.7-changed the new pun 539 
[2023-07-03 10:40:47] 2.8- register updated_app in event table
[2023-07-03 10:40:47] 2.9- set status {'updated'}
[2023-07-03 10:40:47] 3.1- start_process
[2023-07-03 10:40:47] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-03 10:40:47] 3.3- if aun status > 0 
[2023-07-03 10:40:47] 3.5 check  the app have key '.rating.' if not found 
[2023-07-03 10:40:47] 3.7 check if the keys exists, update data
[2023-07-03 10:40:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:47] 3.5 check  the app have key '.version.' if not found 
[2023-07-03 10:40:47] 3.7 check if the keys exists, update data
[2023-07-03 10:40:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:47] 3.5 check  the app have key '..' if not found 
[2023-07-03 10:40:47] 3.6- Insert  all keys 
[2023-07-03 10:40:47] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-03 10:40:47] 3.7 check if the keys exists, update data
[2023-07-03 10:40:47] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:47] 3.5 check  the app have key '.logo.' if not found 
[2023-07-03 10:40:47] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.link.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.author.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.votes.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.file.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.1- start_process
[2023-07-03 10:40:48] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-03 10:40:48] 3.3- if aun status > 0 
[2023-07-03 10:40:48] 2.7-changed the new pun 395 
[2023-07-03 10:40:48] 2.8- register updated_app in event table
[2023-07-03 10:40:48] 2.9- set status {'updated'}
[2023-07-03 10:40:48] 3.1- start_process
[2023-07-03 10:40:48] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-03 10:40:48] 3.3- if aun status > 0 
[2023-07-03 10:40:48] 3.5 check  the app have key '.rating.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.version.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '..' if not found 
[2023-07-03 10:40:48] 3.6- Insert  all keys 
[2023-07-03 10:40:48] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.logo.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.link.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.author.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.5 check  the app have key '.votes.' if not found 
[2023-07-03 10:40:48] 3.7 check if the keys exists, update data
[2023-07-03 10:40:48] 3.8- update all keys & logo & thumbnail 
[2023-07-03 10:40:48] 3.1- start_process
[2023-07-03 10:40:48] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-03 10:40:48] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:49] 3.1- start_process
[2023-07-03 10:40:49] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-03 10:40:49] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:50] 3.1- start_process
[2023-07-03 10:40:50] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-03 10:40:50] 3.3- if aun status > 0 
[2023-07-03 10:40:51] 3.1- start_process
[2023-07-03 10:40:51] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-03 10:40:51] 3.3- if aun status > 0 
[2023-07-03 10:40:51] 3.1- start_process
[2023-07-03 10:40:51] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-03 10:40:51] 3.3- if aun status > 0 
[2023-07-03 10:40:51] 3.1- start_process
[2023-07-03 10:40:51] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-03 10:40:51] 3.3- if aun status > 0 
[2023-07-03 10:40:51] 3.9- Finish cron_job Function
[2023-07-03 10:42:15] 1.1- Start cron_job Function
[2023-07-03 10:42:15] 1.2-request Api_url $api_url
[2023-07-03 10:42:15] 1.3-store events of the jop periodically during process 
[2023-07-03 10:42:15] 1.4- fetch data from Api
[2023-07-03 10:42:15] 1.5- View data that returned from API
[2023-07-03 10:42:15] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:42:15] 1.7- get data of each project to select 
[2023-07-03 10:42:15] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:42:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:42:15] 1.10- check project update number [PUN]if not found
[2023-07-03 10:42:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:42:15] 3.9- Finish cron_job Function
[2023-07-03 10:42:30] 1.1- Start cron_job Function
[2023-07-03 10:42:30] 1.2-request Api_url $api_url
[2023-07-03 10:42:31] 1.3-store events of the jop periodically during process 
[2023-07-03 10:42:31] 1.4- fetch data from Api
[2023-07-03 10:42:31] 1.5- View data that returned from API
[2023-07-03 10:42:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:42:31] 1.7- get data of each project to select 
[2023-07-03 10:42:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:42:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:42:31] 1.10- check project update number [PUN]if not found
[2023-07-03 10:42:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:42:31] 3.9- Finish cron_job Function
[2023-07-03 10:43:41] 1.1- Start cron_job Function
[2023-07-03 10:43:41] 1.2-request Api_url $api_url
[2023-07-03 10:43:41] 1.3-store events of the jop periodically during process 
[2023-07-03 10:43:41] 1.4- fetch data from Api
[2023-07-03 10:43:41] 1.5- View data that returned from API
[2023-07-03 10:43:41] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:43:41] 1.7- get data of each project to select 
[2023-07-03 10:43:41] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:43:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:43:41] 1.10- check project update number [PUN]if not found
[2023-07-03 10:43:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:43:41] 3.9- Finish cron_job Function
[2023-07-03 10:45:42] 1.1- Start cron_job Function
[2023-07-03 10:45:42] 1.2-request Api_url $api_url
[2023-07-03 10:45:43] 1.3-store events of the jop periodically during process 
[2023-07-03 10:45:43] 1.4- fetch data from Api
[2023-07-03 10:45:43] 1.5- View data that returned from API
[2023-07-03 10:45:43] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:45:43] 1.7- get data of each project to select 
[2023-07-03 10:45:43] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:45:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:45:43] 1.10- check project update number [PUN]if not found
[2023-07-03 10:45:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:45:43] 3.9- Finish cron_job Function
[2023-07-03 10:46:45] 1.1- Start cron_job Function
[2023-07-03 10:46:45] 1.2-request Api_url $api_url
[2023-07-03 10:46:46] 1.3-store events of the jop periodically during process 
[2023-07-03 10:46:46] 1.4- fetch data from Api
[2023-07-03 10:46:46] 1.5- View data that returned from API
[2023-07-03 10:46:46] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:46:46] 1.7- get data of each project to select 
[2023-07-03 10:46:46] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:46:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:46:46] 1.10- check project update number [PUN]if not found
[2023-07-03 10:46:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:46:46] 3.9- Finish cron_job Function
[2023-07-03 10:47:39] 1.1- Start cron_job Function
[2023-07-03 10:47:39] 1.2-request Api_url $api_url
[2023-07-03 10:47:39] 1.3-store events of the jop periodically during process 
[2023-07-03 10:47:39] 1.4- fetch data from Api
[2023-07-03 10:47:39] 1.5- View data that returned from API
[2023-07-03 10:47:39] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:47:39] 1.7- get data of each project to select 
[2023-07-03 10:47:39] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:47:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:47:39] 1.10- check project update number [PUN]if not found
[2023-07-03 10:47:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:47:39] 3.9- Finish cron_job Function
[2023-07-03 10:49:56] 1.1- Start cron_job Function
[2023-07-03 10:49:56] 1.2-request Api_url $api_url
[2023-07-03 10:49:57] 1.3-store events of the jop periodically during process 
[2023-07-03 10:49:57] 1.4- fetch data from Api
[2023-07-03 10:49:57] 1.5- View data that returned from API
[2023-07-03 10:49:57] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:49:57] 1.7- get data of each project to select 
[2023-07-03 10:49:57] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:49:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:49:57] 1.10- check project update number [PUN]if not found
[2023-07-03 10:49:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:49:57] 3.9- Finish cron_job Function
[2023-07-03 10:53:56] 1.1- Start cron_job Function
[2023-07-03 10:53:56] 1.2-request Api_url $api_url
[2023-07-03 10:53:57] 1.3-store events of the jop periodically during process 
[2023-07-03 10:53:57] 1.4- fetch data from Api
[2023-07-03 10:53:57] 1.5- View data that returned from API
[2023-07-03 10:53:57] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:53:57] 1.7- get data of each project to select 
[2023-07-03 10:53:57] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:53:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:53:57] 1.10- check project update number [PUN]if not found
[2023-07-03 10:53:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:53:57] 3.9- Finish cron_job Function
[2023-07-03 10:55:24] 1.1- Start cron_job Function
[2023-07-03 10:55:24] 1.2-request Api_url $api_url
[2023-07-03 10:55:25] 1.3-store events of the jop periodically during process 
[2023-07-03 10:55:25] 1.4- fetch data from Api
[2023-07-03 10:55:25] 1.5- View data that returned from API
[2023-07-03 10:55:25] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:55:25] 1.7- get data of each project to select 
[2023-07-03 10:55:25] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:55:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:55:25] 1.10- check project update number [PUN]if not found
[2023-07-03 10:55:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:55:25] 3.9- Finish cron_job Function
[2023-07-03 10:55:31] 1.1- Start cron_job Function
[2023-07-03 10:55:31] 1.2-request Api_url $api_url
[2023-07-03 10:55:31] 1.3-store events of the jop periodically during process 
[2023-07-03 10:55:31] 1.4- fetch data from Api
[2023-07-03 10:55:31] 1.5- View data that returned from API
[2023-07-03 10:55:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:55:31] 1.7- get data of each project to select 
[2023-07-03 10:55:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:55:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:55:31] 1.10- check project update number [PUN]if not found
[2023-07-03 10:55:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:55:31] 3.9- Finish cron_job Function
[2023-07-03 10:58:25] 1.1- Start cron_job Function
[2023-07-03 10:58:25] 1.2-request Api_url $api_url
[2023-07-03 10:58:25] 1.3-store events of the jop periodically during process 
[2023-07-03 10:58:25] 1.4- fetch data from Api
[2023-07-03 10:58:25] 1.5- View data that returned from API
[2023-07-03 10:58:25] 1.6- get and View projects & tags that returned from  API
[2023-07-03 10:58:25] 1.7- get data of each project to select 
[2023-07-03 10:58:25] 1.8- The selected project Name:my android. id: 7
[2023-07-03 10:58:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 10:58:25] 1.10- check project update number [PUN]if not found
[2023-07-03 10:58:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 10:58:25] 3.9- Finish cron_job Function
[2023-07-03 11:00:25] 1.1- Start cron_job Function
[2023-07-03 11:00:25] 1.2-request Api_url $api_url
[2023-07-03 11:00:26] 1.3-store events of the jop periodically during process 
[2023-07-03 11:00:26] 1.4- fetch data from Api
[2023-07-03 11:00:26] 1.5- View data that returned from API
[2023-07-03 11:00:26] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:00:26] 1.7- get data of each project to select 
[2023-07-03 11:00:26] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:00:26] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:00:26] 1.10- check project update number [PUN]if not found
[2023-07-03 11:00:26] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:00:26] 3.9- Finish cron_job Function
[2023-07-03 11:02:26] 1.1- Start cron_job Function
[2023-07-03 11:02:26] 1.2-request Api_url $api_url
[2023-07-03 11:02:27] 1.3-store events of the jop periodically during process 
[2023-07-03 11:02:27] 1.4- fetch data from Api
[2023-07-03 11:02:27] 1.5- View data that returned from API
[2023-07-03 11:02:27] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:02:27] 1.7- get data of each project to select 
[2023-07-03 11:02:27] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:02:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:02:27] 1.10- check project update number [PUN]if not found
[2023-07-03 11:02:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:02:27] 3.9- Finish cron_job Function
[2023-07-03 11:04:27] 1.1- Start cron_job Function
[2023-07-03 11:04:27] 1.2-request Api_url $api_url
[2023-07-03 11:04:28] 1.3-store events of the jop periodically during process 
[2023-07-03 11:04:28] 1.4- fetch data from Api
[2023-07-03 11:04:28] 1.5- View data that returned from API
[2023-07-03 11:04:28] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:04:28] 1.7- get data of each project to select 
[2023-07-03 11:04:28] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:04:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:04:28] 1.10- check project update number [PUN]if not found
[2023-07-03 11:04:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:04:28] 3.9- Finish cron_job Function
[2023-07-03 11:06:28] 1.1- Start cron_job Function
[2023-07-03 11:06:28] 1.2-request Api_url $api_url
[2023-07-03 11:06:29] 1.3-store events of the jop periodically during process 
[2023-07-03 11:06:29] 1.4- fetch data from Api
[2023-07-03 11:06:29] 1.5- View data that returned from API
[2023-07-03 11:06:29] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:06:29] 1.7- get data of each project to select 
[2023-07-03 11:06:29] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:06:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:06:29] 1.10- check project update number [PUN]if not found
[2023-07-03 11:06:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:06:29] 3.9- Finish cron_job Function
[2023-07-03 11:08:29] 1.1- Start cron_job Function
[2023-07-03 11:08:29] 1.2-request Api_url $api_url
[2023-07-03 11:08:36] 1.3-store events of the jop periodically during process 
[2023-07-03 11:08:36] 1.4- fetch data from Api
[2023-07-03 11:08:36] 1.5- View data that returned from API
[2023-07-03 11:08:36] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:08:36] 1.7- get data of each project to select 
[2023-07-03 11:08:36] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:08:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:08:36] 1.10- check project update number [PUN]if not found
[2023-07-03 11:08:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:08:36] 3.9- Finish cron_job Function
[2023-07-03 11:09:30] 1.1- Start cron_job Function
[2023-07-03 11:09:30] 1.2-request Api_url $api_url
[2023-07-03 11:09:30] 1.3-store events of the jop periodically during process 
[2023-07-03 11:09:30] 1.4- fetch data from Api
[2023-07-03 11:09:30] 1.5- View data that returned from API
[2023-07-03 11:09:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:09:30] 1.7- get data of each project to select 
[2023-07-03 11:09:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:09:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:09:30] 1.10- check project update number [PUN]if not found
[2023-07-03 11:09:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:09:30] 3.9- Finish cron_job Function
[2023-07-03 11:10:29] 1.1- Start cron_job Function
[2023-07-03 11:10:29] 1.2-request Api_url $api_url
[2023-07-03 11:10:29] 1.3-store events of the jop periodically during process 
[2023-07-03 11:10:29] 1.4- fetch data from Api
[2023-07-03 11:10:29] 1.5- View data that returned from API
[2023-07-03 11:10:29] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:10:29] 1.7- get data of each project to select 
[2023-07-03 11:10:29] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:10:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:10:29] 1.10- check project update number [PUN]if not found
[2023-07-03 11:10:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:10:29] 3.9- Finish cron_job Function
[2023-07-03 11:12:17] 1.1- Start cron_job Function
[2023-07-03 11:12:17] 1.2-request Api_url $api_url
[2023-07-03 11:12:18] 1.3-store events of the jop periodically during process 
[2023-07-03 11:12:18] 1.4- fetch data from Api
[2023-07-03 11:12:18] 1.5- View data that returned from API
[2023-07-03 11:12:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:12:18] 1.7- get data of each project to select 
[2023-07-03 11:12:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:12:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:12:18] 1.10- check project update number [PUN]if not found
[2023-07-03 11:12:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:12:18] 3.9- Finish cron_job Function
[2023-07-03 11:13:18] 1.1- Start cron_job Function
[2023-07-03 11:13:18] 1.2-request Api_url $api_url
[2023-07-03 11:13:18] 1.3-store events of the jop periodically during process 
[2023-07-03 11:13:18] 1.4- fetch data from Api
[2023-07-03 11:13:18] 1.5- View data that returned from API
[2023-07-03 11:13:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:13:18] 1.7- get data of each project to select 
[2023-07-03 11:13:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:13:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:13:18] 1.10- check project update number [PUN]if not found
[2023-07-03 11:13:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:13:18] 3.9- Finish cron_job Function
[2023-07-03 11:15:17] 1.1- Start cron_job Function
[2023-07-03 11:15:17] 1.2-request Api_url $api_url
[2023-07-03 11:15:18] 1.3-store events of the jop periodically during process 
[2023-07-03 11:15:18] 1.4- fetch data from Api
[2023-07-03 11:15:18] 1.5- View data that returned from API
[2023-07-03 11:15:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:15:18] 1.7- get data of each project to select 
[2023-07-03 11:15:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:15:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:15:18] 1.10- check project update number [PUN]if not found
[2023-07-03 11:15:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:15:18] 3.9- Finish cron_job Function
[2023-07-03 11:16:20] 1.1- Start cron_job Function
[2023-07-03 11:16:20] 1.2-request Api_url $api_url
[2023-07-03 11:16:20] 1.3-store events of the jop periodically during process 
[2023-07-03 11:16:20] 1.4- fetch data from Api
[2023-07-03 11:16:20] 1.5- View data that returned from API
[2023-07-03 11:16:20] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:16:20] 1.7- get data of each project to select 
[2023-07-03 11:16:20] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:16:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:16:20] 1.10- check project update number [PUN]if not found
[2023-07-03 11:16:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:16:20] 3.9- Finish cron_job Function
[2023-07-03 11:18:18] 1.1- Start cron_job Function
[2023-07-03 11:18:18] 1.2-request Api_url $api_url
[2023-07-03 11:18:19] 1.3-store events of the jop periodically during process 
[2023-07-03 11:18:19] 1.4- fetch data from Api
[2023-07-03 11:18:19] 1.5- View data that returned from API
[2023-07-03 11:18:19] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:18:19] 1.7- get data of each project to select 
[2023-07-03 11:18:19] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:18:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:18:19] 1.10- check project update number [PUN]if not found
[2023-07-03 11:18:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:18:19] 3.9- Finish cron_job Function
[2023-07-03 11:20:19] 1.1- Start cron_job Function
[2023-07-03 11:20:19] 1.2-request Api_url $api_url
[2023-07-03 11:20:19] 1.3-store events of the jop periodically during process 
[2023-07-03 11:20:19] 1.4- fetch data from Api
[2023-07-03 11:20:19] 1.5- View data that returned from API
[2023-07-03 11:20:19] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:20:19] 1.7- get data of each project to select 
[2023-07-03 11:20:19] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:20:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:20:19] 1.10- check project update number [PUN]if not found
[2023-07-03 11:20:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:20:19] 3.9- Finish cron_job Function
[2023-07-03 11:22:20] 1.1- Start cron_job Function
[2023-07-03 11:22:20] 1.2-request Api_url $api_url
[2023-07-03 11:22:21] 1.3-store events of the jop periodically during process 
[2023-07-03 11:22:21] 1.4- fetch data from Api
[2023-07-03 11:22:21] 1.5- View data that returned from API
[2023-07-03 11:22:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:22:21] 1.7- get data of each project to select 
[2023-07-03 11:22:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:22:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:22:21] 1.10- check project update number [PUN]if not found
[2023-07-03 11:22:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:22:21] 3.9- Finish cron_job Function
[2023-07-03 11:24:20] 1.1- Start cron_job Function
[2023-07-03 11:24:20] 1.2-request Api_url $api_url
[2023-07-03 11:24:20] 1.3-store events of the jop periodically during process 
[2023-07-03 11:24:20] 1.4- fetch data from Api
[2023-07-03 11:24:20] 1.5- View data that returned from API
[2023-07-03 11:24:20] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:24:20] 1.7- get data of each project to select 
[2023-07-03 11:24:20] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:24:20] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:24:20] 1.10- check project update number [PUN]if not found
[2023-07-03 11:24:20] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:24:20] 3.9- Finish cron_job Function
[2023-07-03 11:32:46] 1.1- Start cron_job Function
[2023-07-03 11:32:46] 1.2-request Api_url $api_url
[2023-07-03 11:32:46] 1.3-store events of the jop periodically during process 
[2023-07-03 11:32:46] 1.4- fetch data from Api
[2023-07-03 11:32:46] 1.5- View data that returned from API
[2023-07-03 11:32:46] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:32:46] 1.7- get data of each project to select 
[2023-07-03 11:32:46] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:32:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:32:46] 1.10- check project update number [PUN]if not found
[2023-07-03 11:32:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:32:46] 3.9- Finish cron_job Function
[2023-07-03 11:33:32] 1.1- Start cron_job Function
[2023-07-03 11:33:32] 1.2-request Api_url $api_url
[2023-07-03 11:33:33] 1.3-store events of the jop periodically during process 
[2023-07-03 11:33:33] 1.4- fetch data from Api
[2023-07-03 11:33:33] 1.5- View data that returned from API
[2023-07-03 11:33:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:33:33] 1.7- get data of each project to select 
[2023-07-03 11:33:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:33:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:33:33] 1.10- check project update number [PUN]if not found
[2023-07-03 11:33:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:33:33] 3.9- Finish cron_job Function
[2023-07-03 11:34:37] 1.1- Start cron_job Function
[2023-07-03 11:34:37] 1.2-request Api_url $api_url
[2023-07-03 11:34:38] 1.3-store events of the jop periodically during process 
[2023-07-03 11:34:38] 1.4- fetch data from Api
[2023-07-03 11:34:38] 1.5- View data that returned from API
[2023-07-03 11:34:38] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:34:38] 1.7- get data of each project to select 
[2023-07-03 11:34:38] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:34:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:34:38] 1.10- check project update number [PUN]if not found
[2023-07-03 11:34:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:34:38] 3.9- Finish cron_job Function
[2023-07-03 11:35:44] 1.1- Start cron_job Function
[2023-07-03 11:35:44] 1.2-request Api_url $api_url
[2023-07-03 11:35:44] 1.3-store events of the jop periodically during process 
[2023-07-03 11:35:44] 1.4- fetch data from Api
[2023-07-03 11:35:44] 1.5- View data that returned from API
[2023-07-03 11:35:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:35:44] 1.7- get data of each project to select 
[2023-07-03 11:35:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:35:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:35:44] 1.10- check project update number [PUN]if not found
[2023-07-03 11:35:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:35:44] 3.9- Finish cron_job Function
[2023-07-03 11:36:39] 1.1- Start cron_job Function
[2023-07-03 11:36:39] 1.2-request Api_url $api_url
[2023-07-03 11:36:40] 1.3-store events of the jop periodically during process 
[2023-07-03 11:36:40] 1.4- fetch data from Api
[2023-07-03 11:36:40] 1.5- View data that returned from API
[2023-07-03 11:36:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:36:40] 1.7- get data of each project to select 
[2023-07-03 11:36:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:36:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:36:40] 1.10- check project update number [PUN]if not found
[2023-07-03 11:36:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:36:40] 3.9- Finish cron_job Function
[2023-07-03 11:37:46] 1.1- Start cron_job Function
[2023-07-03 11:37:46] 1.2-request Api_url $api_url
[2023-07-03 11:37:47] 1.3-store events of the jop periodically during process 
[2023-07-03 11:37:47] 1.4- fetch data from Api
[2023-07-03 11:37:47] 1.5- View data that returned from API
[2023-07-03 11:37:47] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:37:47] 1.7- get data of each project to select 
[2023-07-03 11:37:47] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:37:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:37:47] 1.10- check project update number [PUN]if not found
[2023-07-03 11:37:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:37:47] 3.9- Finish cron_job Function
[2023-07-03 11:38:38] 1.1- Start cron_job Function
[2023-07-03 11:38:38] 1.2-request Api_url $api_url
[2023-07-03 11:38:39] 1.3-store events of the jop periodically during process 
[2023-07-03 11:38:39] 1.4- fetch data from Api
[2023-07-03 11:38:39] 1.5- View data that returned from API
[2023-07-03 11:38:39] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:38:39] 1.7- get data of each project to select 
[2023-07-03 11:38:39] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:38:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:38:39] 1.10- check project update number [PUN]if not found
[2023-07-03 11:38:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:38:39] 3.9- Finish cron_job Function
[2023-07-03 11:39:45] 1.1- Start cron_job Function
[2023-07-03 11:39:45] 1.2-request Api_url $api_url
[2023-07-03 11:39:46] 1.3-store events of the jop periodically during process 
[2023-07-03 11:39:46] 1.4- fetch data from Api
[2023-07-03 11:39:46] 1.5- View data that returned from API
[2023-07-03 11:39:46] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:39:46] 1.7- get data of each project to select 
[2023-07-03 11:39:46] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:39:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:39:46] 1.10- check project update number [PUN]if not found
[2023-07-03 11:39:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:39:46] 3.9- Finish cron_job Function
[2023-07-03 11:40:38] 1.1- Start cron_job Function
[2023-07-03 11:40:38] 1.2-request Api_url $api_url
[2023-07-03 11:40:39] 1.3-store events of the jop periodically during process 
[2023-07-03 11:40:39] 1.4- fetch data from Api
[2023-07-03 11:40:39] 1.5- View data that returned from API
[2023-07-03 11:40:39] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:40:39] 1.7- get data of each project to select 
[2023-07-03 11:40:39] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:40:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:40:39] 1.10- check project update number [PUN]if not found
[2023-07-03 11:40:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:40:39] 3.9- Finish cron_job Function
[2023-07-03 11:41:47] 1.1- Start cron_job Function
[2023-07-03 11:41:47] 1.2-request Api_url $api_url
[2023-07-03 11:41:48] 1.3-store events of the jop periodically during process 
[2023-07-03 11:41:48] 1.4- fetch data from Api
[2023-07-03 11:41:48] 1.5- View data that returned from API
[2023-07-03 11:41:48] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:41:48] 1.7- get data of each project to select 
[2023-07-03 11:41:48] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:41:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:41:48] 1.10- check project update number [PUN]if not found
[2023-07-03 11:41:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:41:48] 3.9- Finish cron_job Function
[2023-07-03 11:42:39] 1.1- Start cron_job Function
[2023-07-03 11:42:39] 1.2-request Api_url $api_url
[2023-07-03 11:42:40] 1.3-store events of the jop periodically during process 
[2023-07-03 11:42:40] 1.4- fetch data from Api
[2023-07-03 11:42:40] 1.5- View data that returned from API
[2023-07-03 11:42:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:42:40] 1.7- get data of each project to select 
[2023-07-03 11:42:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:42:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:42:40] 1.10- check project update number [PUN]if not found
[2023-07-03 11:42:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:42:40] 3.9- Finish cron_job Function
[2023-07-03 11:44:40] 1.1- Start cron_job Function
[2023-07-03 11:44:40] 1.2-request Api_url $api_url
[2023-07-03 11:44:41] 1.3-store events of the jop periodically during process 
[2023-07-03 11:44:41] 1.4- fetch data from Api
[2023-07-03 11:44:41] 1.5- View data that returned from API
[2023-07-03 11:44:41] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:44:41] 1.7- get data of each project to select 
[2023-07-03 11:44:41] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:44:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:44:41] 1.10- check project update number [PUN]if not found
[2023-07-03 11:44:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:44:41] 3.9- Finish cron_job Function
[2023-07-03 11:46:42] 1.1- Start cron_job Function
[2023-07-03 11:46:42] 1.2-request Api_url $api_url
[2023-07-03 11:46:43] 1.3-store events of the jop periodically during process 
[2023-07-03 11:46:43] 1.4- fetch data from Api
[2023-07-03 11:46:43] 1.5- View data that returned from API
[2023-07-03 11:46:43] 1.6- get and View projects & tags that returned from  API
[2023-07-03 11:46:43] 1.7- get data of each project to select 
[2023-07-03 11:46:43] 1.8- The selected project Name:my android. id: 7
[2023-07-03 11:46:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 11:46:43] 1.10- check project update number [PUN]if not found
[2023-07-03 11:46:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 11:46:43] 3.9- Finish cron_job Function
[2023-07-03 12:06:05] 1.1- Start cron_job Function
[2023-07-03 12:06:05] 1.2-request Api_url $api_url
[2023-07-03 12:06:05] 1.3-store events of the jop periodically during process 
[2023-07-03 12:06:05] 1.4- fetch data from Api
[2023-07-03 12:06:05] 1.5- View data that returned from API
[2023-07-03 12:06:05] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:06:05] 1.7- get data of each project to select 
[2023-07-03 12:06:05] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:06:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:06:05] 1.10- check project update number [PUN]if not found
[2023-07-03 12:06:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:06:05] 3.9- Finish cron_job Function
[2023-07-03 12:06:31] 1.1- Start cron_job Function
[2023-07-03 12:06:31] 1.2-request Api_url $api_url
[2023-07-03 12:06:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:06:31] 1.4- fetch data from Api
[2023-07-03 12:06:31] 1.5- View data that returned from API
[2023-07-03 12:06:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:06:31] 1.7- get data of each project to select 
[2023-07-03 12:06:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:06:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:06:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:06:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:06:31] 3.9- Finish cron_job Function
[2023-07-03 12:07:32] 1.1- Start cron_job Function
[2023-07-03 12:07:32] 1.2-request Api_url $api_url
[2023-07-03 12:07:33] 1.3-store events of the jop periodically during process 
[2023-07-03 12:07:33] 1.4- fetch data from Api
[2023-07-03 12:07:33] 1.5- View data that returned from API
[2023-07-03 12:07:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:07:33] 1.7- get data of each project to select 
[2023-07-03 12:07:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:07:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:07:33] 1.10- check project update number [PUN]if not found
[2023-07-03 12:07:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:07:33] 3.9- Finish cron_job Function
[2023-07-03 12:08:45] 1.1- Start cron_job Function
[2023-07-03 12:08:45] 1.2-request Api_url $api_url
[2023-07-03 12:08:46] 1.3-store events of the jop periodically during process 
[2023-07-03 12:08:46] 1.4- fetch data from Api
[2023-07-03 12:08:46] 1.5- View data that returned from API
[2023-07-03 12:08:46] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:08:46] 1.7- get data of each project to select 
[2023-07-03 12:08:46] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:08:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:08:46] 1.10- check project update number [PUN]if not found
[2023-07-03 12:08:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:08:46] 3.9- Finish cron_job Function
[2023-07-03 12:09:44] 1.1- Start cron_job Function
[2023-07-03 12:09:44] 1.2-request Api_url $api_url
[2023-07-03 12:09:45] 1.3-store events of the jop periodically during process 
[2023-07-03 12:09:45] 1.4- fetch data from Api
[2023-07-03 12:09:45] 1.5- View data that returned from API
[2023-07-03 12:09:45] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:09:45] 1.7- get data of each project to select 
[2023-07-03 12:09:45] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:09:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:09:45] 1.10- check project update number [PUN]if not found
[2023-07-03 12:09:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:09:45] 3.9- Finish cron_job Function
[2023-07-03 12:10:31] 1.1- Start cron_job Function
[2023-07-03 12:10:31] 1.2-request Api_url $api_url
[2023-07-03 12:10:32] 1.3-store events of the jop periodically during process 
[2023-07-03 12:10:32] 1.4- fetch data from Api
[2023-07-03 12:10:32] 1.5- View data that returned from API
[2023-07-03 12:10:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:10:32] 1.7- get data of each project to select 
[2023-07-03 12:10:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:10:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:10:32] 1.10- check project update number [PUN]if not found
[2023-07-03 12:10:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:10:32] 3.9- Finish cron_job Function
[2023-07-03 12:10:40] 1.1- Start cron_job Function
[2023-07-03 12:10:40] 1.2-request Api_url $api_url
[2023-07-03 12:10:40] 1.3-store events of the jop periodically during process 
[2023-07-03 12:10:40] 1.4- fetch data from Api
[2023-07-03 12:10:40] 1.5- View data that returned from API
[2023-07-03 12:10:40] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:10:40] 1.7- get data of each project to select 
[2023-07-03 12:10:40] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:10:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:10:40] 1.10- check project update number [PUN]if not found
[2023-07-03 12:10:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:10:40] 3.9- Finish cron_job Function
[2023-07-03 12:11:46] 1.1- Start cron_job Function
[2023-07-03 12:11:46] 1.2-request Api_url $api_url
[2023-07-03 12:11:47] 1.3-store events of the jop periodically during process 
[2023-07-03 12:11:47] 1.4- fetch data from Api
[2023-07-03 12:11:47] 1.5- View data that returned from API
[2023-07-03 12:11:47] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:11:47] 1.7- get data of each project to select 
[2023-07-03 12:11:47] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:11:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:11:47] 1.10- check project update number [PUN]if not found
[2023-07-03 12:11:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:11:47] 3.9- Finish cron_job Function
[2023-07-03 12:12:30] 1.1- Start cron_job Function
[2023-07-03 12:12:30] 1.2-request Api_url $api_url
[2023-07-03 12:12:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:12:31] 1.4- fetch data from Api
[2023-07-03 12:12:31] 1.5- View data that returned from API
[2023-07-03 12:12:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:12:31] 1.7- get data of each project to select 
[2023-07-03 12:12:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:12:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:12:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:12:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:12:31] 3.9- Finish cron_job Function
[2023-07-03 12:13:44] 1.1- Start cron_job Function
[2023-07-03 12:13:44] 1.2-request Api_url $api_url
[2023-07-03 12:13:44] 1.3-store events of the jop periodically during process 
[2023-07-03 12:13:44] 1.4- fetch data from Api
[2023-07-03 12:13:44] 1.5- View data that returned from API
[2023-07-03 12:13:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:13:44] 1.7- get data of each project to select 
[2023-07-03 12:13:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:13:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:13:44] 1.10- check project update number [PUN]if not found
[2023-07-03 12:13:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:13:44] 3.9- Finish cron_job Function
[2023-07-03 12:14:29] 1.1- Start cron_job Function
[2023-07-03 12:14:29] 1.2-request Api_url $api_url
[2023-07-03 12:14:30] 1.3-store events of the jop periodically during process 
[2023-07-03 12:14:30] 1.4- fetch data from Api
[2023-07-03 12:14:30] 1.5- View data that returned from API
[2023-07-03 12:14:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:14:30] 1.7- get data of each project to select 
[2023-07-03 12:14:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:14:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:14:30] 1.10- check project update number [PUN]if not found
[2023-07-03 12:14:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:14:30] 3.9- Finish cron_job Function
[2023-07-03 12:15:29] 1.1- Start cron_job Function
[2023-07-03 12:15:29] 1.2-request Api_url $api_url
[2023-07-03 12:15:29] 1.3-store events of the jop periodically during process 
[2023-07-03 12:15:29] 1.4- fetch data from Api
[2023-07-03 12:15:29] 1.5- View data that returned from API
[2023-07-03 12:15:29] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:15:29] 1.7- get data of each project to select 
[2023-07-03 12:15:29] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:15:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:15:29] 1.10- check project update number [PUN]if not found
[2023-07-03 12:15:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:15:29] 3.9- Finish cron_job Function
[2023-07-03 12:17:17] 1.1- Start cron_job Function
[2023-07-03 12:17:17] 1.2-request Api_url $api_url
[2023-07-03 12:17:18] 1.3-store events of the jop periodically during process 
[2023-07-03 12:17:18] 1.4- fetch data from Api
[2023-07-03 12:17:18] 1.5- View data that returned from API
[2023-07-03 12:17:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:17:18] 1.7- get data of each project to select 
[2023-07-03 12:17:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:17:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:17:18] 1.10- check project update number [PUN]if not found
[2023-07-03 12:17:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:17:18] 3.9- Finish cron_job Function
[2023-07-03 12:18:01] 1.1- Start cron_job Function
[2023-07-03 12:18:01] 1.2-request Api_url $api_url
[2023-07-03 12:18:02] 1.3-store events of the jop periodically during process 
[2023-07-03 12:18:02] 1.4- fetch data from Api
[2023-07-03 12:18:02] 1.5- View data that returned from API
[2023-07-03 12:18:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:18:02] 1.7- get data of each project to select 
[2023-07-03 12:18:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:18:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:18:02] 1.10- check project update number [PUN]if not found
[2023-07-03 12:18:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:18:02] 3.9- Finish cron_job Function
[2023-07-03 12:18:46] 1.1- Start cron_job Function
[2023-07-03 12:18:46] 1.2-request Api_url $api_url
[2023-07-03 12:18:47] 1.3-store events of the jop periodically during process 
[2023-07-03 12:18:47] 1.4- fetch data from Api
[2023-07-03 12:18:47] 1.5- View data that returned from API
[2023-07-03 12:18:47] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:18:47] 1.7- get data of each project to select 
[2023-07-03 12:18:47] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:18:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:18:47] 1.10- check project update number [PUN]if not found
[2023-07-03 12:18:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:18:47] 3.9- Finish cron_job Function
[2023-07-03 12:19:48] 1.1- Start cron_job Function
[2023-07-03 12:19:48] 1.2-request Api_url $api_url
[2023-07-03 12:19:48] 1.3-store events of the jop periodically during process 
[2023-07-03 12:19:48] 1.4- fetch data from Api
[2023-07-03 12:19:48] 1.5- View data that returned from API
[2023-07-03 12:19:48] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:19:48] 1.7- get data of each project to select 
[2023-07-03 12:19:48] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:19:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:19:48] 1.10- check project update number [PUN]if not found
[2023-07-03 12:19:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:19:48] 3.9- Finish cron_job Function
[2023-07-03 12:20:40] 1.1- Start cron_job Function
[2023-07-03 12:20:41] 1.2-request Api_url $api_url
[2023-07-03 12:20:41] 1.3-store events of the jop periodically during process 
[2023-07-03 12:20:41] 1.4- fetch data from Api
[2023-07-03 12:20:41] 1.5- View data that returned from API
[2023-07-03 12:20:41] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:20:41] 1.7- get data of each project to select 
[2023-07-03 12:20:41] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:20:41] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:20:41] 1.10- check project update number [PUN]if not found
[2023-07-03 12:20:41] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:20:41] 3.9- Finish cron_job Function
[2023-07-03 12:21:45] 1.1- Start cron_job Function
[2023-07-03 12:21:45] 1.2-request Api_url $api_url
[2023-07-03 12:21:46] 1.3-store events of the jop periodically during process 
[2023-07-03 12:21:46] 1.4- fetch data from Api
[2023-07-03 12:21:46] 1.5- View data that returned from API
[2023-07-03 12:21:46] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:21:46] 1.7- get data of each project to select 
[2023-07-03 12:21:46] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:21:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:21:46] 1.10- check project update number [PUN]if not found
[2023-07-03 12:21:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:21:46] 3.9- Finish cron_job Function
[2023-07-03 12:22:49] 1.1- Start cron_job Function
[2023-07-03 12:22:49] 1.2-request Api_url $api_url
[2023-07-03 12:22:50] 1.3-store events of the jop periodically during process 
[2023-07-03 12:22:50] 1.4- fetch data from Api
[2023-07-03 12:22:50] 1.5- View data that returned from API
[2023-07-03 12:22:50] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:22:50] 1.7- get data of each project to select 
[2023-07-03 12:22:50] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:22:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:22:50] 1.10- check project update number [PUN]if not found
[2023-07-03 12:22:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:22:50] 3.9- Finish cron_job Function
[2023-07-03 12:24:31] 1.1- Start cron_job Function
[2023-07-03 12:24:31] 1.2-request Api_url $api_url
[2023-07-03 12:24:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:24:31] 1.4- fetch data from Api
[2023-07-03 12:24:31] 1.5- View data that returned from API
[2023-07-03 12:24:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:24:31] 1.7- get data of each project to select 
[2023-07-03 12:24:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:24:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:24:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:24:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:24:31] 3.9- Finish cron_job Function
[2023-07-03 12:26:31] 1.1- Start cron_job Function
[2023-07-03 12:26:31] 1.2-request Api_url $api_url
[2023-07-03 12:26:32] 1.3-store events of the jop periodically during process 
[2023-07-03 12:26:32] 1.4- fetch data from Api
[2023-07-03 12:26:32] 1.5- View data that returned from API
[2023-07-03 12:26:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:26:32] 1.7- get data of each project to select 
[2023-07-03 12:26:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:26:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:26:32] 1.10- check project update number [PUN]if not found
[2023-07-03 12:26:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:26:32] 3.9- Finish cron_job Function
[2023-07-03 12:28:32] 1.1- Start cron_job Function
[2023-07-03 12:28:32] 1.2-request Api_url $api_url
[2023-07-03 12:28:33] 1.3-store events of the jop periodically during process 
[2023-07-03 12:28:33] 1.4- fetch data from Api
[2023-07-03 12:28:33] 1.5- View data that returned from API
[2023-07-03 12:28:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:28:33] 1.7- get data of each project to select 
[2023-07-03 12:28:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:28:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:28:33] 1.10- check project update number [PUN]if not found
[2023-07-03 12:28:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:28:33] 3.9- Finish cron_job Function
[2023-07-03 12:30:33] 1.1- Start cron_job Function
[2023-07-03 12:30:33] 1.2-request Api_url $api_url
[2023-07-03 12:30:34] 1.3-store events of the jop periodically during process 
[2023-07-03 12:30:34] 1.4- fetch data from Api
[2023-07-03 12:30:34] 1.5- View data that returned from API
[2023-07-03 12:30:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:30:34] 1.7- get data of each project to select 
[2023-07-03 12:30:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:30:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:30:34] 1.10- check project update number [PUN]if not found
[2023-07-03 12:30:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:30:34] 3.9- Finish cron_job Function
[2023-07-03 12:31:43] 1.1- Start cron_job Function
[2023-07-03 12:31:43] 1.2-request Api_url $api_url
[2023-07-03 12:31:44] 1.3-store events of the jop periodically during process 
[2023-07-03 12:31:44] 1.4- fetch data from Api
[2023-07-03 12:31:44] 1.5- View data that returned from API
[2023-07-03 12:31:44] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:31:44] 1.7- get data of each project to select 
[2023-07-03 12:31:44] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:31:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:31:44] 1.10- check project update number [PUN]if not found
[2023-07-03 12:31:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:31:44] 3.9- Finish cron_job Function
[2023-07-03 12:32:32] 1.1- Start cron_job Function
[2023-07-03 12:32:32] 1.2-request Api_url $api_url
[2023-07-03 12:32:32] 1.3-store events of the jop periodically during process 
[2023-07-03 12:32:32] 1.4- fetch data from Api
[2023-07-03 12:32:32] 1.5- View data that returned from API
[2023-07-03 12:32:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:32:32] 1.7- get data of each project to select 
[2023-07-03 12:32:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:32:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:32:32] 1.10- check project update number [PUN]if not found
[2023-07-03 12:32:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:32:32] 3.9- Finish cron_job Function
[2023-07-03 12:34:01] 1.1- Start cron_job Function
[2023-07-03 12:34:01] 1.2-request Api_url $api_url
[2023-07-03 12:34:02] 1.3-store events of the jop periodically during process 
[2023-07-03 12:34:02] 1.4- fetch data from Api
[2023-07-03 12:34:02] 1.5- View data that returned from API
[2023-07-03 12:34:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:34:02] 1.7- get data of each project to select 
[2023-07-03 12:34:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:34:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:34:02] 1.10- check project update number [PUN]if not found
[2023-07-03 12:34:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:34:02] 3.9- Finish cron_job Function
[2023-07-03 12:34:33] 1.1- Start cron_job Function
[2023-07-03 12:34:33] 1.2-request Api_url $api_url
[2023-07-03 12:34:34] 1.3-store events of the jop periodically during process 
[2023-07-03 12:34:34] 1.4- fetch data from Api
[2023-07-03 12:34:34] 1.5- View data that returned from API
[2023-07-03 12:34:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:34:34] 1.7- get data of each project to select 
[2023-07-03 12:34:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:34:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:34:34] 1.10- check project update number [PUN]if not found
[2023-07-03 12:34:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:34:34] 3.9- Finish cron_job Function
[2023-07-03 12:36:02] 1.1- Start cron_job Function
[2023-07-03 12:36:02] 1.2-request Api_url $api_url
[2023-07-03 12:36:02] 1.3-store events of the jop periodically during process 
[2023-07-03 12:36:02] 1.4- fetch data from Api
[2023-07-03 12:36:02] 1.5- View data that returned from API
[2023-07-03 12:36:02] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:36:02] 1.7- get data of each project to select 
[2023-07-03 12:36:02] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:36:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:36:02] 1.10- check project update number [PUN]if not found
[2023-07-03 12:36:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:36:02] 3.9- Finish cron_job Function
[2023-07-03 12:36:48] 1.1- Start cron_job Function
[2023-07-03 12:36:48] 1.2-request Api_url $api_url
[2023-07-03 12:36:49] 1.3-store events of the jop periodically during process 
[2023-07-03 12:36:49] 1.4- fetch data from Api
[2023-07-03 12:36:49] 1.5- View data that returned from API
[2023-07-03 12:36:49] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:36:49] 1.7- get data of each project to select 
[2023-07-03 12:36:49] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:36:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:36:49] 1.10- check project update number [PUN]if not found
[2023-07-03 12:36:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:36:49] 3.9- Finish cron_job Function
[2023-07-03 12:38:02] 1.1- Start cron_job Function
[2023-07-03 12:38:02] 1.2-request Api_url $api_url
[2023-07-03 12:38:03] 1.3-store events of the jop periodically during process 
[2023-07-03 12:38:03] 1.4- fetch data from Api
[2023-07-03 12:38:03] 1.5- View data that returned from API
[2023-07-03 12:38:03] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:38:03] 1.7- get data of each project to select 
[2023-07-03 12:38:03] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:38:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:38:03] 1.10- check project update number [PUN]if not found
[2023-07-03 12:38:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:38:03] 3.9- Finish cron_job Function
[2023-07-03 12:38:31] 1.1- Start cron_job Function
[2023-07-03 12:38:31] 1.2-request Api_url $api_url
[2023-07-03 12:38:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:38:31] 1.4- fetch data from Api
[2023-07-03 12:38:31] 1.5- View data that returned from API
[2023-07-03 12:38:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:38:31] 1.7- get data of each project to select 
[2023-07-03 12:38:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:38:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:38:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:38:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:38:31] 3.9- Finish cron_job Function
[2023-07-03 12:38:49] 1.1- Start cron_job Function
[2023-07-03 12:38:49] 1.2-request Api_url $api_url
[2023-07-03 12:38:49] 1.3-store events of the jop periodically during process 
[2023-07-03 12:38:49] 1.4- fetch data from Api
[2023-07-03 12:38:49] 1.5- View data that returned from API
[2023-07-03 12:38:49] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:38:49] 1.7- get data of each project to select 
[2023-07-03 12:38:49] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:38:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:38:49] 1.10- check project update number [PUN]if not found
[2023-07-03 12:38:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:38:49] 3.9- Finish cron_job Function
[2023-07-03 12:39:49] 1.1- Start cron_job Function
[2023-07-03 12:39:49] 1.2-request Api_url $api_url
[2023-07-03 12:39:49] 1.3-store events of the jop periodically during process 
[2023-07-03 12:39:49] 1.4- fetch data from Api
[2023-07-03 12:39:49] 1.5- View data that returned from API
[2023-07-03 12:39:49] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:39:49] 1.7- get data of each project to select 
[2023-07-03 12:39:49] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:39:49] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:39:49] 1.10- check project update number [PUN]if not found
[2023-07-03 12:39:49] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:39:49] 3.9- Finish cron_job Function
[2023-07-03 12:40:54] 1.1- Start cron_job Function
[2023-07-03 12:40:54] 1.2-request Api_url $api_url
[2023-07-03 12:40:55] 1.3-store events of the jop periodically during process 
[2023-07-03 12:40:55] 1.4- fetch data from Api
[2023-07-03 12:40:55] 1.5- View data that returned from API
[2023-07-03 12:40:55] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:40:55] 1.7- get data of each project to select 
[2023-07-03 12:40:55] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:40:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:40:55] 1.10- check project update number [PUN]if not found
[2023-07-03 12:40:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:40:55] 3.9- Finish cron_job Function
[2023-07-03 12:42:17] 1.1- Start cron_job Function
[2023-07-03 12:42:17] 1.2-request Api_url $api_url
[2023-07-03 12:42:18] 1.3-store events of the jop periodically during process 
[2023-07-03 12:42:18] 1.4- fetch data from Api
[2023-07-03 12:42:18] 1.5- View data that returned from API
[2023-07-03 12:42:18] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:42:18] 1.7- get data of each project to select 
[2023-07-03 12:42:18] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:42:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:42:18] 1.10- check project update number [PUN]if not found
[2023-07-03 12:42:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:42:18] 3.9- Finish cron_job Function
[2023-07-03 12:42:55] 1.1- Start cron_job Function
[2023-07-03 12:42:55] 1.2-request Api_url $api_url
[2023-07-03 12:42:56] 1.3-store events of the jop periodically during process 
[2023-07-03 12:42:56] 1.4- fetch data from Api
[2023-07-03 12:42:56] 1.5- View data that returned from API
[2023-07-03 12:42:56] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:42:56] 1.7- get data of each project to select 
[2023-07-03 12:42:56] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:42:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:42:56] 1.10- check project update number [PUN]if not found
[2023-07-03 12:42:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:42:56] 3.9- Finish cron_job Function
[2023-07-03 12:44:16] 1.1- Start cron_job Function
[2023-07-03 12:44:16] 1.2-request Api_url $api_url
[2023-07-03 12:44:16] 1.3-store events of the jop periodically during process 
[2023-07-03 12:44:16] 1.4- fetch data from Api
[2023-07-03 12:44:16] 1.5- View data that returned from API
[2023-07-03 12:44:16] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:44:16] 1.7- get data of each project to select 
[2023-07-03 12:44:16] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:44:16] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:44:16] 1.10- check project update number [PUN]if not found
[2023-07-03 12:44:16] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:44:16] 3.9- Finish cron_job Function
[2023-07-03 12:44:56] 1.1- Start cron_job Function
[2023-07-03 12:44:56] 1.2-request Api_url $api_url
[2023-07-03 12:44:57] 1.3-store events of the jop periodically during process 
[2023-07-03 12:44:57] 1.4- fetch data from Api
[2023-07-03 12:44:57] 1.5- View data that returned from API
[2023-07-03 12:44:57] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:44:57] 1.7- get data of each project to select 
[2023-07-03 12:44:57] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:44:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:44:57] 1.10- check project update number [PUN]if not found
[2023-07-03 12:44:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:44:57] 3.9- Finish cron_job Function
[2023-07-03 12:46:16] 1.1- Start cron_job Function
[2023-07-03 12:46:16] 1.2-request Api_url $api_url
[2023-07-03 12:46:17] 1.3-store events of the jop periodically during process 
[2023-07-03 12:46:17] 1.4- fetch data from Api
[2023-07-03 12:46:17] 1.5- View data that returned from API
[2023-07-03 12:46:17] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:46:17] 1.7- get data of each project to select 
[2023-07-03 12:46:17] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:46:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:46:17] 1.10- check project update number [PUN]if not found
[2023-07-03 12:46:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:46:17] 3.9- Finish cron_job Function
[2023-07-03 12:46:55] 1.1- Start cron_job Function
[2023-07-03 12:46:55] 1.2-request Api_url $api_url
[2023-07-03 12:46:56] 1.3-store events of the jop periodically during process 
[2023-07-03 12:46:56] 1.4- fetch data from Api
[2023-07-03 12:46:56] 1.5- View data that returned from API
[2023-07-03 12:46:56] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:46:56] 1.7- get data of each project to select 
[2023-07-03 12:46:56] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:46:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:46:56] 1.10- check project update number [PUN]if not found
[2023-07-03 12:46:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:46:56] 3.9- Finish cron_job Function
[2023-07-03 12:48:17] 1.1- Start cron_job Function
[2023-07-03 12:48:17] 1.2-request Api_url $api_url
[2023-07-03 12:48:17] 1.3-store events of the jop periodically during process 
[2023-07-03 12:48:17] 1.4- fetch data from Api
[2023-07-03 12:48:17] 1.5- View data that returned from API
[2023-07-03 12:48:17] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:48:17] 1.7- get data of each project to select 
[2023-07-03 12:48:17] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:48:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:48:17] 1.10- check project update number [PUN]if not found
[2023-07-03 12:48:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:48:17] 3.9- Finish cron_job Function
[2023-07-03 12:48:55] 1.1- Start cron_job Function
[2023-07-03 12:48:55] 1.2-request Api_url $api_url
[2023-07-03 12:48:56] 1.3-store events of the jop periodically during process 
[2023-07-03 12:48:56] 1.4- fetch data from Api
[2023-07-03 12:48:56] 1.5- View data that returned from API
[2023-07-03 12:48:56] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:48:56] 1.7- get data of each project to select 
[2023-07-03 12:48:56] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:48:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:48:56] 1.10- check project update number [PUN]if not found
[2023-07-03 12:48:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:48:56] 3.9- Finish cron_job Function
[2023-07-03 12:49:37] 1.1- Start cron_job Function
[2023-07-03 12:49:37] 1.2-request Api_url $api_url
[2023-07-03 12:49:37] 1.3-store events of the jop periodically during process 
[2023-07-03 12:49:37] 1.4- fetch data from Api
[2023-07-03 12:49:37] 1.5- View data that returned from API
[2023-07-03 12:49:37] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:49:37] 1.7- get data of each project to select 
[2023-07-03 12:49:37] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:49:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:49:37] 1.10- check project update number [PUN]if not found
[2023-07-03 12:49:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:49:37] 3.9- Finish cron_job Function
[2023-07-03 12:51:00] 1.1- Start cron_job Function
[2023-07-03 12:51:00] 1.2-request Api_url $api_url
[2023-07-03 12:51:00] 1.3-store events of the jop periodically during process 
[2023-07-03 12:51:00] 1.4- fetch data from Api
[2023-07-03 12:51:00] 1.5- View data that returned from API
[2023-07-03 12:51:00] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:51:00] 1.7- get data of each project to select 
[2023-07-03 12:51:00] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:51:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:51:00] 1.10- check project update number [PUN]if not found
[2023-07-03 12:51:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:51:00] 3.9- Finish cron_job Function
[2023-07-03 12:51:30] 1.1- Start cron_job Function
[2023-07-03 12:51:30] 1.2-request Api_url $api_url
[2023-07-03 12:51:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:51:31] 1.4- fetch data from Api
[2023-07-03 12:51:31] 1.5- View data that returned from API
[2023-07-03 12:51:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:51:31] 1.7- get data of each project to select 
[2023-07-03 12:51:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:51:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:51:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:51:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:51:31] 3.9- Finish cron_job Function
[2023-07-03 12:52:29] 1.1- Start cron_job Function
[2023-07-03 12:52:29] 1.2-request Api_url $api_url
[2023-07-03 12:52:30] 1.3-store events of the jop periodically during process 
[2023-07-03 12:52:30] 1.4- fetch data from Api
[2023-07-03 12:52:30] 1.5- View data that returned from API
[2023-07-03 12:52:30] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:52:30] 1.7- get data of each project to select 
[2023-07-03 12:52:30] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:52:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:52:30] 1.10- check project update number [PUN]if not found
[2023-07-03 12:52:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:52:30] 3.9- Finish cron_job Function
[2023-07-03 12:53:28] 1.1- Start cron_job Function
[2023-07-03 12:53:28] 1.2-request Api_url $api_url
[2023-07-03 12:53:29] 1.3-store events of the jop periodically during process 
[2023-07-03 12:53:29] 1.4- fetch data from Api
[2023-07-03 12:53:29] 1.5- View data that returned from API
[2023-07-03 12:53:29] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:53:29] 1.7- get data of each project to select 
[2023-07-03 12:53:29] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:53:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:53:29] 1.10- check project update number [PUN]if not found
[2023-07-03 12:53:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:53:29] 3.9- Finish cron_job Function
[2023-07-03 12:54:31] 1.1- Start cron_job Function
[2023-07-03 12:54:31] 1.2-request Api_url $api_url
[2023-07-03 12:54:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:54:31] 1.4- fetch data from Api
[2023-07-03 12:54:31] 1.5- View data that returned from API
[2023-07-03 12:54:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:54:31] 1.7- get data of each project to select 
[2023-07-03 12:54:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:54:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:54:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:54:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:54:31] 3.9- Finish cron_job Function
[2023-07-03 12:55:33] 1.1- Start cron_job Function
[2023-07-03 12:55:33] 1.2-request Api_url $api_url
[2023-07-03 12:55:34] 1.3-store events of the jop periodically during process 
[2023-07-03 12:55:34] 1.4- fetch data from Api
[2023-07-03 12:55:34] 1.5- View data that returned from API
[2023-07-03 12:55:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:55:34] 1.7- get data of each project to select 
[2023-07-03 12:55:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:55:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:55:34] 1.10- check project update number [PUN]if not found
[2023-07-03 12:55:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:55:34] 3.9- Finish cron_job Function
[2023-07-03 12:56:30] 1.1- Start cron_job Function
[2023-07-03 12:56:30] 1.2-request Api_url $api_url
[2023-07-03 12:56:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:56:31] 1.4- fetch data from Api
[2023-07-03 12:56:31] 1.5- View data that returned from API
[2023-07-03 12:56:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:56:31] 1.7- get data of each project to select 
[2023-07-03 12:56:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:56:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:56:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:56:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:56:31] 3.9- Finish cron_job Function
[2023-07-03 12:58:20] 1.1- Start cron_job Function
[2023-07-03 12:58:20] 1.2-request Api_url $api_url
[2023-07-03 12:58:21] 1.3-store events of the jop periodically during process 
[2023-07-03 12:58:21] 1.4- fetch data from Api
[2023-07-03 12:58:21] 1.5- View data that returned from API
[2023-07-03 12:58:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:58:21] 1.7- get data of each project to select 
[2023-07-03 12:58:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:58:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:58:21] 1.10- check project update number [PUN]if not found
[2023-07-03 12:58:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:58:21] 3.9- Finish cron_job Function
[2023-07-03 12:58:30] 1.1- Start cron_job Function
[2023-07-03 12:58:30] 1.2-request Api_url $api_url
[2023-07-03 12:58:31] 1.3-store events of the jop periodically during process 
[2023-07-03 12:58:31] 1.4- fetch data from Api
[2023-07-03 12:58:31] 1.5- View data that returned from API
[2023-07-03 12:58:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 12:58:31] 1.7- get data of each project to select 
[2023-07-03 12:58:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 12:58:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 12:58:31] 1.10- check project update number [PUN]if not found
[2023-07-03 12:58:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 12:58:31] 3.9- Finish cron_job Function
[2023-07-03 13:00:21] 1.1- Start cron_job Function
[2023-07-03 13:00:21] 1.2-request Api_url $api_url
[2023-07-03 13:00:21] 1.3-store events of the jop periodically during process 
[2023-07-03 13:00:21] 1.4- fetch data from Api
[2023-07-03 13:00:21] 1.5- View data that returned from API
[2023-07-03 13:00:21] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:00:21] 1.7- get data of each project to select 
[2023-07-03 13:00:21] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:00:21] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:00:21] 1.10- check project update number [PUN]if not found
[2023-07-03 13:00:21] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:00:21] 3.9- Finish cron_job Function
[2023-07-03 13:00:31] 1.1- Start cron_job Function
[2023-07-03 13:00:31] 1.2-request Api_url $api_url
[2023-07-03 13:00:31] 1.3-store events of the jop periodically during process 
[2023-07-03 13:00:31] 1.4- fetch data from Api
[2023-07-03 13:00:31] 1.5- View data that returned from API
[2023-07-03 13:00:31] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:00:31] 1.7- get data of each project to select 
[2023-07-03 13:00:31] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:00:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:00:31] 1.10- check project update number [PUN]if not found
[2023-07-03 13:00:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:00:31] 3.9- Finish cron_job Function
[2023-07-03 13:02:11] 1.1- Start cron_job Function
[2023-07-03 13:02:11] 1.2-request Api_url $api_url
[2023-07-03 13:02:11] 1.3-store events of the jop periodically during process 
[2023-07-03 13:02:11] 1.4- fetch data from Api
[2023-07-03 13:02:11] 1.5- View data that returned from API
[2023-07-03 13:02:11] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:02:11] 1.7- get data of each project to select 
[2023-07-03 13:02:11] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:02:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:02:11] 1.10- check project update number [PUN]if not found
[2023-07-03 13:02:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:02:11] 3.9- Finish cron_job Function
[2023-07-03 13:02:31] 1.1- Start cron_job Function
[2023-07-03 13:02:31] 1.2-request Api_url $api_url
[2023-07-03 13:02:32] 1.3-store events of the jop periodically during process 
[2023-07-03 13:02:32] 1.4- fetch data from Api
[2023-07-03 13:02:32] 1.5- View data that returned from API
[2023-07-03 13:02:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:02:32] 1.7- get data of each project to select 
[2023-07-03 13:02:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:02:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:02:32] 1.10- check project update number [PUN]if not found
[2023-07-03 13:02:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:02:32] 3.9- Finish cron_job Function
[2023-07-03 13:04:21] 1.1- Start cron_job Function
[2023-07-03 13:04:21] 1.2-request Api_url $api_url
[2023-07-03 13:04:22] 1.3-store events of the jop periodically during process 
[2023-07-03 13:04:22] 1.4- fetch data from Api
[2023-07-03 13:04:22] 1.5- View data that returned from API
[2023-07-03 13:04:22] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:04:22] 1.7- get data of each project to select 
[2023-07-03 13:04:22] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:04:22] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:04:22] 1.10- check project update number [PUN]if not found
[2023-07-03 13:04:22] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:04:22] 3.9- Finish cron_job Function
[2023-07-03 13:04:32] 1.1- Start cron_job Function
[2023-07-03 13:04:32] 1.2-request Api_url $api_url
[2023-07-03 13:04:32] 1.3-store events of the jop periodically during process 
[2023-07-03 13:04:32] 1.4- fetch data from Api
[2023-07-03 13:04:32] 1.5- View data that returned from API
[2023-07-03 13:04:32] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:04:32] 1.7- get data of each project to select 
[2023-07-03 13:04:32] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:04:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:04:32] 1.10- check project update number [PUN]if not found
[2023-07-03 13:04:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:04:32] 3.9- Finish cron_job Function
[2023-07-03 13:05:37] 1.1- Start cron_job Function
[2023-07-03 13:05:37] 1.2-request Api_url $api_url
[2023-07-03 13:05:38] 1.3-store events of the jop periodically during process 
[2023-07-03 13:05:38] 1.4- fetch data from Api
[2023-07-03 13:05:38] 1.5- View data that returned from API
[2023-07-03 13:05:38] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:05:38] 1.7- get data of each project to select 
[2023-07-03 13:05:38] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:05:38] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:05:38] 1.10- check project update number [PUN]if not found
[2023-07-03 13:05:38] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:05:38] 3.9- Finish cron_job Function
[2023-07-03 13:06:32] 1.1- Start cron_job Function
[2023-07-03 13:06:32] 1.2-request Api_url $api_url
[2023-07-03 13:06:33] 1.3-store events of the jop periodically during process 
[2023-07-03 13:06:33] 1.4- fetch data from Api
[2023-07-03 13:06:33] 1.5- View data that returned from API
[2023-07-03 13:06:33] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:06:33] 1.7- get data of each project to select 
[2023-07-03 13:06:33] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:06:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:06:33] 1.10- check project update number [PUN]if not found
[2023-07-03 13:06:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:06:33] 3.9- Finish cron_job Function
[2023-07-03 13:08:09] 1.1- Start cron_job Function
[2023-07-03 13:08:09] 1.2-request Api_url $api_url
[2023-07-03 13:08:10] 1.3-store events of the jop periodically during process 
[2023-07-03 13:08:10] 1.4- fetch data from Api
[2023-07-03 13:08:10] 1.5- View data that returned from API
[2023-07-03 13:08:10] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:08:10] 1.7- get data of each project to select 
[2023-07-03 13:08:10] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:08:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:08:10] 1.10- check project update number [PUN]if not found
[2023-07-03 13:08:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:08:10] 3.9- Finish cron_job Function
[2023-07-03 13:08:33] 1.1- Start cron_job Function
[2023-07-03 13:08:33] 1.2-request Api_url $api_url
[2023-07-03 13:08:34] 1.3-store events of the jop periodically during process 
[2023-07-03 13:08:34] 1.4- fetch data from Api
[2023-07-03 13:08:34] 1.5- View data that returned from API
[2023-07-03 13:08:34] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:08:34] 1.7- get data of each project to select 
[2023-07-03 13:08:34] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:08:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:08:34] 1.10- check project update number [PUN]if not found
[2023-07-03 13:08:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:08:34] 3.9- Finish cron_job Function
[2023-07-03 13:10:10] 1.1- Start cron_job Function
[2023-07-03 13:10:10] 1.2-request Api_url $api_url
[2023-07-03 13:10:11] 1.3-store events of the jop periodically during process 
[2023-07-03 13:10:11] 1.4- fetch data from Api
[2023-07-03 13:10:11] 1.5- View data that returned from API
[2023-07-03 13:10:11] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:10:11] 1.7- get data of each project to select 
[2023-07-03 13:10:11] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:10:11] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:10:11] 1.10- check project update number [PUN]if not found
[2023-07-03 13:10:11] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:10:11] 3.9- Finish cron_job Function
[2023-07-03 13:10:34] 1.1- Start cron_job Function
[2023-07-03 13:10:34] 1.2-request Api_url $api_url
[2023-07-03 13:10:35] 1.3-store events of the jop periodically during process 
[2023-07-03 13:10:35] 1.4- fetch data from Api
[2023-07-03 13:10:35] 1.5- View data that returned from API
[2023-07-03 13:10:35] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:10:35] 1.7- get data of each project to select 
[2023-07-03 13:10:35] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:10:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:10:35] 1.10- check project update number [PUN]if not found
[2023-07-03 13:10:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:10:35] 3.9- Finish cron_job Function
[2023-07-03 13:11:36] 1.1- Start cron_job Function
[2023-07-03 13:11:36] 1.2-request Api_url $api_url
[2023-07-03 13:11:37] 1.3-store events of the jop periodically during process 
[2023-07-03 13:11:37] 1.4- fetch data from Api
[2023-07-03 13:11:37] 1.5- View data that returned from API
[2023-07-03 13:11:37] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:11:37] 1.7- get data of each project to select 
[2023-07-03 13:11:37] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:11:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:11:37] 1.10- check project update number [PUN]if not found
[2023-07-03 13:11:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:11:37] 3.9- Finish cron_job Function
[2023-07-03 13:12:47] 1.1- Start cron_job Function
[2023-07-03 13:12:47] 1.2-request Api_url $api_url
[2023-07-03 13:12:47] 1.3-store events of the jop periodically during process 
[2023-07-03 13:12:47] 1.4- fetch data from Api
[2023-07-03 13:12:47] 1.5- View data that returned from API
[2023-07-03 13:12:47] 1.6- get and View projects & tags that returned from  API
[2023-07-03 13:12:47] 1.7- get data of each project to select 
[2023-07-03 13:12:47] 1.8- The selected project Name:my android. id: 7
[2023-07-03 13:12:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-03 13:12:47] 1.10- check project update number [PUN]if not found
[2023-07-03 13:12:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-03 13:12:47] 3.9- Finish cron_job Function
[2023-07-04 05:41:36] 1.1- Start cron_job Function
[2023-07-04 05:41:36] 1.2-request Api_url $api_url
[2023-07-04 05:41:37] 1.3-store events of the jop periodically during process 
[2023-07-04 05:41:37] 1.4- fetch data from Api
[2023-07-04 05:41:37] 1.5- View data that returned from API
[2023-07-04 05:41:37] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:41:37] 1.7- get data of each project to select 
[2023-07-04 05:41:37] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:41:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:41:37] 1.10- check project update number [PUN]if not found
[2023-07-04 05:41:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:41:37] 2.2- check if project update number[pun > 0]
[2023-07-04 05:41:37] 2.3- store data into history table
[2023-07-04 05:41:37] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-04 05:41:39] 3.1- start_process
[2023-07-04 05:41:39] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-04 05:41:39] 3.3- if aun status > 0 
[2023-07-04 05:41:39] 3.1- start_process
[2023-07-04 05:41:39] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-04 05:41:39] 3.3- if aun status > 0 
[2023-07-04 05:41:39] 3.1- start_process
[2023-07-04 05:41:39] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-04 05:41:39] 3.3- if aun status > 0 
[2023-07-04 05:41:39] 2.7-changed the new pun 306 
[2023-07-04 05:41:39] 2.8- register updated_app in event table
[2023-07-04 05:41:39] 2.9- set status {'updated'}
[2023-07-04 05:41:39] 3.1- start_process
[2023-07-04 05:41:39] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-04 05:41:39] 3.3- if aun status > 0 
[2023-07-04 05:41:39] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 05:41:39] 3.7 check if the keys exists, update data
[2023-07-04 05:41:39] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:39] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 05:41:39] 3.7 check if the keys exists, update data
[2023-07-04 05:41:39] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:39] 3.5 check  the app have key '..' if not found 
[2023-07-04 05:41:39] 3.6- Insert  all keys 
[2023-07-04 05:41:39] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 05:41:39] 3.7 check if the keys exists, update data
[2023-07-04 05:41:39] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:39] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 05:41:39] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 05:41:40] 3.7 check if the keys exists, update data
[2023-07-04 05:41:40] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:40] 3.1- start_process
[2023-07-04 05:41:40] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-04 05:41:40] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 2.7-changed the new pun 18 
[2023-07-04 05:41:41] 2.8- register updated_app in event table
[2023-07-04 05:41:41] 2.9- set status {'updated'}
[2023-07-04 05:41:41] 3.1- start_process
[2023-07-04 05:41:41] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-04 05:41:41] 3.3- if aun status > 0 
[2023-07-04 05:41:41] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 05:41:41] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '..' if not found 
[2023-07-04 05:41:42] 3.6- Insert  all keys 
[2023-07-04 05:41:42] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.last_update.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 05:41:42] 3.7 check if the keys exists, update data
[2023-07-04 05:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:42] 3.1- start_process
[2023-07-04 05:41:42] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-04 05:41:42] 3.3- if aun status > 0 
[2023-07-04 05:41:42] 3.1- start_process
[2023-07-04 05:41:42] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-04 05:41:42] 3.3- if aun status > 0 
[2023-07-04 05:41:42] 3.1- start_process
[2023-07-04 05:41:42] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-04 05:41:42] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:43] 3.1- start_process
[2023-07-04 05:41:43] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-04 05:41:43] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:44] 3.1- start_process
[2023-07-04 05:41:44] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-04 05:41:44] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:45] 3.1- start_process
[2023-07-04 05:41:45] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-04 05:41:45] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 2.7-changed the new pun 545 
[2023-07-04 05:41:46] 2.8- register updated_app in event table
[2023-07-04 05:41:46] 2.9- set status {'updated'}
[2023-07-04 05:41:46] 3.1- start_process
[2023-07-04 05:41:46] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-04 05:41:46] 3.3- if aun status > 0 
[2023-07-04 05:41:46] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 05:41:46] 3.7 check if the keys exists, update data
[2023-07-04 05:41:46] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:46] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 05:41:46] 3.7 check if the keys exists, update data
[2023-07-04 05:41:46] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:46] 3.5 check  the app have key '..' if not found 
[2023-07-04 05:41:47] 3.6- Insert  all keys 
[2023-07-04 05:41:47] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 2.7-changed the new pun 539 
[2023-07-04 05:41:47] 2.8- register updated_app in event table
[2023-07-04 05:41:47] 2.9- set status {'updated'}
[2023-07-04 05:41:47] 3.1- start_process
[2023-07-04 05:41:47] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-04 05:41:47] 3.3- if aun status > 0 
[2023-07-04 05:41:47] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '..' if not found 
[2023-07-04 05:41:47] 3.6- Insert  all keys 
[2023-07-04 05:41:47] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:47] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 05:41:47] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 2.7-changed the new pun 401 
[2023-07-04 05:41:48] 2.8- register updated_app in event table
[2023-07-04 05:41:48] 2.9- set status {'updated'}
[2023-07-04 05:41:48] 3.1- start_process
[2023-07-04 05:41:48] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-04 05:41:48] 3.3- if aun status > 0 
[2023-07-04 05:41:48] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '..' if not found 
[2023-07-04 05:41:48] 3.6- Insert  all keys 
[2023-07-04 05:41:48] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:48] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 05:41:48] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 05:41:49] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 05:41:49] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 05:41:49] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 05:41:49] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 05:41:49] 3.7 check if the keys exists, update data
[2023-07-04 05:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 05:41:49] 3.1- start_process
[2023-07-04 05:41:49] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-04 05:41:49] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:50] 3.1- start_process
[2023-07-04 05:41:50] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-04 05:41:50] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:51] 3.1- start_process
[2023-07-04 05:41:51] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-04 05:41:51] 3.3- if aun status > 0 
[2023-07-04 05:41:52] 3.1- start_process
[2023-07-04 05:41:52] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-04 05:41:52] 3.3- if aun status > 0 
[2023-07-04 05:41:52] 3.1- start_process
[2023-07-04 05:41:52] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-04 05:41:52] 3.3- if aun status > 0 
[2023-07-04 05:41:52] 3.1- start_process
[2023-07-04 05:41:52] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-04 05:41:52] 3.3- if aun status > 0 
[2023-07-04 05:41:52] 3.9- Finish cron_job Function
[2023-07-04 05:42:45] 1.1- Start cron_job Function
[2023-07-04 05:42:45] 1.2-request Api_url $api_url
[2023-07-04 05:42:46] 1.3-store events of the jop periodically during process 
[2023-07-04 05:42:46] 1.4- fetch data from Api
[2023-07-04 05:42:46] 1.5- View data that returned from API
[2023-07-04 05:42:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:42:46] 1.7- get data of each project to select 
[2023-07-04 05:42:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:42:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:42:46] 1.10- check project update number [PUN]if not found
[2023-07-04 05:42:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:42:46] 3.9- Finish cron_job Function
[2023-07-04 05:43:32] 1.1- Start cron_job Function
[2023-07-04 05:43:32] 1.2-request Api_url $api_url
[2023-07-04 05:43:32] 1.3-store events of the jop periodically during process 
[2023-07-04 05:43:32] 1.4- fetch data from Api
[2023-07-04 05:43:32] 1.5- View data that returned from API
[2023-07-04 05:43:32] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:43:32] 1.7- get data of each project to select 
[2023-07-04 05:43:32] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:43:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:43:32] 1.10- check project update number [PUN]if not found
[2023-07-04 05:43:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:43:32] 3.9- Finish cron_job Function
[2023-07-04 05:45:39] 1.1- Start cron_job Function
[2023-07-04 05:45:39] 1.2-request Api_url $api_url
[2023-07-04 05:45:40] 1.3-store events of the jop periodically during process 
[2023-07-04 05:45:40] 1.4- fetch data from Api
[2023-07-04 05:45:40] 1.5- View data that returned from API
[2023-07-04 05:45:40] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:45:40] 1.7- get data of each project to select 
[2023-07-04 05:45:40] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:45:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:45:40] 1.10- check project update number [PUN]if not found
[2023-07-04 05:45:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:45:40] 3.9- Finish cron_job Function
[2023-07-04 05:46:51] 1.1- Start cron_job Function
[2023-07-04 05:46:51] 1.2-request Api_url $api_url
[2023-07-04 05:46:51] 1.3-store events of the jop periodically during process 
[2023-07-04 05:46:51] 1.4- fetch data from Api
[2023-07-04 05:46:51] 1.5- View data that returned from API
[2023-07-04 05:46:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:46:51] 1.7- get data of each project to select 
[2023-07-04 05:46:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:46:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:46:51] 1.10- check project update number [PUN]if not found
[2023-07-04 05:46:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:46:51] 3.9- Finish cron_job Function
[2023-07-04 05:47:39] 1.1- Start cron_job Function
[2023-07-04 05:47:39] 1.2-request Api_url $api_url
[2023-07-04 05:47:40] 1.3-store events of the jop periodically during process 
[2023-07-04 05:47:40] 1.4- fetch data from Api
[2023-07-04 05:47:40] 1.5- View data that returned from API
[2023-07-04 05:47:40] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:47:40] 1.7- get data of each project to select 
[2023-07-04 05:47:40] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:47:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:47:40] 1.10- check project update number [PUN]if not found
[2023-07-04 05:47:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:47:40] 3.9- Finish cron_job Function
[2023-07-04 05:48:46] 1.1- Start cron_job Function
[2023-07-04 05:48:46] 1.2-request Api_url $api_url
[2023-07-04 05:48:47] 1.3-store events of the jop periodically during process 
[2023-07-04 05:48:47] 1.4- fetch data from Api
[2023-07-04 05:48:47] 1.5- View data that returned from API
[2023-07-04 05:48:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:48:47] 1.7- get data of each project to select 
[2023-07-04 05:48:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:48:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:48:47] 1.10- check project update number [PUN]if not found
[2023-07-04 05:48:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:48:47] 3.9- Finish cron_job Function
[2023-07-04 05:49:42] 1.1- Start cron_job Function
[2023-07-04 05:49:42] 1.2-request Api_url $api_url
[2023-07-04 05:49:42] 1.3-store events of the jop periodically during process 
[2023-07-04 05:49:42] 1.4- fetch data from Api
[2023-07-04 05:49:42] 1.5- View data that returned from API
[2023-07-04 05:49:42] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:49:42] 1.7- get data of each project to select 
[2023-07-04 05:49:42] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:49:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:49:42] 1.10- check project update number [PUN]if not found
[2023-07-04 05:49:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:49:42] 3.9- Finish cron_job Function
[2023-07-04 05:51:41] 1.1- Start cron_job Function
[2023-07-04 05:51:41] 1.2-request Api_url $api_url
[2023-07-04 05:51:42] 1.3-store events of the jop periodically during process 
[2023-07-04 05:51:42] 1.4- fetch data from Api
[2023-07-04 05:51:42] 1.5- View data that returned from API
[2023-07-04 05:51:42] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:51:42] 1.7- get data of each project to select 
[2023-07-04 05:51:42] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:51:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:51:42] 1.10- check project update number [PUN]if not found
[2023-07-04 05:51:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:51:42] 3.9- Finish cron_job Function
[2023-07-04 05:53:42] 1.1- Start cron_job Function
[2023-07-04 05:53:42] 1.2-request Api_url $api_url
[2023-07-04 05:53:43] 1.3-store events of the jop periodically during process 
[2023-07-04 05:53:43] 1.4- fetch data from Api
[2023-07-04 05:53:43] 1.5- View data that returned from API
[2023-07-04 05:53:43] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:53:43] 1.7- get data of each project to select 
[2023-07-04 05:53:43] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:53:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:53:43] 1.10- check project update number [PUN]if not found
[2023-07-04 05:53:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:53:43] 3.9- Finish cron_job Function
[2023-07-04 05:55:42] 1.1- Start cron_job Function
[2023-07-04 05:55:42] 1.2-request Api_url $api_url
[2023-07-04 05:55:42] 1.3-store events of the jop periodically during process 
[2023-07-04 05:55:42] 1.4- fetch data from Api
[2023-07-04 05:55:42] 1.5- View data that returned from API
[2023-07-04 05:55:42] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:55:42] 1.7- get data of each project to select 
[2023-07-04 05:55:42] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:55:42] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:55:42] 1.10- check project update number [PUN]if not found
[2023-07-04 05:55:42] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:55:42] 3.9- Finish cron_job Function
[2023-07-04 05:56:59] 1.1- Start cron_job Function
[2023-07-04 05:56:59] 1.2-request Api_url $api_url
[2023-07-04 05:57:00] 1.3-store events of the jop periodically during process 
[2023-07-04 05:57:00] 1.4- fetch data from Api
[2023-07-04 05:57:00] 1.5- View data that returned from API
[2023-07-04 05:57:00] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:57:00] 1.7- get data of each project to select 
[2023-07-04 05:57:00] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:57:00] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:57:00] 1.10- check project update number [PUN]if not found
[2023-07-04 05:57:00] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:57:00] 3.9- Finish cron_job Function
[2023-07-04 05:57:42] 1.1- Start cron_job Function
[2023-07-04 05:57:42] 1.2-request Api_url $api_url
[2023-07-04 05:57:43] 1.3-store events of the jop periodically during process 
[2023-07-04 05:57:43] 1.4- fetch data from Api
[2023-07-04 05:57:43] 1.5- View data that returned from API
[2023-07-04 05:57:43] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:57:43] 1.7- get data of each project to select 
[2023-07-04 05:57:43] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:57:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:57:43] 1.10- check project update number [PUN]if not found
[2023-07-04 05:57:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:57:43] 3.9- Finish cron_job Function
[2023-07-04 05:59:42] 1.1- Start cron_job Function
[2023-07-04 05:59:42] 1.2-request Api_url $api_url
[2023-07-04 05:59:43] 1.3-store events of the jop periodically during process 
[2023-07-04 05:59:43] 1.4- fetch data from Api
[2023-07-04 05:59:43] 1.5- View data that returned from API
[2023-07-04 05:59:43] 1.6- get and View projects & tags that returned from  API
[2023-07-04 05:59:43] 1.7- get data of each project to select 
[2023-07-04 05:59:43] 1.8- The selected project Name:my android. id: 7
[2023-07-04 05:59:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 05:59:43] 1.10- check project update number [PUN]if not found
[2023-07-04 05:59:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 05:59:43] 3.9- Finish cron_job Function
[2023-07-04 06:01:44] 1.1- Start cron_job Function
[2023-07-04 06:01:44] 1.2-request Api_url $api_url
[2023-07-04 06:01:44] 1.3-store events of the jop periodically during process 
[2023-07-04 06:01:44] 1.4- fetch data from Api
[2023-07-04 06:01:44] 1.5- View data that returned from API
[2023-07-04 06:01:44] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:01:44] 1.7- get data of each project to select 
[2023-07-04 06:01:44] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:01:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:01:44] 1.10- check project update number [PUN]if not found
[2023-07-04 06:01:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:01:44] 2.2- check if project update number[pun > 0]
[2023-07-04 06:01:44] 2.3- store data into history table
[2023-07-04 06:01:44] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-04 06:01:46] 3.1- start_process
[2023-07-04 06:01:46] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-04 06:01:46] 3.3- if aun status > 0 
[2023-07-04 06:01:46] 3.1- start_process
[2023-07-04 06:01:46] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-04 06:01:46] 3.3- if aun status > 0 
[2023-07-04 06:01:46] 3.1- start_process
[2023-07-04 06:01:46] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-04 06:01:46] 3.3- if aun status > 0 
[2023-07-04 06:01:46] 2.7-changed the new pun 307 
[2023-07-04 06:01:46] 2.8- register updated_app in event table
[2023-07-04 06:01:46] 2.9- set status {'updated'}
[2023-07-04 06:01:46] 3.1- start_process
[2023-07-04 06:01:46] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-04 06:01:46] 3.3- if aun status > 0 
[2023-07-04 06:01:46] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 06:01:46] 3.7 check if the keys exists, update data
[2023-07-04 06:01:46] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:46] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 06:01:46] 3.7 check if the keys exists, update data
[2023-07-04 06:01:46] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:46] 3.5 check  the app have key '..' if not found 
[2023-07-04 06:01:47] 3.6- Insert  all keys 
[2023-07-04 06:01:47] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 06:01:47] 3.7 check if the keys exists, update data
[2023-07-04 06:01:47] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:47] 3.1- start_process
[2023-07-04 06:01:47] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-04 06:01:47] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:48] 3.1- start_process
[2023-07-04 06:01:48] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-04 06:01:48] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:49] 3.1- start_process
[2023-07-04 06:01:49] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-04 06:01:49] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:50] 3.1- start_process
[2023-07-04 06:01:50] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-04 06:01:50] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:51] 3.1- start_process
[2023-07-04 06:01:51] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-04 06:01:51] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:52] 3.1- start_process
[2023-07-04 06:01:52] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-04 06:01:52] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 2.7-changed the new pun 546 
[2023-07-04 06:01:53] 2.8- register updated_app in event table
[2023-07-04 06:01:53] 2.9- set status {'updated'}
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '..' if not found 
[2023-07-04 06:01:53] 3.6- Insert  all keys 
[2023-07-04 06:01:53] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 2.7-changed the new pun 540 
[2023-07-04 06:01:53] 2.8- register updated_app in event table
[2023-07-04 06:01:53] 2.9- set status {'updated'}
[2023-07-04 06:01:53] 3.1- start_process
[2023-07-04 06:01:53] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-04 06:01:53] 3.3- if aun status > 0 
[2023-07-04 06:01:53] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '..' if not found 
[2023-07-04 06:01:53] 3.6- Insert  all keys 
[2023-07-04 06:01:53] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:53] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:53] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 06:01:53] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 2.7-changed the new pun 402 
[2023-07-04 06:01:54] 2.8- register updated_app in event table
[2023-07-04 06:01:54] 2.9- set status {'updated'}
[2023-07-04 06:01:54] 3.1- start_process
[2023-07-04 06:01:54] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-04 06:01:54] 3.3- if aun status > 0 
[2023-07-04 06:01:54] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '..' if not found 
[2023-07-04 06:01:54] 3.6- Insert  all keys 
[2023-07-04 06:01:54] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:54] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:54] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 06:01:54] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 06:01:55] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 06:01:55] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 06:01:55] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 06:01:55] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 06:01:55] 3.7 check if the keys exists, update data
[2023-07-04 06:01:55] 3.8- update all keys & logo & thumbnail 
[2023-07-04 06:01:55] 3.1- start_process
[2023-07-04 06:01:55] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-04 06:01:55] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:56] 3.1- start_process
[2023-07-04 06:01:56] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-04 06:01:56] 3.3- if aun status > 0 
[2023-07-04 06:01:57] 3.1- start_process
[2023-07-04 06:01:57] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-04 06:01:57] 3.3- if aun status > 0 
[2023-07-04 06:01:57] 3.1- start_process
[2023-07-04 06:01:57] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-04 06:01:57] 3.3- if aun status > 0 
[2023-07-04 06:01:57] 3.1- start_process
[2023-07-04 06:01:57] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-04 06:01:57] 3.3- if aun status > 0 
[2023-07-04 06:01:57] 3.9- Finish cron_job Function
[2023-07-04 06:03:44] 1.1- Start cron_job Function
[2023-07-04 06:03:44] 1.2-request Api_url $api_url
[2023-07-04 06:03:45] 1.3-store events of the jop periodically during process 
[2023-07-04 06:03:45] 1.4- fetch data from Api
[2023-07-04 06:03:45] 1.5- View data that returned from API
[2023-07-04 06:03:45] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:03:45] 1.7- get data of each project to select 
[2023-07-04 06:03:45] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:03:45] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:03:45] 1.10- check project update number [PUN]if not found
[2023-07-04 06:03:45] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:03:45] 3.9- Finish cron_job Function
[2023-07-04 06:05:45] 1.1- Start cron_job Function
[2023-07-04 06:05:45] 1.2-request Api_url $api_url
[2023-07-04 06:05:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:05:46] 1.4- fetch data from Api
[2023-07-04 06:05:46] 1.5- View data that returned from API
[2023-07-04 06:05:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:05:46] 1.7- get data of each project to select 
[2023-07-04 06:05:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:05:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:05:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:05:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:05:46] 3.9- Finish cron_job Function
[2023-07-04 06:07:45] 1.1- Start cron_job Function
[2023-07-04 06:07:45] 1.2-request Api_url $api_url
[2023-07-04 06:07:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:07:46] 1.4- fetch data from Api
[2023-07-04 06:07:46] 1.5- View data that returned from API
[2023-07-04 06:07:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:07:46] 1.7- get data of each project to select 
[2023-07-04 06:07:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:07:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:07:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:07:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:07:46] 3.9- Finish cron_job Function
[2023-07-04 06:09:45] 1.1- Start cron_job Function
[2023-07-04 06:09:45] 1.2-request Api_url $api_url
[2023-07-04 06:09:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:09:46] 1.4- fetch data from Api
[2023-07-04 06:09:46] 1.5- View data that returned from API
[2023-07-04 06:09:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:09:46] 1.7- get data of each project to select 
[2023-07-04 06:09:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:09:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:09:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:09:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:09:46] 3.9- Finish cron_job Function
[2023-07-04 06:11:45] 1.1- Start cron_job Function
[2023-07-04 06:11:45] 1.2-request Api_url $api_url
[2023-07-04 06:11:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:11:46] 1.4- fetch data from Api
[2023-07-04 06:11:46] 1.5- View data that returned from API
[2023-07-04 06:11:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:11:46] 1.7- get data of each project to select 
[2023-07-04 06:11:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:11:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:11:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:11:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:11:46] 2.2- check if project update number[pun > 0]
[2023-07-04 06:11:46] 2.3- store data into history table
[2023-07-04 06:11:46] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:48] 3.1- start_process
[2023-07-04 06:11:48] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-04 06:11:48] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:49] 3.1- start_process
[2023-07-04 06:11:49] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-04 06:11:49] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:50] 3.1- start_process
[2023-07-04 06:11:50] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-04 06:11:50] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:51] 3.1- start_process
[2023-07-04 06:11:51] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-04 06:11:51] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:52] 3.1- start_process
[2023-07-04 06:11:52] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-04 06:11:52] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:53] 3.1- start_process
[2023-07-04 06:11:53] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-04 06:11:53] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:54] 3.1- start_process
[2023-07-04 06:11:54] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-04 06:11:54] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:55] 3.1- start_process
[2023-07-04 06:11:55] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-04 06:11:55] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.1- start_process
[2023-07-04 06:11:56] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-04 06:11:56] 3.3- if aun status > 0 
[2023-07-04 06:11:56] 3.9- Finish cron_job Function
[2023-07-04 06:13:45] 1.1- Start cron_job Function
[2023-07-04 06:13:45] 1.2-request Api_url $api_url
[2023-07-04 06:13:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:13:46] 1.4- fetch data from Api
[2023-07-04 06:13:46] 1.5- View data that returned from API
[2023-07-04 06:13:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:13:46] 1.7- get data of each project to select 
[2023-07-04 06:13:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:13:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:13:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:13:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:13:46] 3.9- Finish cron_job Function
[2023-07-04 06:15:47] 1.1- Start cron_job Function
[2023-07-04 06:15:47] 1.2-request Api_url $api_url
[2023-07-04 06:15:48] 1.3-store events of the jop periodically during process 
[2023-07-04 06:15:48] 1.4- fetch data from Api
[2023-07-04 06:15:48] 1.5- View data that returned from API
[2023-07-04 06:15:48] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:15:48] 1.7- get data of each project to select 
[2023-07-04 06:15:48] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:15:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:15:48] 1.10- check project update number [PUN]if not found
[2023-07-04 06:15:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:15:48] 3.9- Finish cron_job Function
[2023-07-04 06:17:46] 1.1- Start cron_job Function
[2023-07-04 06:17:46] 1.2-request Api_url $api_url
[2023-07-04 06:17:47] 1.3-store events of the jop periodically during process 
[2023-07-04 06:17:47] 1.4- fetch data from Api
[2023-07-04 06:17:47] 1.5- View data that returned from API
[2023-07-04 06:17:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:17:47] 1.7- get data of each project to select 
[2023-07-04 06:17:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:17:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:17:47] 1.10- check project update number [PUN]if not found
[2023-07-04 06:17:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:17:47] 3.9- Finish cron_job Function
[2023-07-04 06:19:46] 1.1- Start cron_job Function
[2023-07-04 06:19:46] 1.2-request Api_url $api_url
[2023-07-04 06:19:47] 1.3-store events of the jop periodically during process 
[2023-07-04 06:19:47] 1.4- fetch data from Api
[2023-07-04 06:19:47] 1.5- View data that returned from API
[2023-07-04 06:19:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:19:47] 1.7- get data of each project to select 
[2023-07-04 06:19:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:19:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:19:47] 1.10- check project update number [PUN]if not found
[2023-07-04 06:19:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:19:47] 3.9- Finish cron_job Function
[2023-07-04 06:21:47] 1.1- Start cron_job Function
[2023-07-04 06:21:47] 1.2-request Api_url $api_url
[2023-07-04 06:21:48] 1.3-store events of the jop periodically during process 
[2023-07-04 06:21:48] 1.4- fetch data from Api
[2023-07-04 06:21:48] 1.5- View data that returned from API
[2023-07-04 06:21:48] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:21:48] 1.7- get data of each project to select 
[2023-07-04 06:21:48] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:21:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:21:48] 1.10- check project update number [PUN]if not found
[2023-07-04 06:21:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:21:48] 3.9- Finish cron_job Function
[2023-07-04 06:23:47] 1.1- Start cron_job Function
[2023-07-04 06:23:47] 1.2-request Api_url $api_url
[2023-07-04 06:23:48] 1.3-store events of the jop periodically during process 
[2023-07-04 06:23:48] 1.4- fetch data from Api
[2023-07-04 06:23:48] 1.5- View data that returned from API
[2023-07-04 06:23:48] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:23:48] 1.7- get data of each project to select 
[2023-07-04 06:23:48] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:23:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:23:48] 1.10- check project update number [PUN]if not found
[2023-07-04 06:23:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:23:48] 3.9- Finish cron_job Function
[2023-07-04 06:25:49] 1.1- Start cron_job Function
[2023-07-04 06:25:49] 1.2-request Api_url $api_url
[2023-07-04 06:25:50] 1.3-store events of the jop periodically during process 
[2023-07-04 06:25:50] 1.4- fetch data from Api
[2023-07-04 06:25:50] 1.5- View data that returned from API
[2023-07-04 06:25:50] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:25:50] 1.7- get data of each project to select 
[2023-07-04 06:25:50] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:25:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:25:50] 1.10- check project update number [PUN]if not found
[2023-07-04 06:25:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:25:50] 3.9- Finish cron_job Function
[2023-07-04 06:27:49] 1.1- Start cron_job Function
[2023-07-04 06:27:49] 1.2-request Api_url $api_url
[2023-07-04 06:27:50] 1.3-store events of the jop periodically during process 
[2023-07-04 06:27:50] 1.4- fetch data from Api
[2023-07-04 06:27:50] 1.5- View data that returned from API
[2023-07-04 06:27:50] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:27:50] 1.7- get data of each project to select 
[2023-07-04 06:27:50] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:27:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:27:50] 1.10- check project update number [PUN]if not found
[2023-07-04 06:27:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:27:50] 3.9- Finish cron_job Function
[2023-07-04 06:29:49] 1.1- Start cron_job Function
[2023-07-04 06:29:49] 1.2-request Api_url $api_url
[2023-07-04 06:29:50] 1.3-store events of the jop periodically during process 
[2023-07-04 06:29:50] 1.4- fetch data from Api
[2023-07-04 06:29:50] 1.5- View data that returned from API
[2023-07-04 06:29:50] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:29:50] 1.7- get data of each project to select 
[2023-07-04 06:29:50] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:29:50] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:29:50] 1.10- check project update number [PUN]if not found
[2023-07-04 06:29:50] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:29:50] 3.9- Finish cron_job Function
[2023-07-04 06:31:50] 1.1- Start cron_job Function
[2023-07-04 06:31:50] 1.2-request Api_url $api_url
[2023-07-04 06:31:51] 1.3-store events of the jop periodically during process 
[2023-07-04 06:31:51] 1.4- fetch data from Api
[2023-07-04 06:31:51] 1.5- View data that returned from API
[2023-07-04 06:31:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:31:51] 1.7- get data of each project to select 
[2023-07-04 06:31:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:31:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:31:51] 1.10- check project update number [PUN]if not found
[2023-07-04 06:31:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:31:51] 3.9- Finish cron_job Function
[2023-07-04 06:33:54] 1.1- Start cron_job Function
[2023-07-04 06:33:54] 1.2-request Api_url $api_url
[2023-07-04 06:33:55] 1.3-store events of the jop periodically during process 
[2023-07-04 06:33:55] 1.4- fetch data from Api
[2023-07-04 06:33:55] 1.5- View data that returned from API
[2023-07-04 06:33:55] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:33:55] 1.7- get data of each project to select 
[2023-07-04 06:33:55] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:33:55] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:33:55] 1.10- check project update number [PUN]if not found
[2023-07-04 06:33:55] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:33:55] 3.9- Finish cron_job Function
[2023-07-04 06:35:52] 1.1- Start cron_job Function
[2023-07-04 06:35:52] 1.2-request Api_url $api_url
[2023-07-04 06:35:53] 1.3-store events of the jop periodically during process 
[2023-07-04 06:35:53] 1.4- fetch data from Api
[2023-07-04 06:35:53] 1.5- View data that returned from API
[2023-07-04 06:35:53] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:35:53] 1.7- get data of each project to select 
[2023-07-04 06:35:53] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:35:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:35:53] 1.10- check project update number [PUN]if not found
[2023-07-04 06:35:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:35:53] 3.9- Finish cron_job Function
[2023-07-04 06:37:51] 1.1- Start cron_job Function
[2023-07-04 06:37:51] 1.2-request Api_url $api_url
[2023-07-04 06:37:52] 1.3-store events of the jop periodically during process 
[2023-07-04 06:37:52] 1.4- fetch data from Api
[2023-07-04 06:37:52] 1.5- View data that returned from API
[2023-07-04 06:37:52] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:37:52] 1.7- get data of each project to select 
[2023-07-04 06:37:52] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:37:52] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:37:52] 1.10- check project update number [PUN]if not found
[2023-07-04 06:37:52] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:37:52] 3.9- Finish cron_job Function
[2023-07-04 06:39:09] 1.1- Start cron_job Function
[2023-07-04 06:39:09] 1.2-request Api_url $api_url
[2023-07-04 06:39:10] 1.3-store events of the jop periodically during process 
[2023-07-04 06:39:10] 1.4- fetch data from Api
[2023-07-04 06:39:10] 1.5- View data that returned from API
[2023-07-04 06:39:10] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:39:10] 1.7- get data of each project to select 
[2023-07-04 06:39:10] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:39:10] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:39:10] 1.10- check project update number [PUN]if not found
[2023-07-04 06:39:10] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:39:10] 3.9- Finish cron_job Function
[2023-07-04 06:39:35] 1.1- Start cron_job Function
[2023-07-04 06:39:35] 1.2-request Api_url $api_url
[2023-07-04 06:39:35] 1.3-store events of the jop periodically during process 
[2023-07-04 06:39:35] 1.4- fetch data from Api
[2023-07-04 06:39:35] 1.5- View data that returned from API
[2023-07-04 06:39:35] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:39:35] 1.7- get data of each project to select 
[2023-07-04 06:39:35] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:39:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:39:35] 1.10- check project update number [PUN]if not found
[2023-07-04 06:39:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:39:35] 3.9- Finish cron_job Function
[2023-07-04 06:40:34] 1.1- Start cron_job Function
[2023-07-04 06:40:34] 1.2-request Api_url $api_url
[2023-07-04 06:40:34] 1.3-store events of the jop periodically during process 
[2023-07-04 06:40:34] 1.4- fetch data from Api
[2023-07-04 06:40:34] 1.5- View data that returned from API
[2023-07-04 06:40:34] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:40:34] 1.7- get data of each project to select 
[2023-07-04 06:40:34] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:40:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:40:34] 1.10- check project update number [PUN]if not found
[2023-07-04 06:40:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:40:34] 3.9- Finish cron_job Function
[2023-07-04 06:41:43] 1.1- Start cron_job Function
[2023-07-04 06:41:43] 1.2-request Api_url $api_url
[2023-07-04 06:41:44] 1.3-store events of the jop periodically during process 
[2023-07-04 06:41:44] 1.4- fetch data from Api
[2023-07-04 06:41:44] 1.5- View data that returned from API
[2023-07-04 06:41:44] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:41:44] 1.7- get data of each project to select 
[2023-07-04 06:41:44] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:41:44] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:41:44] 1.10- check project update number [PUN]if not found
[2023-07-04 06:41:44] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:41:44] 3.9- Finish cron_job Function
[2023-07-04 06:42:30] 1.1- Start cron_job Function
[2023-07-04 06:42:30] 1.2-request Api_url $api_url
[2023-07-04 06:42:31] 1.3-store events of the jop periodically during process 
[2023-07-04 06:42:31] 1.4- fetch data from Api
[2023-07-04 06:42:31] 1.5- View data that returned from API
[2023-07-04 06:42:31] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:42:31] 1.7- get data of each project to select 
[2023-07-04 06:42:31] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:42:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:42:31] 1.10- check project update number [PUN]if not found
[2023-07-04 06:42:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:42:31] 3.9- Finish cron_job Function
[2023-07-04 06:43:33] 1.1- Start cron_job Function
[2023-07-04 06:43:33] 1.2-request Api_url $api_url
[2023-07-04 06:43:33] 1.3-store events of the jop periodically during process 
[2023-07-04 06:43:33] 1.4- fetch data from Api
[2023-07-04 06:43:33] 1.5- View data that returned from API
[2023-07-04 06:43:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:43:33] 1.7- get data of each project to select 
[2023-07-04 06:43:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:43:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:43:33] 1.10- check project update number [PUN]if not found
[2023-07-04 06:43:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:43:33] 3.9- Finish cron_job Function
[2023-07-04 06:44:34] 1.1- Start cron_job Function
[2023-07-04 06:44:34] 1.2-request Api_url $api_url
[2023-07-04 06:44:35] 1.3-store events of the jop periodically during process 
[2023-07-04 06:44:35] 1.4- fetch data from Api
[2023-07-04 06:44:35] 1.5- View data that returned from API
[2023-07-04 06:44:35] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:44:35] 1.7- get data of each project to select 
[2023-07-04 06:44:35] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:44:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:44:35] 1.10- check project update number [PUN]if not found
[2023-07-04 06:44:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:44:35] 3.9- Finish cron_job Function
[2023-07-04 06:46:17] 1.1- Start cron_job Function
[2023-07-04 06:46:17] 1.2-request Api_url $api_url
[2023-07-04 06:46:18] 1.3-store events of the jop periodically during process 
[2023-07-04 06:46:18] 1.4- fetch data from Api
[2023-07-04 06:46:18] 1.5- View data that returned from API
[2023-07-04 06:46:18] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:46:18] 1.7- get data of each project to select 
[2023-07-04 06:46:18] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:46:18] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:46:18] 1.10- check project update number [PUN]if not found
[2023-07-04 06:46:18] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:46:18] 3.9- Finish cron_job Function
[2023-07-04 06:48:05] 1.1- Start cron_job Function
[2023-07-04 06:48:05] 1.2-request Api_url $api_url
[2023-07-04 06:48:05] 1.3-store events of the jop periodically during process 
[2023-07-04 06:48:05] 1.4- fetch data from Api
[2023-07-04 06:48:05] 1.5- View data that returned from API
[2023-07-04 06:48:05] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:48:05] 1.7- get data of each project to select 
[2023-07-04 06:48:05] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:48:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:48:05] 1.10- check project update number [PUN]if not found
[2023-07-04 06:48:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:48:05] 3.9- Finish cron_job Function
[2023-07-04 06:48:31] 1.1- Start cron_job Function
[2023-07-04 06:48:31] 1.2-request Api_url $api_url
[2023-07-04 06:48:32] 1.3-store events of the jop periodically during process 
[2023-07-04 06:48:32] 1.4- fetch data from Api
[2023-07-04 06:48:32] 1.5- View data that returned from API
[2023-07-04 06:48:32] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:48:32] 1.7- get data of each project to select 
[2023-07-04 06:48:32] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:48:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:48:32] 1.10- check project update number [PUN]if not found
[2023-07-04 06:48:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:48:32] 3.9- Finish cron_job Function
[2023-07-04 06:50:22] 1.1- Start cron_job Function
[2023-07-04 06:50:22] 1.2-request Api_url $api_url
[2023-07-04 06:50:23] 1.3-store events of the jop periodically during process 
[2023-07-04 06:50:23] 1.4- fetch data from Api
[2023-07-04 06:50:23] 1.5- View data that returned from API
[2023-07-04 06:50:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:50:23] 1.7- get data of each project to select 
[2023-07-04 06:50:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:50:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:50:23] 1.10- check project update number [PUN]if not found
[2023-07-04 06:50:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:50:23] 3.9- Finish cron_job Function
[2023-07-04 06:50:30] 1.1- Start cron_job Function
[2023-07-04 06:50:30] 1.2-request Api_url $api_url
[2023-07-04 06:50:30] 1.3-store events of the jop periodically during process 
[2023-07-04 06:50:30] 1.4- fetch data from Api
[2023-07-04 06:50:30] 1.5- View data that returned from API
[2023-07-04 06:50:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:50:30] 1.7- get data of each project to select 
[2023-07-04 06:50:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:50:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:50:30] 1.10- check project update number [PUN]if not found
[2023-07-04 06:50:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:50:30] 3.9- Finish cron_job Function
[2023-07-04 06:51:42] 1.1- Start cron_job Function
[2023-07-04 06:51:42] 1.2-request Api_url $api_url
[2023-07-04 06:51:43] 1.3-store events of the jop periodically during process 
[2023-07-04 06:51:43] 1.4- fetch data from Api
[2023-07-04 06:51:43] 1.5- View data that returned from API
[2023-07-04 06:51:43] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:51:43] 1.7- get data of each project to select 
[2023-07-04 06:51:43] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:51:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:51:43] 1.10- check project update number [PUN]if not found
[2023-07-04 06:51:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:51:43] 3.9- Finish cron_job Function
[2023-07-04 06:52:29] 1.1- Start cron_job Function
[2023-07-04 06:52:29] 1.2-request Api_url $api_url
[2023-07-04 06:52:30] 1.3-store events of the jop periodically during process 
[2023-07-04 06:52:30] 1.4- fetch data from Api
[2023-07-04 06:52:30] 1.5- View data that returned from API
[2023-07-04 06:52:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:52:30] 1.7- get data of each project to select 
[2023-07-04 06:52:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:52:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:52:30] 1.10- check project update number [PUN]if not found
[2023-07-04 06:52:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:52:30] 3.9- Finish cron_job Function
[2023-07-04 06:53:45] 1.1- Start cron_job Function
[2023-07-04 06:53:45] 1.2-request Api_url $api_url
[2023-07-04 06:53:46] 1.3-store events of the jop periodically during process 
[2023-07-04 06:53:46] 1.4- fetch data from Api
[2023-07-04 06:53:46] 1.5- View data that returned from API
[2023-07-04 06:53:46] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:53:46] 1.7- get data of each project to select 
[2023-07-04 06:53:46] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:53:46] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:53:46] 1.10- check project update number [PUN]if not found
[2023-07-04 06:53:46] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:53:46] 3.9- Finish cron_job Function
[2023-07-04 06:54:46] 1.1- Start cron_job Function
[2023-07-04 06:54:46] 1.2-request Api_url $api_url
[2023-07-04 06:54:47] 1.3-store events of the jop periodically during process 
[2023-07-04 06:54:47] 1.4- fetch data from Api
[2023-07-04 06:54:47] 1.5- View data that returned from API
[2023-07-04 06:54:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:54:47] 1.7- get data of each project to select 
[2023-07-04 06:54:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:54:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:54:47] 1.10- check project update number [PUN]if not found
[2023-07-04 06:54:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:54:47] 3.9- Finish cron_job Function
[2023-07-04 06:55:29] 1.1- Start cron_job Function
[2023-07-04 06:55:29] 1.2-request Api_url $api_url
[2023-07-04 06:55:30] 1.3-store events of the jop periodically during process 
[2023-07-04 06:55:30] 1.4- fetch data from Api
[2023-07-04 06:55:30] 1.5- View data that returned from API
[2023-07-04 06:55:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:55:30] 1.7- get data of each project to select 
[2023-07-04 06:55:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:55:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:55:30] 1.10- check project update number [PUN]if not found
[2023-07-04 06:55:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:55:30] 3.9- Finish cron_job Function
[2023-07-04 06:58:32] 1.1- Start cron_job Function
[2023-07-04 06:58:32] 1.2-request Api_url $api_url
[2023-07-04 06:58:33] 1.3-store events of the jop periodically during process 
[2023-07-04 06:58:33] 1.4- fetch data from Api
[2023-07-04 06:58:33] 1.5- View data that returned from API
[2023-07-04 06:58:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 06:58:33] 1.7- get data of each project to select 
[2023-07-04 06:58:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 06:58:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 06:58:33] 1.10- check project update number [PUN]if not found
[2023-07-04 06:58:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 06:58:33] 3.9- Finish cron_job Function
[2023-07-04 07:01:50] 1.1- Start cron_job Function
[2023-07-04 07:01:50] 1.2-request Api_url $api_url
[2023-07-04 07:01:51] 1.3-store events of the jop periodically during process 
[2023-07-04 07:01:51] 1.4- fetch data from Api
[2023-07-04 07:01:51] 1.5- View data that returned from API
[2023-07-04 07:01:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:01:51] 1.7- get data of each project to select 
[2023-07-04 07:01:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:01:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:01:51] 1.10- check project update number [PUN]if not found
[2023-07-04 07:01:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:01:51] 3.9- Finish cron_job Function
[2023-07-04 07:03:05] 1.1- Start cron_job Function
[2023-07-04 07:03:05] 1.2-request Api_url $api_url
[2023-07-04 07:03:05] 1.3-store events of the jop periodically during process 
[2023-07-04 07:03:05] 1.4- fetch data from Api
[2023-07-04 07:03:05] 1.5- View data that returned from API
[2023-07-04 07:03:05] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:03:05] 1.7- get data of each project to select 
[2023-07-04 07:03:05] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:03:05] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:03:05] 1.10- check project update number [PUN]if not found
[2023-07-04 07:03:05] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:03:05] 3.9- Finish cron_job Function
[2023-07-04 07:03:56] 1.1- Start cron_job Function
[2023-07-04 07:03:56] 1.2-request Api_url $api_url
[2023-07-04 07:03:57] 1.3-store events of the jop periodically during process 
[2023-07-04 07:03:57] 1.4- fetch data from Api
[2023-07-04 07:03:57] 1.5- View data that returned from API
[2023-07-04 07:03:57] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:03:57] 1.7- get data of each project to select 
[2023-07-04 07:03:57] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:03:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:03:57] 1.10- check project update number [PUN]if not found
[2023-07-04 07:03:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:03:57] 3.9- Finish cron_job Function
[2023-07-04 07:04:35] 1.1- Start cron_job Function
[2023-07-04 07:04:35] 1.2-request Api_url $api_url
[2023-07-04 07:04:36] 1.3-store events of the jop periodically during process 
[2023-07-04 07:04:36] 1.4- fetch data from Api
[2023-07-04 07:04:36] 1.5- View data that returned from API
[2023-07-04 07:04:36] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:04:36] 1.7- get data of each project to select 
[2023-07-04 07:04:36] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:04:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:04:36] 1.10- check project update number [PUN]if not found
[2023-07-04 07:04:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:04:36] 3.9- Finish cron_job Function
[2023-07-04 07:19:19] 1.1- Start cron_job Function
[2023-07-04 07:19:19] 1.2-request Api_url $api_url
[2023-07-04 07:19:19] 1.3-store events of the jop periodically during process 
[2023-07-04 07:19:19] 1.4- fetch data from Api
[2023-07-04 07:19:19] 1.5- View data that returned from API
[2023-07-04 07:19:19] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:19:19] 1.7- get data of each project to select 
[2023-07-04 07:19:19] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:19:19] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:19:19] 1.10- check project update number [PUN]if not found
[2023-07-04 07:19:19] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:19:19] 3.9- Finish cron_job Function
[2023-07-04 07:19:30] 1.1- Start cron_job Function
[2023-07-04 07:19:30] 1.2-request Api_url $api_url
[2023-07-04 07:19:31] 1.3-store events of the jop periodically during process 
[2023-07-04 07:19:31] 1.4- fetch data from Api
[2023-07-04 07:19:31] 1.5- View data that returned from API
[2023-07-04 07:19:31] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:19:31] 1.7- get data of each project to select 
[2023-07-04 07:19:31] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:19:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:19:31] 1.10- check project update number [PUN]if not found
[2023-07-04 07:19:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:19:31] 3.9- Finish cron_job Function
[2023-07-04 07:22:15] 1.1- Start cron_job Function
[2023-07-04 07:22:15] 1.2-request Api_url $api_url
[2023-07-04 07:22:15] 1.3-store events of the jop periodically during process 
[2023-07-04 07:22:15] 1.4- fetch data from Api
[2023-07-04 07:22:15] 1.5- View data that returned from API
[2023-07-04 07:22:15] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:22:15] 1.7- get data of each project to select 
[2023-07-04 07:22:15] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:22:15] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:22:15] 1.10- check project update number [PUN]if not found
[2023-07-04 07:22:15] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:22:15] 3.9- Finish cron_job Function
[2023-07-04 07:22:36] 1.1- Start cron_job Function
[2023-07-04 07:22:36] 1.2-request Api_url $api_url
[2023-07-04 07:22:36] 1.3-store events of the jop periodically during process 
[2023-07-04 07:22:36] 1.4- fetch data from Api
[2023-07-04 07:22:36] 1.5- View data that returned from API
[2023-07-04 07:22:36] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:22:36] 1.7- get data of each project to select 
[2023-07-04 07:22:36] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:22:36] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:22:36] 1.10- check project update number [PUN]if not found
[2023-07-04 07:22:36] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:22:36] 3.9- Finish cron_job Function
[2023-07-04 07:23:43] 1.1- Start cron_job Function
[2023-07-04 07:23:43] 1.2-request Api_url $api_url
[2023-07-04 07:23:43] 1.3-store events of the jop periodically during process 
[2023-07-04 07:23:43] 1.4- fetch data from Api
[2023-07-04 07:23:43] 1.5- View data that returned from API
[2023-07-04 07:23:43] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:23:43] 1.7- get data of each project to select 
[2023-07-04 07:23:43] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:23:43] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:23:43] 1.10- check project update number [PUN]if not found
[2023-07-04 07:23:43] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:23:43] 3.9- Finish cron_job Function
[2023-07-04 07:24:30] 1.1- Start cron_job Function
[2023-07-04 07:24:30] 1.2-request Api_url $api_url
[2023-07-04 07:24:30] 1.3-store events of the jop periodically during process 
[2023-07-04 07:24:30] 1.4- fetch data from Api
[2023-07-04 07:24:30] 1.5- View data that returned from API
[2023-07-04 07:24:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:24:30] 1.7- get data of each project to select 
[2023-07-04 07:24:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:24:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:24:30] 1.10- check project update number [PUN]if not found
[2023-07-04 07:24:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:24:30] 3.9- Finish cron_job Function
[2023-07-04 07:25:32] 1.1- Start cron_job Function
[2023-07-04 07:25:32] 1.2-request Api_url $api_url
[2023-07-04 07:25:33] 1.3-store events of the jop periodically during process 
[2023-07-04 07:25:33] 1.4- fetch data from Api
[2023-07-04 07:25:33] 1.5- View data that returned from API
[2023-07-04 07:25:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:25:33] 1.7- get data of each project to select 
[2023-07-04 07:25:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:25:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:25:33] 1.10- check project update number [PUN]if not found
[2023-07-04 07:25:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:25:33] 3.9- Finish cron_job Function
[2023-07-04 07:26:46] 1.1- Start cron_job Function
[2023-07-04 07:26:46] 1.2-request Api_url $api_url
[2023-07-04 07:26:47] 1.3-store events of the jop periodically during process 
[2023-07-04 07:26:47] 1.4- fetch data from Api
[2023-07-04 07:26:47] 1.5- View data that returned from API
[2023-07-04 07:26:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:26:47] 1.7- get data of each project to select 
[2023-07-04 07:26:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:26:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:26:47] 1.10- check project update number [PUN]if not found
[2023-07-04 07:26:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:26:47] 3.9- Finish cron_job Function
[2023-07-04 07:27:56] 1.1- Start cron_job Function
[2023-07-04 07:27:56] 1.2-request Api_url $api_url
[2023-07-04 07:27:56] 1.3-store events of the jop periodically during process 
[2023-07-04 07:27:56] 1.4- fetch data from Api
[2023-07-04 07:27:56] 1.5- View data that returned from API
[2023-07-04 07:27:56] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:27:56] 1.7- get data of each project to select 
[2023-07-04 07:27:56] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:27:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:27:56] 1.10- check project update number [PUN]if not found
[2023-07-04 07:27:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:27:56] 3.9- Finish cron_job Function
[2023-07-04 07:29:04] 1.1- Start cron_job Function
[2023-07-04 07:29:04] 1.2-request Api_url $api_url
[2023-07-04 07:29:04] 1.3-store events of the jop periodically during process 
[2023-07-04 07:29:04] 1.4- fetch data from Api
[2023-07-04 07:29:04] 1.5- View data that returned from API
[2023-07-04 07:29:04] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:29:04] 1.7- get data of each project to select 
[2023-07-04 07:29:04] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:29:04] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:29:04] 1.10- check project update number [PUN]if not found
[2023-07-04 07:29:04] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:29:04] 3.9- Finish cron_job Function
[2023-07-04 07:29:56] 1.1- Start cron_job Function
[2023-07-04 07:29:56] 1.2-request Api_url $api_url
[2023-07-04 07:29:56] 1.3-store events of the jop periodically during process 
[2023-07-04 07:29:56] 1.4- fetch data from Api
[2023-07-04 07:29:56] 1.5- View data that returned from API
[2023-07-04 07:29:56] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:29:56] 1.7- get data of each project to select 
[2023-07-04 07:29:56] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:29:56] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:29:56] 1.10- check project update number [PUN]if not found
[2023-07-04 07:29:56] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:29:56] 3.9- Finish cron_job Function
[2023-07-04 07:31:05] 1.1- Start cron_job Function
[2023-07-04 07:31:05] 1.2-request Api_url $api_url
[2023-07-04 07:31:06] 1.3-store events of the jop periodically during process 
[2023-07-04 07:31:06] 1.4- fetch data from Api
[2023-07-04 07:31:06] 1.5- View data that returned from API
[2023-07-04 07:31:06] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:31:06] 1.7- get data of each project to select 
[2023-07-04 07:31:06] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:31:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:31:06] 1.10- check project update number [PUN]if not found
[2023-07-04 07:31:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:31:06] 3.9- Finish cron_job Function
[2023-07-04 07:31:57] 1.1- Start cron_job Function
[2023-07-04 07:31:57] 1.2-request Api_url $api_url
[2023-07-04 07:31:57] 1.3-store events of the jop periodically during process 
[2023-07-04 07:31:57] 1.4- fetch data from Api
[2023-07-04 07:31:57] 1.5- View data that returned from API
[2023-07-04 07:31:57] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:31:57] 1.7- get data of each project to select 
[2023-07-04 07:31:57] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:31:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:31:57] 1.10- check project update number [PUN]if not found
[2023-07-04 07:31:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:31:57] 3.9- Finish cron_job Function
[2023-07-04 07:33:06] 1.1- Start cron_job Function
[2023-07-04 07:33:06] 1.2-request Api_url $api_url
[2023-07-04 07:33:06] 1.3-store events of the jop periodically during process 
[2023-07-04 07:33:06] 1.4- fetch data from Api
[2023-07-04 07:33:06] 1.5- View data that returned from API
[2023-07-04 07:33:06] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:33:06] 1.7- get data of each project to select 
[2023-07-04 07:33:06] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:33:06] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:33:06] 1.10- check project update number [PUN]if not found
[2023-07-04 07:33:06] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:33:06] 3.9- Finish cron_job Function
[2023-07-04 07:33:50] 1.1- Start cron_job Function
[2023-07-04 07:33:50] 1.2-request Api_url $api_url
[2023-07-04 07:33:51] 1.3-store events of the jop periodically during process 
[2023-07-04 07:33:51] 1.4- fetch data from Api
[2023-07-04 07:33:51] 1.5- View data that returned from API
[2023-07-04 07:33:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:33:51] 1.7- get data of each project to select 
[2023-07-04 07:33:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:33:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:33:51] 1.10- check project update number [PUN]if not found
[2023-07-04 07:33:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:33:51] 3.9- Finish cron_job Function
[2023-07-04 07:34:32] 1.1- Start cron_job Function
[2023-07-04 07:34:32] 1.2-request Api_url $api_url
[2023-07-04 07:34:33] 1.3-store events of the jop periodically during process 
[2023-07-04 07:34:33] 1.4- fetch data from Api
[2023-07-04 07:34:33] 1.5- View data that returned from API
[2023-07-04 07:34:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:34:33] 1.7- get data of each project to select 
[2023-07-04 07:34:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:34:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:34:33] 1.10- check project update number [PUN]if not found
[2023-07-04 07:34:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:34:33] 3.9- Finish cron_job Function
[2023-07-04 07:35:52] 1.1- Start cron_job Function
[2023-07-04 07:35:52] 1.2-request Api_url $api_url
[2023-07-04 07:35:53] 1.3-store events of the jop periodically during process 
[2023-07-04 07:35:53] 1.4- fetch data from Api
[2023-07-04 07:35:53] 1.5- View data that returned from API
[2023-07-04 07:35:53] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:35:53] 1.7- get data of each project to select 
[2023-07-04 07:35:53] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:35:53] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:35:53] 1.10- check project update number [PUN]if not found
[2023-07-04 07:35:53] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:35:53] 3.9- Finish cron_job Function
[2023-07-04 07:36:50] 1.1- Start cron_job Function
[2023-07-04 07:36:50] 1.2-request Api_url $api_url
[2023-07-04 07:36:51] 1.3-store events of the jop periodically during process 
[2023-07-04 07:36:51] 1.4- fetch data from Api
[2023-07-04 07:36:51] 1.5- View data that returned from API
[2023-07-04 07:36:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:36:51] 1.7- get data of each project to select 
[2023-07-04 07:36:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:36:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:36:51] 1.10- check project update number [PUN]if not found
[2023-07-04 07:36:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:36:51] 3.9- Finish cron_job Function
[2023-07-04 07:39:07] 1.1- Start cron_job Function
[2023-07-04 07:39:07] 1.2-request Api_url $api_url
[2023-07-04 07:39:08] 1.3-store events of the jop periodically during process 
[2023-07-04 07:39:08] 1.4- fetch data from Api
[2023-07-04 07:39:08] 1.5- View data that returned from API
[2023-07-04 07:39:08] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:39:08] 1.7- get data of each project to select 
[2023-07-04 07:39:08] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:39:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:39:08] 1.10- check project update number [PUN]if not found
[2023-07-04 07:39:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:39:08] 3.9- Finish cron_job Function
[2023-07-04 07:41:07] 1.1- Start cron_job Function
[2023-07-04 07:41:07] 1.2-request Api_url $api_url
[2023-07-04 07:41:08] 1.3-store events of the jop periodically during process 
[2023-07-04 07:41:08] 1.4- fetch data from Api
[2023-07-04 07:41:08] 1.5- View data that returned from API
[2023-07-04 07:41:08] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:41:08] 1.7- get data of each project to select 
[2023-07-04 07:41:08] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:41:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:41:08] 1.10- check project update number [PUN]if not found
[2023-07-04 07:41:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:41:08] 3.9- Finish cron_job Function
[2023-07-04 07:43:07] 1.1- Start cron_job Function
[2023-07-04 07:43:07] 1.2-request Api_url $api_url
[2023-07-04 07:43:08] 1.3-store events of the jop periodically during process 
[2023-07-04 07:43:08] 1.4- fetch data from Api
[2023-07-04 07:43:08] 1.5- View data that returned from API
[2023-07-04 07:43:08] 1.6- get and View projects & tags that returned from  API
[2023-07-04 07:43:08] 1.7- get data of each project to select 
[2023-07-04 07:43:08] 1.8- The selected project Name:my android. id: 7
[2023-07-04 07:43:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 07:43:08] 1.10- check project update number [PUN]if not found
[2023-07-04 07:43:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 07:43:08] 3.9- Finish cron_job Function
[2023-07-04 08:08:25] 1.1- Start cron_job Function
[2023-07-04 08:08:25] 1.2-request Api_url $api_url
[2023-07-04 08:08:25] 1.3-store events of the jop periodically during process 
[2023-07-04 08:08:25] 1.4- fetch data from Api
[2023-07-04 08:08:25] 1.5- View data that returned from API
[2023-07-04 08:08:25] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:08:25] 1.7- get data of each project to select 
[2023-07-04 08:08:25] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:08:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:08:25] 1.10- check project update number [PUN]if not found
[2023-07-04 08:08:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:08:25] 3.9- Finish cron_job Function
[2023-07-04 08:09:22] 1.1- Start cron_job Function
[2023-07-04 08:09:22] 1.2-request Api_url $api_url
[2023-07-04 08:09:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:09:23] 1.4- fetch data from Api
[2023-07-04 08:09:23] 1.5- View data that returned from API
[2023-07-04 08:09:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:09:23] 1.7- get data of each project to select 
[2023-07-04 08:09:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:09:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:09:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:09:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:09:23] 3.9- Finish cron_job Function
[2023-07-04 08:10:22] 1.1- Start cron_job Function
[2023-07-04 08:10:22] 1.2-request Api_url $api_url
[2023-07-04 08:10:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:10:23] 1.4- fetch data from Api
[2023-07-04 08:10:23] 1.5- View data that returned from API
[2023-07-04 08:10:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:10:23] 1.7- get data of each project to select 
[2023-07-04 08:10:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:10:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:10:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:10:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:10:23] 3.9- Finish cron_job Function
[2023-07-04 08:11:22] 1.1- Start cron_job Function
[2023-07-04 08:11:22] 1.2-request Api_url $api_url
[2023-07-04 08:11:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:11:23] 1.4- fetch data from Api
[2023-07-04 08:11:23] 1.5- View data that returned from API
[2023-07-04 08:11:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:11:23] 1.7- get data of each project to select 
[2023-07-04 08:11:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:11:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:11:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:11:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:11:23] 3.9- Finish cron_job Function
[2023-07-04 08:12:22] 1.1- Start cron_job Function
[2023-07-04 08:12:22] 1.2-request Api_url $api_url
[2023-07-04 08:12:24] 1.3-store events of the jop periodically during process 
[2023-07-04 08:12:24] 1.4- fetch data from Api
[2023-07-04 08:12:24] 1.5- View data that returned from API
[2023-07-04 08:12:24] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:12:24] 1.7- get data of each project to select 
[2023-07-04 08:12:24] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:12:24] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:12:24] 1.10- check project update number [PUN]if not found
[2023-07-04 08:12:24] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:12:24] 3.9- Finish cron_job Function
[2023-07-04 08:13:23] 1.1- Start cron_job Function
[2023-07-04 08:13:23] 1.2-request Api_url $api_url
[2023-07-04 08:13:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:13:23] 1.4- fetch data from Api
[2023-07-04 08:13:23] 1.5- View data that returned from API
[2023-07-04 08:13:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:13:23] 1.7- get data of each project to select 
[2023-07-04 08:13:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:13:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:13:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:13:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:13:23] 3.9- Finish cron_job Function
[2023-07-04 08:14:22] 1.1- Start cron_job Function
[2023-07-04 08:14:22] 1.2-request Api_url $api_url
[2023-07-04 08:14:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:14:23] 1.4- fetch data from Api
[2023-07-04 08:14:23] 1.5- View data that returned from API
[2023-07-04 08:14:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:14:23] 1.7- get data of each project to select 
[2023-07-04 08:14:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:14:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:14:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:14:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:14:23] 3.9- Finish cron_job Function
[2023-07-04 08:15:22] 1.1- Start cron_job Function
[2023-07-04 08:15:22] 1.2-request Api_url $api_url
[2023-07-04 08:15:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:15:23] 1.4- fetch data from Api
[2023-07-04 08:15:23] 1.5- View data that returned from API
[2023-07-04 08:15:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:15:23] 1.7- get data of each project to select 
[2023-07-04 08:15:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:15:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:15:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:15:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:15:23] 3.9- Finish cron_job Function
[2023-07-04 08:16:22] 1.1- Start cron_job Function
[2023-07-04 08:16:22] 1.2-request Api_url $api_url
[2023-07-04 08:16:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:16:23] 1.4- fetch data from Api
[2023-07-04 08:16:23] 1.5- View data that returned from API
[2023-07-04 08:16:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:16:23] 1.7- get data of each project to select 
[2023-07-04 08:16:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:16:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:16:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:16:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:16:23] 3.9- Finish cron_job Function
[2023-07-04 08:17:22] 1.1- Start cron_job Function
[2023-07-04 08:17:22] 1.2-request Api_url $api_url
[2023-07-04 08:17:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:17:23] 1.4- fetch data from Api
[2023-07-04 08:17:23] 1.5- View data that returned from API
[2023-07-04 08:17:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:17:23] 1.7- get data of each project to select 
[2023-07-04 08:17:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:17:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:17:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:17:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:17:23] 3.9- Finish cron_job Function
[2023-07-04 08:18:23] 1.1- Start cron_job Function
[2023-07-04 08:18:23] 1.2-request Api_url $api_url
[2023-07-04 08:18:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:18:23] 1.4- fetch data from Api
[2023-07-04 08:18:23] 1.5- View data that returned from API
[2023-07-04 08:18:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:18:23] 1.7- get data of each project to select 
[2023-07-04 08:18:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:18:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:18:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:18:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:18:23] 3.9- Finish cron_job Function
[2023-07-04 08:19:22] 1.1- Start cron_job Function
[2023-07-04 08:19:22] 1.2-request Api_url $api_url
[2023-07-04 08:19:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:19:23] 1.4- fetch data from Api
[2023-07-04 08:19:23] 1.5- View data that returned from API
[2023-07-04 08:19:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:19:23] 1.7- get data of each project to select 
[2023-07-04 08:19:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:19:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:19:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:19:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:19:23] 3.9- Finish cron_job Function
[2023-07-04 08:20:23] 1.1- Start cron_job Function
[2023-07-04 08:20:23] 1.2-request Api_url $api_url
[2023-07-04 08:20:23] 1.3-store events of the jop periodically during process 
[2023-07-04 08:20:23] 1.4- fetch data from Api
[2023-07-04 08:20:23] 1.5- View data that returned from API
[2023-07-04 08:20:23] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:20:23] 1.7- get data of each project to select 
[2023-07-04 08:20:23] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:20:23] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:20:23] 1.10- check project update number [PUN]if not found
[2023-07-04 08:20:23] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:20:23] 3.9- Finish cron_job Function
[2023-07-04 08:20:30] 1.1- Start cron_job Function
[2023-07-04 08:20:30] 1.2-request Api_url $api_url
[2023-07-04 08:20:31] 1.3-store events of the jop periodically during process 
[2023-07-04 08:20:31] 1.4- fetch data from Api
[2023-07-04 08:20:31] 1.5- View data that returned from API
[2023-07-04 08:20:31] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:20:31] 1.7- get data of each project to select 
[2023-07-04 08:20:31] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:20:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:20:31] 1.10- check project update number [PUN]if not found
[2023-07-04 08:20:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:20:31] 3.9- Finish cron_job Function
[2023-07-04 08:22:31] 1.1- Start cron_job Function
[2023-07-04 08:22:31] 1.2-request Api_url $api_url
[2023-07-04 08:22:32] 1.3-store events of the jop periodically during process 
[2023-07-04 08:22:32] 1.4- fetch data from Api
[2023-07-04 08:22:32] 1.5- View data that returned from API
[2023-07-04 08:22:32] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:22:32] 1.7- get data of each project to select 
[2023-07-04 08:22:32] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:22:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:22:32] 1.10- check project update number [PUN]if not found
[2023-07-04 08:22:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:22:32] 3.9- Finish cron_job Function
[2023-07-04 08:23:36] 1.1- Start cron_job Function
[2023-07-04 08:23:36] 1.2-request Api_url $api_url
[2023-07-04 08:23:37] 1.3-store events of the jop periodically during process 
[2023-07-04 08:23:37] 1.4- fetch data from Api
[2023-07-04 08:23:37] 1.5- View data that returned from API
[2023-07-04 08:23:37] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:23:37] 1.7- get data of each project to select 
[2023-07-04 08:23:37] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:23:37] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:23:37] 1.10- check project update number [PUN]if not found
[2023-07-04 08:23:37] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:23:37] 3.9- Finish cron_job Function
[2023-07-04 08:24:32] 1.1- Start cron_job Function
[2023-07-04 08:24:32] 1.2-request Api_url $api_url
[2023-07-04 08:24:32] 1.3-store events of the jop periodically during process 
[2023-07-04 08:24:32] 1.4- fetch data from Api
[2023-07-04 08:24:32] 1.5- View data that returned from API
[2023-07-04 08:24:32] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:24:32] 1.7- get data of each project to select 
[2023-07-04 08:24:32] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:24:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:24:32] 1.10- check project update number [PUN]if not found
[2023-07-04 08:24:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:24:32] 3.9- Finish cron_job Function
[2023-07-04 08:26:32] 1.1- Start cron_job Function
[2023-07-04 08:26:32] 1.2-request Api_url $api_url
[2023-07-04 08:26:33] 1.3-store events of the jop periodically during process 
[2023-07-04 08:26:33] 1.4- fetch data from Api
[2023-07-04 08:26:33] 1.5- View data that returned from API
[2023-07-04 08:26:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:26:33] 1.7- get data of each project to select 
[2023-07-04 08:26:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:26:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:26:33] 1.10- check project update number [PUN]if not found
[2023-07-04 08:26:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:26:33] 3.9- Finish cron_job Function
[2023-07-04 08:28:27] 1.1- Start cron_job Function
[2023-07-04 08:28:27] 1.2-request Api_url $api_url
[2023-07-04 08:28:27] 1.3-store events of the jop periodically during process 
[2023-07-04 08:28:27] 1.4- fetch data from Api
[2023-07-04 08:28:27] 1.5- View data that returned from API
[2023-07-04 08:28:27] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:28:27] 1.7- get data of each project to select 
[2023-07-04 08:28:27] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:28:27] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:28:27] 1.10- check project update number [PUN]if not found
[2023-07-04 08:28:27] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:28:27] 3.9- Finish cron_job Function
[2023-07-04 08:28:30] 1.1- Start cron_job Function
[2023-07-04 08:28:30] 1.2-request Api_url $api_url
[2023-07-04 08:28:30] 1.3-store events of the jop periodically during process 
[2023-07-04 08:28:30] 1.4- fetch data from Api
[2023-07-04 08:28:30] 1.5- View data that returned from API
[2023-07-04 08:28:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:28:30] 1.7- get data of each project to select 
[2023-07-04 08:28:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:28:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:28:30] 1.10- check project update number [PUN]if not found
[2023-07-04 08:28:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:28:30] 3.9- Finish cron_job Function
[2023-07-04 08:30:34] 1.1- Start cron_job Function
[2023-07-04 08:30:34] 1.2-request Api_url $api_url
[2023-07-04 08:30:35] 1.3-store events of the jop periodically during process 
[2023-07-04 08:30:35] 1.4- fetch data from Api
[2023-07-04 08:30:35] 1.5- View data that returned from API
[2023-07-04 08:30:35] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:30:35] 1.7- get data of each project to select 
[2023-07-04 08:30:35] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:30:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:30:35] 1.10- check project update number [PUN]if not found
[2023-07-04 08:30:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:30:35] 3.9- Finish cron_job Function
[2023-07-04 08:32:59] 1.1- Start cron_job Function
[2023-07-04 08:32:59] 1.2-request Api_url $api_url
[2023-07-04 08:32:59] 1.3-store events of the jop periodically during process 
[2023-07-04 08:32:59] 1.4- fetch data from Api
[2023-07-04 08:32:59] 1.5- View data that returned from API
[2023-07-04 08:32:59] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:32:59] 1.7- get data of each project to select 
[2023-07-04 08:32:59] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:32:59] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:32:59] 1.10- check project update number [PUN]if not found
[2023-07-04 08:32:59] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:32:59] 3.9- Finish cron_job Function
[2023-07-04 08:36:02] 1.1- Start cron_job Function
[2023-07-04 08:36:02] 1.2-request Api_url $api_url
[2023-07-04 08:36:03] 1.3-store events of the jop periodically during process 
[2023-07-04 08:36:03] 1.4- fetch data from Api
[2023-07-04 08:36:03] 1.5- View data that returned from API
[2023-07-04 08:36:03] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:36:03] 1.7- get data of each project to select 
[2023-07-04 08:36:03] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:36:03] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:36:03] 1.10- check project update number [PUN]if not found
[2023-07-04 08:36:03] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:36:03] 3.9- Finish cron_job Function
[2023-07-04 08:39:56] 1.1- Start cron_job Function
[2023-07-04 08:39:56] 1.2-request Api_url $api_url
[2023-07-04 08:39:57] 1.3-store events of the jop periodically during process 
[2023-07-04 08:39:57] 1.4- fetch data from Api
[2023-07-04 08:39:57] 1.5- View data that returned from API
[2023-07-04 08:39:57] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:39:57] 1.7- get data of each project to select 
[2023-07-04 08:39:57] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:39:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:39:57] 1.10- check project update number [PUN]if not found
[2023-07-04 08:39:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:39:57] 3.9- Finish cron_job Function
[2023-07-04 08:40:29] 1.1- Start cron_job Function
[2023-07-04 08:40:29] 1.2-request Api_url $api_url
[2023-07-04 08:40:29] 1.3-store events of the jop periodically during process 
[2023-07-04 08:40:29] 1.4- fetch data from Api
[2023-07-04 08:40:29] 1.5- View data that returned from API
[2023-07-04 08:40:29] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:40:29] 1.7- get data of each project to select 
[2023-07-04 08:40:29] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:40:29] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:40:29] 1.10- check project update number [PUN]if not found
[2023-07-04 08:40:29] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:40:29] 3.9- Finish cron_job Function
[2023-07-04 08:41:39] 1.1- Start cron_job Function
[2023-07-04 08:41:39] 1.2-request Api_url $api_url
[2023-07-04 08:41:40] 1.3-store events of the jop periodically during process 
[2023-07-04 08:41:40] 1.4- fetch data from Api
[2023-07-04 08:41:40] 1.5- View data that returned from API
[2023-07-04 08:41:40] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:41:40] 1.7- get data of each project to select 
[2023-07-04 08:41:40] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:41:40] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:41:40] 1.10- check project update number [PUN]if not found
[2023-07-04 08:41:40] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:41:40] 2.2- check if project update number[pun > 0]
[2023-07-04 08:41:40] 2.3- store data into history table
[2023-07-04 08:41:40] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-04 08:41:42] 3.1- start_process
[2023-07-04 08:41:42] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-04 08:41:42] 3.3- if aun status > 0 
[2023-07-04 08:41:42] 3.1- start_process
[2023-07-04 08:41:42] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-04 08:41:42] 3.3- if aun status > 0 
[2023-07-04 08:41:42] 3.1- start_process
[2023-07-04 08:41:42] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-04 08:41:42] 3.3- if aun status > 0 
[2023-07-04 08:41:42] 2.7-changed the new pun 308 
[2023-07-04 08:41:42] 2.8- register updated_app in event table
[2023-07-04 08:41:42] 2.9- set status {'updated'}
[2023-07-04 08:41:42] 3.1- start_process
[2023-07-04 08:41:42] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-04 08:41:42] 3.3- if aun status > 0 
[2023-07-04 08:41:42] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 08:41:42] 3.7 check if the keys exists, update data
[2023-07-04 08:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:42] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 08:41:42] 3.7 check if the keys exists, update data
[2023-07-04 08:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:42] 3.5 check  the app have key '..' if not found 
[2023-07-04 08:41:42] 3.6- Insert  all keys 
[2023-07-04 08:41:42] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 08:41:42] 3.7 check if the keys exists, update data
[2023-07-04 08:41:42] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:42] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 08:41:42] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 08:41:43] 3.7 check if the keys exists, update data
[2023-07-04 08:41:43] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:43] 3.1- start_process
[2023-07-04 08:41:43] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-04 08:41:43] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:44] 3.1- start_process
[2023-07-04 08:41:44] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-04 08:41:44] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:45] 3.1- start_process
[2023-07-04 08:41:45] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-04 08:41:45] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:46] 3.1- start_process
[2023-07-04 08:41:46] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-04 08:41:46] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:47] 3.1- start_process
[2023-07-04 08:41:47] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-04 08:41:47] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 2.7-changed the new pun 547 
[2023-07-04 08:41:48] 2.8- register updated_app in event table
[2023-07-04 08:41:48] 2.9- set status {'updated'}
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '..' if not found 
[2023-07-04 08:41:48] 3.6- Insert  all keys 
[2023-07-04 08:41:48] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 2.7-changed the new pun 541 
[2023-07-04 08:41:48] 2.8- register updated_app in event table
[2023-07-04 08:41:48] 2.9- set status {'updated'}
[2023-07-04 08:41:48] 3.1- start_process
[2023-07-04 08:41:48] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-04 08:41:48] 3.3- if aun status > 0 
[2023-07-04 08:41:48] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '..' if not found 
[2023-07-04 08:41:48] 3.6- Insert  all keys 
[2023-07-04 08:41:48] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:48] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:48] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 08:41:48] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.file.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 2.7-changed the new pun 403 
[2023-07-04 08:41:49] 2.8- register updated_app in event table
[2023-07-04 08:41:49] 2.9- set status {'updated'}
[2023-07-04 08:41:49] 3.1- start_process
[2023-07-04 08:41:49] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-04 08:41:49] 3.3- if aun status > 0 
[2023-07-04 08:41:49] 3.5 check  the app have key '.rating.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.version.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '..' if not found 
[2023-07-04 08:41:49] 3.6- Insert  all keys 
[2023-07-04 08:41:49] 3.5 check  the app have key '.app_name.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:49] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:49] 3.5 check  the app have key '.logo.' if not found 
[2023-07-04 08:41:49] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.5 check  the app have key '.link.' if not found 
[2023-07-04 08:41:50] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.5 check  the app have key '.author.' if not found 
[2023-07-04 08:41:50] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.5 check  the app have key '.author_link.' if not found 
[2023-07-04 08:41:50] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.5 check  the app have key '.screenshots.' if not found 
[2023-07-04 08:41:50] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.5 check  the app have key '.votes.' if not found 
[2023-07-04 08:41:50] 3.7 check if the keys exists, update data
[2023-07-04 08:41:50] 3.8- update all keys & logo & thumbnail 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:50] 3.1- start_process
[2023-07-04 08:41:50] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-04 08:41:50] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:52] 3.1- start_process
[2023-07-04 08:41:52] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-04 08:41:52] 3.3- if aun status > 0 
[2023-07-04 08:41:53] 3.1- start_process
[2023-07-04 08:41:53] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-04 08:41:53] 3.3- if aun status > 0 
[2023-07-04 08:41:53] 3.1- start_process
[2023-07-04 08:41:53] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-04 08:41:53] 3.3- if aun status > 0 
[2023-07-04 08:41:53] 3.1- start_process
[2023-07-04 08:41:53] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-04 08:41:53] 3.3- if aun status > 0 
[2023-07-04 08:41:53] 3.9- Finish cron_job Function
[2023-07-04 08:42:31] 1.1- Start cron_job Function
[2023-07-04 08:42:31] 1.2-request Api_url $api_url
[2023-07-04 08:42:32] 1.3-store events of the jop periodically during process 
[2023-07-04 08:42:32] 1.4- fetch data from Api
[2023-07-04 08:42:32] 1.5- View data that returned from API
[2023-07-04 08:42:32] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:42:32] 1.7- get data of each project to select 
[2023-07-04 08:42:32] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:42:32] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:42:32] 1.10- check project update number [PUN]if not found
[2023-07-04 08:42:32] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:42:32] 3.9- Finish cron_job Function
[2023-07-04 08:57:07] 1.1- Start cron_job Function
[2023-07-04 08:57:07] 1.2-request Api_url $api_url
[2023-07-04 08:57:08] 1.3-store events of the jop periodically during process 
[2023-07-04 08:57:08] 1.4- fetch data from Api
[2023-07-04 08:57:08] 1.5- View data that returned from API
[2023-07-04 08:57:08] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:57:08] 1.7- get data of each project to select 
[2023-07-04 08:57:08] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:57:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:57:08] 1.10- check project update number [PUN]if not found
[2023-07-04 08:57:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:57:08] 2.2- check if project update number[pun > 0]
[2023-07-04 08:57:08] 2.3- store data into history table
[2023-07-04 08:57:08] 2.4- get all project name: 7 & all tag : 0 from table
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [92]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [93]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [91]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [1]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [2]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [3]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [4]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [5]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [6]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [7]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [8]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [9]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [10]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [11]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [12]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [13]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [14]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [15]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [16]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:10] 3.1- start_process
[2023-07-04 08:57:10] 3.2- get last aun and last meta_app_post for app [17]
[2023-07-04 08:57:10] 3.3- if aun status > 0 
[2023-07-04 08:57:11] 3.1- start_process
[2023-07-04 08:57:11] 3.2- get last aun and last meta_app_post for app [18]
[2023-07-04 08:57:11] 3.3- if aun status > 0 
[2023-07-04 08:57:11] 3.1- start_process
[2023-07-04 08:57:11] 3.2- get last aun and last meta_app_post for app [19]
[2023-07-04 08:57:11] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [20]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [21]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [22]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [23]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [24]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [25]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [26]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [27]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [28]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [29]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [30]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [31]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [32]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [33]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [34]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [35]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [36]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:12] 3.1- start_process
[2023-07-04 08:57:12] 3.2- get last aun and last meta_app_post for app [37]
[2023-07-04 08:57:12] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [38]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [39]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [40]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [41]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [42]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [43]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [44]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [45]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [46]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:13] 3.1- start_process
[2023-07-04 08:57:13] 3.2- get last aun and last meta_app_post for app [47]
[2023-07-04 08:57:13] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [48]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [49]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [50]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [51]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [52]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [53]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [54]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [55]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [56]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [57]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [58]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [59]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [60]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [61]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [62]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [63]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [64]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [65]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [66]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:14] 3.1- start_process
[2023-07-04 08:57:14] 3.2- get last aun and last meta_app_post for app [67]
[2023-07-04 08:57:14] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [68]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [69]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [70]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [71]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [72]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [73]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [74]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [75]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [76]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:15] 3.1- start_process
[2023-07-04 08:57:15] 3.2- get last aun and last meta_app_post for app [77]
[2023-07-04 08:57:15] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [78]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [79]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [80]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [81]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [82]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [83]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [84]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [85]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [86]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [87]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [88]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [89]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.1- start_process
[2023-07-04 08:57:16] 3.2- get last aun and last meta_app_post for app [90]
[2023-07-04 08:57:16] 3.3- if aun status > 0 
[2023-07-04 08:57:16] 3.9- Finish cron_job Function
[2023-07-04 08:57:29] 1.1- Start cron_job Function
[2023-07-04 08:57:29] 1.2-request Api_url $api_url
[2023-07-04 08:57:30] 1.3-store events of the jop periodically during process 
[2023-07-04 08:57:30] 1.4- fetch data from Api
[2023-07-04 08:57:30] 1.5- View data that returned from API
[2023-07-04 08:57:30] 1.6- get and View projects & tags that returned from  API
[2023-07-04 08:57:30] 1.7- get data of each project to select 
[2023-07-04 08:57:30] 1.8- The selected project Name:my android. id: 7
[2023-07-04 08:57:30] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 08:57:30] 1.10- check project update number [PUN]if not found
[2023-07-04 08:57:30] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 08:57:30] 3.9- Finish cron_job Function
[2023-07-04 09:05:28] 1.1- Start cron_job Function
[2023-07-04 09:05:28] 1.2-request Api_url $api_url
[2023-07-04 09:05:28] 1.3-store events of the jop periodically during process 
[2023-07-04 09:05:28] 1.4- fetch data from Api
[2023-07-04 09:05:28] 1.5- View data that returned from API
[2023-07-04 09:05:28] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:05:28] 1.7- get data of each project to select 
[2023-07-04 09:05:28] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:05:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:05:28] 1.10- check project update number [PUN]if not found
[2023-07-04 09:05:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:05:28] 3.9- Finish cron_job Function
[2023-07-04 09:06:46] 1.1- Start cron_job Function
[2023-07-04 09:06:46] 1.2-request Api_url $api_url
[2023-07-04 09:06:47] 1.3-store events of the jop periodically during process 
[2023-07-04 09:06:47] 1.4- fetch data from Api
[2023-07-04 09:06:47] 1.5- View data that returned from API
[2023-07-04 09:06:47] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:06:47] 1.7- get data of each project to select 
[2023-07-04 09:06:47] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:06:47] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:06:47] 1.10- check project update number [PUN]if not found
[2023-07-04 09:06:47] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:06:47] 3.9- Finish cron_job Function
[2023-07-04 09:07:33] 1.1- Start cron_job Function
[2023-07-04 09:07:33] 1.2-request Api_url $api_url
[2023-07-04 09:07:34] 1.3-store events of the jop periodically during process 
[2023-07-04 09:07:34] 1.4- fetch data from Api
[2023-07-04 09:07:34] 1.5- View data that returned from API
[2023-07-04 09:07:34] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:07:34] 1.7- get data of each project to select 
[2023-07-04 09:07:34] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:07:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:07:34] 1.10- check project update number [PUN]if not found
[2023-07-04 09:07:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:07:34] 3.9- Finish cron_job Function
[2023-07-04 09:10:47] 1.1- Start cron_job Function
[2023-07-04 09:10:47] 1.2-request Api_url $api_url
[2023-07-04 09:10:48] 1.3-store events of the jop periodically during process 
[2023-07-04 09:10:48] 1.4- fetch data from Api
[2023-07-04 09:10:48] 1.5- View data that returned from API
[2023-07-04 09:10:48] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:10:48] 1.7- get data of each project to select 
[2023-07-04 09:10:48] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:10:48] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:10:48] 1.10- check project update number [PUN]if not found
[2023-07-04 09:10:48] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:10:48] 3.9- Finish cron_job Function
[2023-07-04 09:13:02] 1.1- Start cron_job Function
[2023-07-04 09:13:02] 1.2-request Api_url $api_url
[2023-07-04 09:13:02] 1.3-store events of the jop periodically during process 
[2023-07-04 09:13:02] 1.4- fetch data from Api
[2023-07-04 09:13:02] 1.5- View data that returned from API
[2023-07-04 09:13:02] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:13:02] 1.7- get data of each project to select 
[2023-07-04 09:13:02] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:13:02] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:13:02] 1.10- check project update number [PUN]if not found
[2023-07-04 09:13:02] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:13:02] 3.9- Finish cron_job Function
[2023-07-04 09:14:28] 1.1- Start cron_job Function
[2023-07-04 09:14:28] 1.2-request Api_url $api_url
[2023-07-04 09:14:28] 1.3-store events of the jop periodically during process 
[2023-07-04 09:14:28] 1.4- fetch data from Api
[2023-07-04 09:14:28] 1.5- View data that returned from API
[2023-07-04 09:14:28] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:14:28] 1.7- get data of each project to select 
[2023-07-04 09:14:28] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:14:28] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:14:28] 1.10- check project update number [PUN]if not found
[2023-07-04 09:14:28] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:14:28] 3.9- Finish cron_job Function
[2023-07-04 09:16:07] 1.1- Start cron_job Function
[2023-07-04 09:16:07] 1.2-request Api_url $api_url
[2023-07-04 09:16:08] 1.3-store events of the jop periodically during process 
[2023-07-04 09:16:08] 1.4- fetch data from Api
[2023-07-04 09:16:08] 1.5- View data that returned from API
[2023-07-04 09:16:08] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:16:08] 1.7- get data of each project to select 
[2023-07-04 09:16:08] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:16:08] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:16:08] 1.10- check project update number [PUN]if not found
[2023-07-04 09:16:08] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:16:08] 3.9- Finish cron_job Function
[2023-07-04 09:17:33] 1.1- Start cron_job Function
[2023-07-04 09:17:33] 1.2-request Api_url $api_url
[2023-07-04 09:17:34] 1.3-store events of the jop periodically during process 
[2023-07-04 09:17:34] 1.4- fetch data from Api
[2023-07-04 09:17:34] 1.5- View data that returned from API
[2023-07-04 09:17:34] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:17:34] 1.7- get data of each project to select 
[2023-07-04 09:17:34] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:17:34] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:17:34] 1.10- check project update number [PUN]if not found
[2023-07-04 09:17:34] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:17:34] 3.9- Finish cron_job Function
[2023-07-04 09:18:32] 1.1- Start cron_job Function
[2023-07-04 09:18:32] 1.2-request Api_url $api_url
[2023-07-04 09:18:33] 1.3-store events of the jop periodically during process 
[2023-07-04 09:18:33] 1.4- fetch data from Api
[2023-07-04 09:18:33] 1.5- View data that returned from API
[2023-07-04 09:18:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:18:33] 1.7- get data of each project to select 
[2023-07-04 09:18:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:18:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:18:33] 1.10- check project update number [PUN]if not found
[2023-07-04 09:18:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:18:33] 3.9- Finish cron_job Function
[2023-07-04 09:19:38] 1.1- Start cron_job Function
[2023-07-04 09:19:38] 1.2-request Api_url $api_url
[2023-07-04 09:19:39] 1.3-store events of the jop periodically during process 
[2023-07-04 09:19:39] 1.4- fetch data from Api
[2023-07-04 09:19:39] 1.5- View data that returned from API
[2023-07-04 09:19:39] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:19:39] 1.7- get data of each project to select 
[2023-07-04 09:19:39] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:19:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:19:39] 1.10- check project update number [PUN]if not found
[2023-07-04 09:19:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:19:39] 3.9- Finish cron_job Function
[2023-07-04 09:20:51] 1.1- Start cron_job Function
[2023-07-04 09:20:51] 1.2-request Api_url $api_url
[2023-07-04 09:20:51] 1.3-store events of the jop periodically during process 
[2023-07-04 09:20:51] 1.4- fetch data from Api
[2023-07-04 09:20:51] 1.5- View data that returned from API
[2023-07-04 09:20:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:20:51] 1.7- get data of each project to select 
[2023-07-04 09:20:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:20:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:20:51] 1.10- check project update number [PUN]if not found
[2023-07-04 09:20:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:20:51] 3.9- Finish cron_job Function
[2023-07-04 09:21:56] 1.1- Start cron_job Function
[2023-07-04 09:21:56] 1.2-request Api_url $api_url
[2023-07-04 09:21:57] 1.3-store events of the jop periodically during process 
[2023-07-04 09:21:57] 1.4- fetch data from Api
[2023-07-04 09:21:57] 1.5- View data that returned from API
[2023-07-04 09:21:57] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:21:57] 1.7- get data of each project to select 
[2023-07-04 09:21:57] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:21:57] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:21:57] 1.10- check project update number [PUN]if not found
[2023-07-04 09:21:57] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:21:57] 3.9- Finish cron_job Function
[2023-07-04 09:22:50] 1.1- Start cron_job Function
[2023-07-04 09:22:50] 1.2-request Api_url $api_url
[2023-07-04 09:22:51] 1.3-store events of the jop periodically during process 
[2023-07-04 09:22:51] 1.4- fetch data from Api
[2023-07-04 09:22:51] 1.5- View data that returned from API
[2023-07-04 09:22:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:22:51] 1.7- get data of each project to select 
[2023-07-04 09:22:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:22:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:22:51] 1.10- check project update number [PUN]if not found
[2023-07-04 09:22:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:22:51] 3.9- Finish cron_job Function
[2023-07-04 09:34:24] 1.1- Start cron_job Function
[2023-07-04 09:34:24] 1.2-request Api_url $api_url
[2023-07-04 09:34:25] 1.3-store events of the jop periodically during process 
[2023-07-04 09:34:25] 1.4- fetch data from Api
[2023-07-04 09:34:25] 1.5- View data that returned from API
[2023-07-04 09:34:25] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:34:25] 1.7- get data of each project to select 
[2023-07-04 09:34:25] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:34:25] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:34:25] 1.10- check project update number [PUN]if not found
[2023-07-04 09:34:25] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:34:25] 3.9- Finish cron_job Function
[2023-07-04 09:34:39] 1.1- Start cron_job Function
[2023-07-04 09:34:39] 1.2-request Api_url $api_url
[2023-07-04 09:34:39] 1.3-store events of the jop periodically during process 
[2023-07-04 09:34:39] 1.4- fetch data from Api
[2023-07-04 09:34:39] 1.5- View data that returned from API
[2023-07-04 09:34:39] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:34:39] 1.7- get data of each project to select 
[2023-07-04 09:34:39] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:34:39] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:34:39] 1.10- check project update number [PUN]if not found
[2023-07-04 09:34:39] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:34:39] 3.9- Finish cron_job Function
[2023-07-04 09:37:07] 1.1- Start cron_job Function
[2023-07-04 09:37:07] 1.2-request Api_url $api_url
[2023-07-04 09:37:07] 1.3-store events of the jop periodically during process 
[2023-07-04 09:37:07] 1.4- fetch data from Api
[2023-07-04 09:37:07] 1.5- View data that returned from API
[2023-07-04 09:37:07] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:37:07] 1.7- get data of each project to select 
[2023-07-04 09:37:07] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:37:07] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:37:07] 1.10- check project update number [PUN]if not found
[2023-07-04 09:37:07] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:37:07] 3.9- Finish cron_job Function
[2023-07-04 09:40:08] 1.1- Start cron_job Function
[2023-07-04 09:40:08] 1.2-request Api_url $api_url
[2023-07-04 09:40:09] 1.3-store events of the jop periodically during process 
[2023-07-04 09:40:09] 1.4- fetch data from Api
[2023-07-04 09:40:09] 1.5- View data that returned from API
[2023-07-04 09:40:09] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:40:09] 1.7- get data of each project to select 
[2023-07-04 09:40:09] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:40:09] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:40:09] 1.10- check project update number [PUN]if not found
[2023-07-04 09:40:09] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:40:09] 3.9- Finish cron_job Function
[2023-07-04 09:40:34] 1.1- Start cron_job Function
[2023-07-04 09:40:34] 1.2-request Api_url $api_url
[2023-07-04 09:40:35] 1.3-store events of the jop periodically during process 
[2023-07-04 09:40:35] 1.4- fetch data from Api
[2023-07-04 09:40:35] 1.5- View data that returned from API
[2023-07-04 09:40:35] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:40:35] 1.7- get data of each project to select 
[2023-07-04 09:40:35] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:40:35] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:40:35] 1.10- check project update number [PUN]if not found
[2023-07-04 09:40:35] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:40:35] 3.9- Finish cron_job Function
[2023-07-04 09:42:16] 1.1- Start cron_job Function
[2023-07-04 09:42:16] 1.2-request Api_url $api_url
[2023-07-04 09:42:17] 1.3-store events of the jop periodically during process 
[2023-07-04 09:42:17] 1.4- fetch data from Api
[2023-07-04 09:42:17] 1.5- View data that returned from API
[2023-07-04 09:42:17] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:42:17] 1.7- get data of each project to select 
[2023-07-04 09:42:17] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:42:17] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:42:17] 1.10- check project update number [PUN]if not found
[2023-07-04 09:42:17] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:42:17] 3.9- Finish cron_job Function
[2023-07-04 09:42:50] 1.1- Start cron_job Function
[2023-07-04 09:42:50] 1.2-request Api_url $api_url
[2023-07-04 09:42:51] 1.3-store events of the jop periodically during process 
[2023-07-04 09:42:51] 1.4- fetch data from Api
[2023-07-04 09:42:51] 1.5- View data that returned from API
[2023-07-04 09:42:51] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:42:51] 1.7- get data of each project to select 
[2023-07-04 09:42:51] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:42:51] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:42:51] 1.10- check project update number [PUN]if not found
[2023-07-04 09:42:51] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:42:51] 3.9- Finish cron_job Function
[2023-07-04 09:43:30] 1.1- Start cron_job Function
[2023-07-04 09:43:30] 1.2-request Api_url $api_url
[2023-07-04 09:43:31] 1.3-store events of the jop periodically during process 
[2023-07-04 09:43:31] 1.4- fetch data from Api
[2023-07-04 09:43:31] 1.5- View data that returned from API
[2023-07-04 09:43:31] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:43:31] 1.7- get data of each project to select 
[2023-07-04 09:43:31] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:43:31] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:43:31] 1.10- check project update number [PUN]if not found
[2023-07-04 09:43:31] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:43:31] 3.9- Finish cron_job Function
[2023-07-04 09:47:32] 1.1- Start cron_job Function
[2023-07-04 09:47:32] 1.2-request Api_url $api_url
[2023-07-04 09:47:33] 1.3-store events of the jop periodically during process 
[2023-07-04 09:47:33] 1.4- fetch data from Api
[2023-07-04 09:47:33] 1.5- View data that returned from API
[2023-07-04 09:47:33] 1.6- get and View projects & tags that returned from  API
[2023-07-04 09:47:33] 1.7- get data of each project to select 
[2023-07-04 09:47:33] 1.8- The selected project Name:my android. id: 7
[2023-07-04 09:47:33] 1.9- Update or insert this Project:my android in setting as necessary to deal with it 
[2023-07-04 09:47:33] 1.10- check project update number [PUN]if not found
[2023-07-04 09:47:33] 2.1- [update PUN] check if [PUN] changed :  to update it
[2023-07-04 09:47:33] 3.9- Finish cron_job Function
